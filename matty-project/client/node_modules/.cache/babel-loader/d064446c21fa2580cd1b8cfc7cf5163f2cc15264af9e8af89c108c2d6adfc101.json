{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HANDLE_SIZE = 16;\nlet nextId = 1;\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst getDefaultSize = (type, text, ctx) => {\n  if (type === \"rectangle\") return {\n    w: 120,\n    h: 80\n  };\n  if (type === \"square\" || type === \"circle\") return {\n    w: 100,\n    h: 100\n  };\n  if (type === \"oval\") return {\n    w: 120,\n    h: 80\n  };\n  if (type === \"image\") return {\n    w: 200,\n    h: 200\n  };\n  if (type === \"text\") {\n    ctx.font = \"24px Arial\";\n    return {\n      w: ctx.measureText(text).width,\n      h: 32,\n      fontSize: 24\n    };\n  }\n  return {\n    w: 120,\n    h: 80\n  };\n};\nconst CanvasEditor = ({\n  initialData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [designName, setDesignName] = useState(\"\");\n  const [selectedShape, setSelectedShape] = useState(\"rectangle\");\n  const [shapeColor, setShapeColor] = useState(\"#4f46e5\");\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState(\"#111827\");\n  const [pencilColor, setPencilColor] = useState(\"#333\");\n  const [brushSize, setBrushSize] = useState(2);\n  const [fontFamily, setFontFamily] = useState(\"Arial\");\n  const [selectedIdx, setSelectedIdx] = useState(null);\n  const [history, setHistory] = useState([{\n    elements: [],\n    lines: [],\n    title: \"\"\n  }]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const [imageCache, setImageCache] = useState({});\n  const {\n    elements,\n    lines,\n    title\n  } = history[historyIndex];\n\n  // Load initial data\n  useEffect(() => {\n    if (initialData) {\n      var _initialData$json, _initialData$json2;\n      setHistory([{\n        elements: (initialData === null || initialData === void 0 ? void 0 : (_initialData$json = initialData.json) === null || _initialData$json === void 0 ? void 0 : _initialData$json.elements) || [],\n        lines: (initialData === null || initialData === void 0 ? void 0 : (_initialData$json2 = initialData.json) === null || _initialData$json2 === void 0 ? void 0 : _initialData$json2.lines) || [],\n        title: (initialData === null || initialData === void 0 ? void 0 : initialData.title) || \"\"\n      }]);\n      setHistoryIndex(0);\n      setDesignName((initialData === null || initialData === void 0 ? void 0 : initialData.title) || \"\");\n    }\n  }, [initialData]);\n\n  // Cache images\n  useEffect(() => {\n    elements.forEach(el => {\n      if (el.type === \"image\" && el.src && !imageCache[el.id]) {\n        const img = new window.Image();\n        img.src = el.src;\n        img.onload = () => setImageCache(c => ({\n          ...c,\n          [el.id]: img\n        }));\n      }\n    });\n  }, [elements, imageCache]);\n\n  // Draw to canvas\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.lineWidth = 2;\n    elements.forEach((el, idx) => {\n      ctx.save();\n      const w = el.w,\n        h = el.h;\n      const cx = el.x + w / 2;\n      const cy = el.y + h / 2;\n      ctx.translate(cx, cy);\n      ctx.rotate((el.rotation || 0) * Math.PI / 180);\n      ctx.translate(-cx, -cy);\n      if (el.type === \"image\") {\n        const img = imageCache[el.id];\n        if (img) ctx.drawImage(img, el.x, el.y, w, h);\n      } else if (el.type === \"text\") {\n        ctx.font = `${el.fontSize || 24}px ${el.fontFamily || \"Arial\"}`;\n        ctx.fillStyle = el.color;\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\n      } else {\n        ctx.fillStyle = el.color;\n        switch (el.type) {\n          case \"rectangle\":\n          case \"square\":\n            ctx.fillRect(el.x, el.y, w, h);\n            break;\n          case \"circle\":\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, w / 2, h / 2, 0, 0, Math.PI * 2);\n            ctx.fill();\n            break;\n          case \"oval\":\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, w / 2, h / 2, 0, 0, Math.PI * 2);\n            ctx.fill();\n            break;\n          case \"triangle\":\n            ctx.beginPath();\n            ctx.moveTo(el.x + w / 2, el.y);\n            ctx.lineTo(el.x + w, el.y + h);\n            ctx.lineTo(el.x, el.y + h);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case \"parallelogram\":\n            ctx.beginPath();\n            ctx.moveTo(el.x + 20, el.y + h);\n            ctx.lineTo(el.x + w + 20, el.y + h);\n            ctx.lineTo(el.x + w, el.y);\n            ctx.lineTo(el.x, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case \"rhombus\":\n            ctx.beginPath();\n            ctx.moveTo(el.x + w / 2, el.y);\n            ctx.lineTo(el.x + w, el.y + h / 2);\n            ctx.lineTo(el.x + w / 2, el.y + h);\n            ctx.lineTo(el.x, el.y + h / 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case \"trapezoid\":\n            ctx.beginPath();\n            ctx.moveTo(el.x + 20, el.y + h);\n            ctx.lineTo(el.x + w - 20, el.y + h);\n            ctx.lineTo(el.x + w, el.y);\n            ctx.lineTo(el.x, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case \"kite\":\n            ctx.beginPath();\n            ctx.moveTo(el.x + w / 2, el.y);\n            ctx.lineTo(el.x + w, el.y + h / 2);\n            ctx.lineTo(el.x + w / 2, el.y + h);\n            ctx.lineTo(el.x, el.y + h / 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case \"pentagon\":\n          case \"hexagon\":\n          case \"heptagon\":\n          case \"octagon\":\n          case \"nonagon\":\n          case \"decagon\":\n            const sides = {\n              pentagon: 5,\n              hexagon: 6,\n              heptagon: 7,\n              octagon: 8,\n              nonagon: 9,\n              decagon: 10\n            }[el.type];\n            drawPolygon(ctx, cx, cy, Math.min(w, h) / 2, sides, el.color);\n            break;\n          default:\n            break;\n        }\n      }\n      if (idx === selectedIdx) {\n        ctx.strokeStyle = \"#f59e42\";\n        ctx.lineWidth = 2;\n        ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      if (line.points.length < 2) return;\n      ctx.save();\n      ctx.lineCap = \"round\";\n      ctx.lineJoin = \"round\";\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\n      ctx.beginPath();\n      ctx.moveTo(line.points[0][0], line.points[0][1]);\n      line.points.forEach(([x, y]) => {\n        ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.restore();\n    });\n  }, [elements, lines, selectedIdx, imageCache]);\n\n  // Other utility functions: drawHandles, saveState, etc.\n  function drawHandles(ctx, x, y) {\n    const positions = [[-HANDLE_SIZE / 2, -HANDLE_SIZE / 2], [1 - HANDLE_SIZE / 2, -HANDLE_SIZE / 2], [-HANDLE_SIZE / 2, 1 - HANDLE_SIZE / 2], [1 - HANDLE_SIZE / 2, 1 - HANDLE_SIZE / 2]];\n    positions.forEach(([dx, dy]) => {\n      ctx.fillStyle = '#fff';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(x + dx, y + dy, HANDLE_SIZE, HANDLE_SIZE);\n      ctx.strokeRect(x + dx, y + dy, HANDLE_SIZE, HANDLE_SIZE);\n    });\n  }\n\n  // Intersection utils for handles and elements\n  function getHandleAt(el, mouseX, mouseY) {\n    const {\n      w,\n      h\n    } = el;\n    const handles = [[el.x - HANDLE_SIZE / 2, el.y - HANDLE_SIZE / 2], [el.x + w - HANDLE_SIZE / 2, el.y - HANDLE_SIZE / 2], [el.x - HANDLE_SIZE / 2, el.y + h - HANDLE_SIZE / 2], [el.x + w - HANDLE_SIZE / 2, el.y + h - HANDLE_SIZE / 2]];\n    for (let i = 0; i < handles.length; i++) {\n      const [hx, hy] = handles[i];\n      if (mouseX >= hx && mouseX <= hx + HANDLE_SIZE && mouseY >= hy && mouseY <= hy + HANDLE_SIZE) {\n        return i;\n      }\n    }\n    return null;\n  }\n  function saveState(newElements, newLines, newTitle) {\n    newTitle = newTitle || designName;\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      elements: JSON.parse(JSON.stringify(newElements)),\n      lines: JSON.parse(JSON.stringify(newLines)),\n      title: newTitle\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n    setDesignName(newTitle);\n  }\n\n  // Interaction Handlers here (mouse down, move, up) for drawing, selecting, dragging, etc.\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawingPointsRef = useRef([]);\n  const handleCanvasMouseDown = e => {\n    if (!canvasRef.current) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    let clicked = false;\n    for (let i = elements.length - 1; i >= 0; i--) {\n      const el = elements[i];\n      const handle = getHandleAt(el, mouseX, mouseY);\n      if (i === selectedIdx && handle !== null) {\n        setResizingHandle(handle);\n        clicked = true;\n        break;\n      }\n      if (mouseX >= el.x && mouseX <= el.x + el.w && mouseY >= el.y && mouseY <= el.y + el.h) {\n        setSelectedIdx(i);\n        setDragOffset({\n          x: mouseX - el.x,\n          y: mouseY - el.y\n        });\n        setIsDragging(true);\n        clicked = true;\n        break;\n      }\n    }\n    if (!clicked) setSelectedIdx(null);\n    if (drawMode || eraserMode) {\n      setIsDrawing(true);\n      drawingPointsRef.current = [[mouseX, mouseY]];\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    if (!canvasRef.current) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    if (resizingHandle !== null && selectedIdx !== null) {\n      // Resize logic\n      const el = elements[selectedIdx];\n      const newEl = {\n        ...el\n      };\n      switch (resizingHandle) {\n        case 0:\n          newEl.x = mouseX;\n          newEl.y = mouseY;\n          newEl.w = el.w + (el.x - mouseX);\n          newEl.h = el.h + (el.y - mouseY);\n          break;\n        case 1:\n          newEl.y = mouseY;\n          newEl.w = mouseX - el.x;\n          newEl.h = el.h + (el.y - mouseY);\n          break;\n        case 2:\n          newEl.x = mouseX;\n          newEl.w = el.w + (el.x - mouseX);\n          newEl.h = mouseY - el.y;\n          break;\n        case 3:\n          newEl.w = mouseX - el.x;\n          newEl.h = mouseY - el.y;\n          break;\n        default:\n          break;\n      }\n      newEl.w = Math.max(newEl.w, 20);\n      newEl.h = Math.max(newEl.h, 20);\n      if (el.type === 'text') newEl.fontSize = Math.max(newEl.h - 8, 12);\n      const newElements = elements.map((e, idx) => idx === selectedIdx ? newEl : e);\n      setHistory(h => {\n        const copy = [...h];\n        copy[historyIndex] = {\n          elements: newElements,\n          lines,\n          title\n        };\n        return copy;\n      });\n      return;\n    }\n    if (isDragging && selectedIdx !== null) {\n      const newElements = elements.map((el, idx) => {\n        if (idx === selectedIdx) return {\n          ...el,\n          x: mouseX - dragOffset.x,\n          y: mouseY - dragOffset.y\n        };else return el;\n      });\n      setHistory(h => {\n        const copy = [...h];\n        copy[historyIndex] = {\n          elements: newElements,\n          lines,\n          title\n        };\n        return copy;\n      });\n    }\n    if (isDrawing) {\n      drawingPointsRef.current.push([mouseX, mouseY]);\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\n      ctx.lineCap = \"round\";\n      ctx.lineJoin = \"round\";\n      ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\n      const points = drawingPointsRef.current;\n      ctx.beginPath();\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\n      ctx.lineTo(points[points.length - 1][0], points[points.length - 1][1]);\n      ctx.stroke();\n      ctx.globalCompositeOperation = \"source-over\";\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    if (isDrawing) {\n      const newLine = {\n        id: nextId++,\n        points: drawingPointsRef.current,\n        color: pencilColor,\n        size: brushSize,\n        mode: eraserMode ? \"eraser\" : \"draw\"\n      };\n      saveState(elements, [...lines, newLine], designName);\n    }\n    setIsDrawing(false);\n    setIsDragging(false);\n    setResizingHandle(null);\n  };\n  const addShape = () => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    const {\n      w,\n      h\n    } = getDefaultSize(selectedShape, \"\", ctx);\n    const newShape = {\n      id: nextId++,\n      type: selectedShape,\n      x: 100,\n      y: 100,\n      w,\n      h,\n      color: shapeColor,\n      rotation: 0\n    };\n    saveState([...elements, newShape], lines, designName);\n  };\n  const addText = () => {\n    const textInput = prompt(\"Enter your text\");\n    if (!textInput) return;\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.font = `24px ${fontFamily}`;\n    const {\n      w,\n      h,\n      fontSize\n    } = getDefaultSize('text', textInput, ctx);\n    const newText = {\n      id: nextId++,\n      type: 'text',\n      text: textInput,\n      x: 120,\n      y: 120,\n      w,\n      h,\n      color: textColor,\n      fontSize,\n      fontFamily,\n      rotation: 0\n    };\n    saveState([...elements, newText], lines, designName);\n  };\n  const handleUploadButton = () => {\n    fileInputRef.current && fileInputRef.current.click();\n  };\n  const handleFileChange = e => {\n    if (!e.target.files.length) return;\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const newImg = {\n        id: nextId++,\n        type: \"image\",\n        x: 100,\n        y: 100,\n        w: 200,\n        h: 200,\n        src: reader.result,\n        rotation: 0\n      };\n      saveState([...elements, newImg], lines, designName);\n    };\n    reader.readAsDataURL(file);\n    e.target.value = null;\n  };\n\n  // Undo/Redo\n  const undo = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      setSelectedIdx(null);\n    }\n  };\n  const redo = () => {\n    if (historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setSelectedIdx(null);\n    }\n  };\n  const deleteSelected = () => {\n    if (selectedIdx === null) return;\n    const newElements = elements.filter((_, idx) => idx !== selectedIdx);\n    saveState(newElements, lines, designName);\n    setSelectedIdx(null);\n  };\n  const moveElementOrder = direction => {\n    if (selectedIdx === null) return;\n    const newElements = [...elements];\n    const idx = selectedIdx;\n    if (direction === \"up\" && idx < newElements.length - 1) {\n      [newElements[idx], newElements[idx + 1]] = [newElements[idx + 1], newElements[idx]];\n      setSelectedIdx(idx + 1);\n    }\n    if (direction === \"down\" && idx > 0) {\n      [newElements[idx], newElements[idx - 1]] = [newElements[idx - 1], newElements[idx]];\n      setSelectedIdx(idx - 1);\n    }\n    saveState(newElements, lines, designName);\n  };\n  const clearCanvas = () => {\n    setHistory([{\n      elements: [],\n      lines: [],\n      title: \"\"\n    }]);\n    setHistoryIndex(0);\n    setSelectedIdx(null);\n  };\n  const downloadImage = () => {\n    if (!canvasRef.current) return;\n    const dataUrl = canvasRef.current.toDataURL(\"image/png\");\n    const link = document.createElement('a');\n    link.href = dataUrl;\n    link.download = (designName.trim() || \"canvas\") + \".png\";\n    link.click();\n  };\n\n  // Save to cloud (thumbnail and JSON)\n  const saveToCloud = async () => {\n    if (!canvasRef.current) {\n      alert('Canvas not ready');\n      return;\n    }\n    // Get PNG\n    const thumbnailData = canvasRef.current.toDataURL(\"image/png\");\n    try {\n      const thumbRes = await fetch(\"http://localhost:5000/api/upload-thumbnail\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          dataUrl: thumbnailData\n        })\n      });\n      const thumbJson = await thumbRes.json();\n      if (!thumbRes.ok) {\n        alert(\"Thumbnail upload failed: \" + thumbJson.message);\n        return;\n      }\n      const thumbnailUrl = thumbJson.url;\n\n      // Prepare JSON file\n      const designJson = {\n        title: designName || \"Untitled Design\",\n        thumbnailUrl,\n        elements,\n        lines\n      };\n      const blob = new Blob([JSON.stringify(designJson)], {\n        type: \"application/json\"\n      });\n      const file = new File([blob], (designName.trim() || \"design\") + \".json\", {\n        type: \"application/json\"\n      });\n\n      // Upload JSON file to Cloudinary\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", \"your_unsigned_upload_preset\"); // Replace with your preset\n      formData.append(\"folder\", \"canvas-json-files\");\n      const jsonRes = await fetch(\"https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/raw/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const jsonData = await jsonRes.json();\n      if (!jsonRes.ok) {\n        alert(\"Design JSON upload failed: \" + jsonData.error.message);\n        return;\n      }\n      alert(\"Design saved successfully!\");\n      console.log(\"Design JSON URL:\", jsonData.secure_url);\n    } catch (error) {\n      alert(\"Save failed: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center p-4 bg-gray-100 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-5xl font-bold\",\n        style: {\n          fontFamily: '\"Kablammo\", system-ui'\n        },\n        children: \"MATTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-gray-700 hover:underline\",\n        onClick: () => window.alert(\"About Us\"),\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-100 flex items-center gap-4 border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border px-3 py-2 rounded font-medium text-lg flex-grow\",\n        placeholder: \"Enter design name\",\n        value: designName,\n        onChange: e => {\n          setDesignName(e.target.value);\n          saveState(elements, lines, e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDrawMode(true),\n        className: `p-2 ${drawMode && !eraserMode ? 'bg-blue-100' : 'bg-gray-200'}`,\n        children: \"Pencil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEraserMode(true),\n        className: `p-2 ${eraserMode ? 'bg-blue-100' : 'bg-gray-200'}`,\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: pencilColor,\n        onChange: e => setPencilColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 1,\n        max: 30,\n        value: brushSize,\n        onChange: e => setBrushSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 5,\n        max: 50,\n        value: eraserSize,\n        onChange: e => setEraserSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedShape,\n        onChange: e => setSelectedShape(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"rectangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"oval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"parallelogram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"rhombus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"trapezoid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"kite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"pentagon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"hexagon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"heptagon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"octagon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"nonagon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"decagon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: shapeColor,\n        onChange: e => setShapeColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (selectedShape === 'image') alert(\"Please upload image!\");else {\n            const ctx = canvasRef.current.getContext('2d');\n            let size = getDefaultSize(selectedShape, \"\", ctx);\n            let el = {\n              id: nextId++,\n              type: selectedShape,\n              x: 50,\n              y: 50,\n              w: size.w,\n              h: size.h,\n              color: shapeColor,\n              rotation: 0\n            };\n            saveState([...elements, el], lines, designName);\n          }\n        },\n        children: \"Add Shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const text = prompt(\"Enter your text\");\n          if (!text) return;\n          const ctx = canvasRef.current.getContext('2d');\n          let size = getDefaultSize('text', text, ctx);\n          const el = {\n            id: nextId++,\n            type: 'text',\n            text,\n            x: 50,\n            y: 50,\n            w: size.w,\n            h: size.h,\n            color: textColor,\n            fontSize: size.fontSize,\n            fontFamily,\n            rotation: 0\n          };\n          saveState([...elements, el], lines, designName);\n        },\n        children: \"Add Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current && fileInputRef.current.click(),\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        accept: \"image/*\",\n        onChange: e => {\n          const file = e.target.files[0];\n          if (!file) return;\n          const reader = new FileReader();\n          reader.onload = () => {\n            const el = {\n              id: nextId++,\n              type: 'image',\n              x: 50,\n              y: 50,\n              w: 200,\n              h: 200,\n              src: reader.result,\n              rotation: 0\n            };\n            saveState([...elements, el], lines, designName);\n          };\n          reader.readAsDataURL(file);\n          e.target.value = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (historyIndex > 0) {\n            setHistoryIndex(historyIndex - 1);\n            setSelectedIdx(null);\n          }\n        },\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (historyIndex < history.length - 1) {\n            setHistoryIndex(historyIndex + 1);\n            setSelectedIdx(null);\n          }\n        },\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (selectedIdx !== null) {\n            const newElements = elements.filter((_, idx) => idx !== selectedIdx);\n            saveState(newElements, lines, designName);\n            setSelectedIdx(null);\n          }\n        },\n        children: \"Delete Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (selectedIdx !== null) {\n            const newElements = [...elements];\n            const idx = selectedIdx;\n            if (idx < newElements.length - 1) {\n              [newElements[idx], newElements[idx + 1]] = [newElements[idx + 1], newElements[idx]];\n              setSelectedIdx(idx + 1);\n              saveState(newElements, lines, designName);\n            }\n          }\n        },\n        children: \"Move Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (selectedIdx !== null) {\n            const newElements = [...elements];\n            const idx = selectedIdx;\n            if (idx > 0) {\n              [newElements[idx], newElements[idx - 1]] = [newElements[idx - 1], newElements[idx]];\n              setSelectedIdx(idx - 1);\n              saveState(newElements, lines, designName);\n            }\n          }\n        },\n        children: \"Move Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setHistory([{\n            elements: [],\n            lines: [],\n            title: \"\"\n          }]);\n          setHistoryIndex(0);\n          setSelectedIdx(null);\n          setDesignName('');\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (!canvasRef.current) return;\n          const link = document.createElement('a');\n          link.href = canvasRef.current.toDataURL();\n          link.download = (designName.trim() || 'canvas') + '.png';\n          link.click();\n        },\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Save to cloud function here\n          (async () => {\n            if (!canvasRef.current) return;\n            const thumbnailData = canvasRef.current.toDataURL('image/png');\n            try {\n              // Upload thumbnail\n              const thumbRes = await fetch('http://localhost:5000/api/upload-thumbnail', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify({\n                  dataUrl: thumbnailData\n                })\n              });\n              const thumbJson = await thumbRes.json();\n              if (!thumbRes.ok) throw new Error('Thumbnail upload failed');\n              const thumbnailUrl = thumbJson.url;\n\n              // Prepare JSON file\n              const designJson = {\n                title: designName,\n                thumbnailUrl,\n                elements,\n                lines\n              };\n              const blob = new Blob([JSON.stringify(designJson)], {\n                type: 'application/json'\n              });\n              const file = new File([blob], (designName.trim() || 'design') + '.json', {\n                type: 'application/json'\n              });\n\n              // Upload JSON file to Cloudinary\n              const formData = new FormData();\n              formData.append('file', file);\n              formData.append('upload_preset', 'your_unsigned_upload_preset'); // Put your unsigned preset here\n              formData.append('folder', 'canvas-json-files');\n              const jsonRes = await fetch('https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/raw/upload', {\n                method: 'POST',\n                body: formData\n              });\n              const jsonData = await jsonRes.json();\n              if (!jsonRes.ok) throw new Error(jsonData.error.message);\n              alert('Design saved successfully!');\n              console.log('Design JSON URL:', jsonData.secure_url);\n            } catch (err) {\n              alert('Save failed: ' + err.message);\n            }\n          })();\n        },\n        children: \"Save To Cloud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex justify-center items-center relative\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1000,\n        height: 700,\n        style: {\n          background: '#fff',\n          border: '1px solid #ccc',\n          cursor: drawMode || eraserMode ? 'crosshair' : 'default'\n        },\n        onMouseDown: e => {\n          if (!canvasRef.current) return;\n          const rect = canvasRef.current.getBoundingClientRect();\n          const x = e.clientX - rect.left;\n          const y = e.clientY - rect.top;\n          let clicked = false;\n          for (let i = elements.length - 1; i >= 0; i--) {\n            const el = elements[i];\n            const handle = getHandleAt(el, x, y);\n            if (i === selectedIdx && handle !== null) {\n              setResizingHandle(handle);\n              clicked = true;\n              break;\n            }\n            if (x >= el.x && x <= el.x + el.w && y >= el.y && y <= el.y + el.h) {\n              setSelectedIdx(i);\n              setDragOffset({\n                x: x - el.x,\n                y: y - el.y\n              });\n              setIsDragging(true);\n              clicked = true;\n              break;\n            }\n          }\n          if (!clicked) setSelectedIdx(null);\n          if (drawMode || eraserMode) {\n            setIsDrawing(true);\n            drawingPointsRef.current = [[x, y]];\n          }\n        },\n        onMouseMove: e => {\n          if (!canvasRef.current) return;\n          const rect = canvasRef.current.getBoundingClientRect();\n          const x = e.clientX - rect.left;\n          const y = e.clientY - rect.top;\n          if (resizingHandle !== null && selectedIdx !== null) {\n            const el = elements[selectedIdx];\n            const newEl = {\n              ...el\n            };\n            switch (resizingHandle) {\n              case 0:\n                newEl.x = x;\n                newEl.y = y;\n                newEl.w = el.w + (el.x - x);\n                newEl.h = el.h + (el.y - y);\n                break;\n              case 1:\n                newEl.y = y;\n                newEl.w = x - el.x;\n                newEl.h = el.h + (el.y - y);\n                break;\n              case 2:\n                newEl.x = x;\n                newEl.w = el.w + (el.x - x);\n                newEl.h = y - el.y;\n                break;\n              case 3:\n                newEl.w = x - el.x;\n                newEl.h = y - el.y;\n                break;\n              default:\n                break;\n            }\n            newEl.w = Math.max(newEl.w, 20);\n            newEl.h = Math.max(newEl.h, 20);\n            if (el.type === 'text') newEl.fontSize = Math.max(newEl.h - 8, 12);\n            const newEls = elements.map((v, idx) => idx === selectedIdx ? newEl : v);\n            setHistory(h => {\n              const copy = [...h];\n              copy[historyIndex] = {\n                elements: newEls,\n                lines,\n                title\n              };\n              return copy;\n            });\n            return;\n          }\n          if (isDragging && selectedIdx !== null) {\n            const newEls = elements.map((el, idx) => idx === selectedIdx ? {\n              ...el,\n              x: x - dragOffset.x,\n              y: y - dragOffset.y\n            } : el);\n            setHistory(h => {\n              const copy = [...h];\n              copy[historyIndex] = {\n                elements: newEls,\n                lines,\n                title\n              };\n              return copy;\n            });\n          }\n          if (isDrawing) {\n            drawingPointsRef.current.push([x, y]);\n            const ctx = canvasRef.current.getContext('2d');\n            ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\n            ctx.lineWidth = eraserMode ? eraserSize : brushSize;\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\n            const points = drawingPointsRef.current;\n            ctx.beginPath();\n            ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\n            ctx.lineTo(points[points.length - 1][0], points[points.length - 1][1]);\n            ctx.stroke();\n            ctx.globalCompositeOperation = \"source-over\";\n          }\n        },\n        onMouseUp: () => {\n          if (isDrawing) {\n            const newLine = {\n              id: nextId++,\n              points: drawingPointsRef.current,\n              color: pencilColor,\n              size: brushSize,\n              mode: eraserMode ? \"eraser\" : \"draw\"\n            };\n            saveState(elements, [...lines, newLine], designName);\n          }\n          setIsDrawing(false);\n          setIsDragging(false);\n          setResizingHandle(null);\n        },\n        onMouseLeave: () => {\n          if (isDrawing) {\n            const newLine = {\n              id: nextId++,\n              points: drawingPointsRef.current,\n              color: pencilColor,\n              size: brushSize,\n              mode: eraserMode ? \"eraser\" : \"draw\"\n            };\n            saveState(elements, [...lines, newLine], designName);\n          }\n          setIsDrawing(false);\n          setIsDragging(false);\n          setResizingHandle(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"qCFaKqdVmSkFic9a5fwrnNP9sZ8=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","HANDLE_SIZE","nextId","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","getDefaultSize","type","text","w","h","font","measureText","width","fontSize","CanvasEditor","initialData","_s","canvasRef","fileInputRef","designName","setDesignName","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","fontFamily","setFontFamily","selectedIdx","setSelectedIdx","history","setHistory","elements","lines","title","historyIndex","setHistoryIndex","imageCache","setImageCache","_initialData$json","_initialData$json2","json","forEach","el","src","id","img","window","Image","onload","c","current","getContext","clearRect","height","lineCap","lineJoin","lineWidth","idx","save","cx","cy","translate","rotate","rotation","drawImage","fillText","fillRect","ellipse","pentagon","hexagon","heptagon","octagon","nonagon","decagon","min","strokeStyle","strokeRect","restore","line","points","length","mode","size","globalCompositeOperation","stroke","drawHandles","positions","getHandleAt","mouseX","mouseY","handles","hx","hy","saveState","newElements","newLines","newTitle","newHistory","slice","push","JSON","parse","stringify","dragOffset","setDragOffset","resizingHandle","setResizingHandle","isDragging","setIsDragging","isDrawing","setIsDrawing","drawingPointsRef","handleCanvasMouseDown","e","rect","getBoundingClientRect","clientX","left","clientY","top","clicked","handle","handleCanvasMouseMove","newEl","max","map","copy","handleCanvasMouseUp","newLine","addShape","newShape","addText","textInput","prompt","newText","handleUploadButton","click","handleFileChange","target","files","file","reader","FileReader","newImg","result","readAsDataURL","value","undo","redo","deleteSelected","filter","_","moveElementOrder","direction","clearCanvas","downloadImage","dataUrl","toDataURL","link","document","createElement","href","download","trim","saveToCloud","alert","thumbnailData","thumbRes","fetch","method","headers","Authorization","localStorage","getItem","body","thumbJson","ok","message","thumbnailUrl","url","designJson","blob","Blob","File","formData","FormData","append","jsonRes","jsonData","error","console","log","secure_url","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","Number","ref","display","accept","Error","err","background","border","cursor","onMouseDown","onMouseMove","newEls","v","onMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst HANDLE_SIZE = 16;\r\nlet nextId = 1;\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst getDefaultSize = (type, text, ctx) => {\r\n  if (type === \"rectangle\") return { w: 120, h: 80 };\r\n  if (type === \"square\" || type === \"circle\") return { w: 100, h: 100 };\r\n  if (type === \"oval\") return { w: 120, h: 80 };\r\n  if (type === \"image\") return { w: 200, h: 200 };\r\n  if (type === \"text\") {\r\n    ctx.font = \"24px Arial\";\r\n    return { w: ctx.measureText(text).width, h: 32, fontSize: 24 };\r\n  }\r\n  return { w: 120, h: 80 };\r\n};\r\n\r\nconst CanvasEditor = ({ initialData }) => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [designName, setDesignName] = useState(\"\");\r\n  const [selectedShape, setSelectedShape] = useState(\"rectangle\");\r\n  const [shapeColor, setShapeColor] = useState(\"#4f46e5\");\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState(\"#111827\");\r\n  const [pencilColor, setPencilColor] = useState(\"#333\");\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [fontFamily, setFontFamily] = useState(\"Arial\");\r\n  \r\n  const [selectedIdx, setSelectedIdx] = useState(null);\r\n  \r\n \r\n  const [history, setHistory] = useState([{ elements: [], lines: [], title: \"\" }]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const [imageCache, setImageCache] = useState({});\r\n\r\n  const { elements, lines, title } = history[historyIndex];\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setHistory([\r\n        {\r\n          elements: initialData?.json?.elements || [],\r\n          lines: initialData?.json?.lines || [],\r\n          title: initialData?.title || \"\",\r\n        },\r\n      ]);\r\n      setHistoryIndex(0);\r\n      setDesignName(initialData?.title || \"\");\r\n    }\r\n  }, [initialData]);\r\n\r\n  // Cache images\r\n  useEffect(() => {\r\n    elements.forEach((el) => {\r\n      if (el.type === \"image\" && el.src && !imageCache[el.id]) {\r\n        const img = new window.Image();\r\n        img.src = el.src;\r\n        img.onload = () => setImageCache((c) => ({ ...c, [el.id]: img }));\r\n      }\r\n    });\r\n  }, [elements, imageCache]);\r\n\r\n  // Draw to canvas\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.lineWidth = 2;\r\n\r\n    elements.forEach((el, idx) => {\r\n      ctx.save();\r\n      const w = el.w,\r\n        h = el.h;\r\n      const cx = el.x + w / 2;\r\n      const cy = el.y + h / 2;\r\n      ctx.translate(cx, cy);\r\n      ctx.rotate(((el.rotation || 0) * Math.PI) / 180);\r\n      ctx.translate(-cx, -cy);\r\n\r\n      if (el.type === \"image\") {\r\n        const img = imageCache[el.id];\r\n        if (img) ctx.drawImage(img, el.x, el.y, w, h);\r\n      } else if (el.type === \"text\") {\r\n        ctx.font = `${el.fontSize || 24}px ${el.fontFamily || \"Arial\"}`;\r\n        ctx.fillStyle = el.color;\r\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\r\n      } else {\r\n        ctx.fillStyle = el.color;\r\n        switch (el.type) {\r\n          case \"rectangle\":\r\n          case \"square\":\r\n            ctx.fillRect(el.x, el.y, w, h);\r\n            break;\r\n          case \"circle\":\r\n            ctx.beginPath();\r\n            ctx.ellipse(cx, cy, w/2, h/2, 0, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            break;\r\n          case \"oval\":\r\n            ctx.beginPath();\r\n            ctx.ellipse(cx, cy, w / 2, h / 2, 0, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            break;\r\n          case \"triangle\":\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + w / 2, el.y);\r\n            ctx.lineTo(el.x + w, el.y + h);\r\n            ctx.lineTo(el.x, el.y + h);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case \"parallelogram\":\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + 20, el.y + h);\r\n            ctx.lineTo(el.x + w + 20, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y);\r\n            ctx.lineTo(el.x, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case \"rhombus\":\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + w / 2, el.y);\r\n            ctx.lineTo(el.x + w, el.y + h / 2);\r\n            ctx.lineTo(el.x + w / 2, el.y + h);\r\n            ctx.lineTo(el.x, el.y + h / 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case \"trapezoid\":\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + 20, el.y + h);\r\n            ctx.lineTo(el.x + w - 20, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y);\r\n            ctx.lineTo(el.x, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case \"kite\":\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + w / 2, el.y);\r\n            ctx.lineTo(el.x + w, el.y + h / 2);\r\n            ctx.lineTo(el.x + w / 2, el.y + h);\r\n            ctx.lineTo(el.x, el.y + h / 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case \"pentagon\":\r\n          case \"hexagon\":\r\n          case \"heptagon\":\r\n          case \"octagon\":\r\n          case \"nonagon\":\r\n          case \"decagon\":\r\n            const sides = {\r\n              pentagon: 5,\r\n              hexagon: 6,\r\n              heptagon: 7,\r\n              octagon: 8,\r\n              nonagon: 9,\r\n              decagon: 10,\r\n            }[el.type];\r\n            drawPolygon(ctx, cx, cy, Math.min(w, h) / 2, sides, el.color);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (idx === selectedIdx) {\r\n        ctx.strokeStyle = \"#f59e42\";\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach(line => {\r\n      if (line.points.length < 2) return;\r\n      ctx.save();\r\n      ctx.lineCap = \"round\";\r\n      ctx.lineJoin = \"round\";\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : (line.color || '#333');\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\r\n      ctx.beginPath();\r\n      ctx.moveTo(line.points[0][0], line.points[0][1]);\r\n      line.points.forEach(([x, y]) => {\r\n        ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    });\r\n\r\n  }, [elements, lines, selectedIdx, imageCache]);\r\n\r\n  // Other utility functions: drawHandles, saveState, etc.\r\n  function drawHandles(ctx, x, y) {\r\n    const positions = [\r\n      [-HANDLE_SIZE / 2, -HANDLE_SIZE / 2],\r\n      [1 - HANDLE_SIZE / 2, -HANDLE_SIZE / 2],\r\n      [-HANDLE_SIZE / 2, 1 - HANDLE_SIZE / 2],\r\n      [1 - HANDLE_SIZE / 2, 1 - HANDLE_SIZE / 2],\r\n    ];\r\n    positions.forEach(([dx, dy]) => {\r\n      ctx.fillStyle = '#fff';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth = 1;\r\n      ctx.fillRect(x + dx, y + dy, HANDLE_SIZE, HANDLE_SIZE);\r\n      ctx.strokeRect(x + dx, y + dy, HANDLE_SIZE, HANDLE_SIZE);\r\n    });\r\n  }\r\n\r\n  // Intersection utils for handles and elements\r\n  function getHandleAt(el, mouseX, mouseY) {\r\n    const { w, h } = el;\r\n    const handles = [\r\n      [el.x - HANDLE_SIZE / 2, el.y - HANDLE_SIZE / 2],\r\n      [el.x + w - HANDLE_SIZE / 2, el.y - HANDLE_SIZE / 2],\r\n      [el.x - HANDLE_SIZE / 2, el.y + h - HANDLE_SIZE / 2],\r\n      [el.x + w - HANDLE_SIZE / 2, el.y + h - HANDLE_SIZE / 2],\r\n    ];\r\n    for (let i = 0; i < handles.length; i++) {\r\n      const [hx, hy] = handles[i];\r\n      if (mouseX >= hx && mouseX <= hx + HANDLE_SIZE && mouseY >= hy && mouseY <= hy + HANDLE_SIZE) {\r\n        return i;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function saveState(newElements, newLines, newTitle) {\r\n    newTitle = newTitle || designName;\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      elements: JSON.parse(JSON.stringify(newElements)),\r\n      lines: JSON.parse(JSON.stringify(newLines)),\r\n      title: newTitle,\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n    setDesignName(newTitle);\r\n  }\r\n\r\n  // Interaction Handlers here (mouse down, move, up) for drawing, selecting, dragging, etc.\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const drawingPointsRef = useRef([]);\r\n\r\n  const handleCanvasMouseDown = (e) => {\r\n    if (!canvasRef.current) return;\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n\r\n    let clicked = false;\r\n    for (let i = elements.length - 1; i >= 0; i--) {\r\n      const el = elements[i];\r\n      const handle = getHandleAt(el, mouseX, mouseY);\r\n      if (i === selectedIdx && handle !== null) {\r\n        setResizingHandle(handle);\r\n        clicked = true;\r\n        break;\r\n      }\r\n      if (mouseX >= el.x && mouseX <= el.x + el.w && mouseY >= el.y && mouseY <= el.y + el.h) {\r\n        setSelectedIdx(i);\r\n        setDragOffset({ x: mouseX - el.x, y: mouseY - el.y });\r\n        setIsDragging(true);\r\n        clicked = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!clicked) setSelectedIdx(null);\r\n\r\n    if (drawMode || eraserMode) {\r\n      setIsDrawing(true);\r\n      drawingPointsRef.current = [[mouseX, mouseY]];\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    if (!canvasRef.current) return;\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n\r\n    if (resizingHandle !== null && selectedIdx !== null) {\r\n      // Resize logic\r\n      const el = elements[selectedIdx];\r\n      const newEl = { ...el };\r\n      switch (resizingHandle) {\r\n        case 0:\r\n          newEl.x = mouseX;\r\n          newEl.y = mouseY;\r\n          newEl.w = el.w + (el.x - mouseX);\r\n          newEl.h = el.h + (el.y - mouseY);\r\n          break;\r\n        case 1:\r\n          newEl.y = mouseY;\r\n          newEl.w = mouseX - el.x;\r\n          newEl.h = el.h + (el.y - mouseY);\r\n          break;\r\n        case 2:\r\n          newEl.x = mouseX;\r\n          newEl.w = el.w + (el.x - mouseX);\r\n          newEl.h = mouseY - el.y;\r\n          break;\r\n        case 3:\r\n          newEl.w = mouseX - el.x;\r\n          newEl.h = mouseY - el.y;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      newEl.w = Math.max(newEl.w, 20);\r\n      newEl.h = Math.max(newEl.h, 20);\r\n      if (el.type === 'text') newEl.fontSize = Math.max(newEl.h - 8, 12);\r\n\r\n      const newElements = elements.map((e, idx) => (idx === selectedIdx ? newEl : e));\r\n      setHistory((h) => {\r\n        const copy = [...h];\r\n        copy[historyIndex] = { elements: newElements, lines, title };\r\n        return copy;\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (isDragging && selectedIdx !== null) {\r\n      const newElements = elements.map((el, idx) => {\r\n        if (idx === selectedIdx) return { ...el, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y };\r\n        else return el;\r\n      });\r\n      setHistory((h) => {\r\n        const copy = [...h];\r\n        copy[historyIndex] = { elements: newElements, lines, title };\r\n        return copy;\r\n      });\r\n    }\r\n\r\n    if (isDrawing) {\r\n      drawingPointsRef.current.push([mouseX, mouseY]);\r\n      const ctx = canvasRef.current.getContext('2d');\r\n      ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\r\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\r\n      ctx.lineCap = \"round\";\r\n      ctx.lineJoin = \"round\";\r\n      ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\r\n\r\n      const points = drawingPointsRef.current;\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\r\n      ctx.lineTo(points[points.length - 1][0], points[points.length - 1][1]);\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = \"source-over\";\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseUp = () => {\r\n    if (isDrawing) {\r\n      const newLine = {\r\n        id: nextId++,\r\n        points: drawingPointsRef.current,\r\n        color: pencilColor,\r\n        size: brushSize,\r\n        mode: eraserMode ? \"eraser\" : \"draw\",\r\n      };\r\n      saveState(elements, [...lines, newLine], designName);\r\n    }\r\n    setIsDrawing(false);\r\n    setIsDragging(false);\r\n    setResizingHandle(null);\r\n  };\r\n\r\n  const addShape = () => {\r\n    if (!canvasRef.current) return;\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    const { w, h } = getDefaultSize(selectedShape, \"\", ctx);\r\n    const newShape = {\r\n      id: nextId++,\r\n      type: selectedShape,\r\n      x: 100,\r\n      y: 100,\r\n      w,\r\n      h,\r\n      color: shapeColor,\r\n      rotation: 0,\r\n    };\r\n    saveState([...elements, newShape], lines, designName);\r\n  };\r\n\r\n  const addText = () => {\r\n    const textInput = prompt(\"Enter your text\");\r\n    if (!textInput) return;\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.font = `24px ${fontFamily}`;\r\n    const { w, h, fontSize } = getDefaultSize('text', textInput, ctx);\r\n    const newText = {\r\n      id: nextId++,\r\n      type: 'text',\r\n      text: textInput,\r\n      x: 120,\r\n      y: 120,\r\n      w,\r\n      h,\r\n      color: textColor,\r\n      fontSize,\r\n      fontFamily,\r\n      rotation: 0,\r\n    };\r\n    saveState([...elements, newText], lines, designName);\r\n  };\r\n\r\n  const handleUploadButton = () => {\r\n    fileInputRef.current && fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (!e.target.files.length) return;\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const newImg = {\r\n        id: nextId++,\r\n        type: \"image\",\r\n        x: 100,\r\n        y: 100,\r\n        w: 200,\r\n        h: 200,\r\n        src: reader.result,\r\n        rotation: 0,\r\n      };\r\n      saveState([...elements, newImg], lines, designName);\r\n    }\r\n    reader.readAsDataURL(file);\r\n    e.target.value = null;\r\n  };\r\n\r\n  // Undo/Redo\r\n  const undo = () => {\r\n    if (historyIndex > 0) {\r\n      setHistoryIndex(historyIndex - 1);\r\n      setSelectedIdx(null);\r\n    }\r\n  };\r\n\r\n  const redo = () => {\r\n    if (historyIndex < history.length - 1) {\r\n      setHistoryIndex(historyIndex + 1);\r\n      setSelectedIdx(null);\r\n    }\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    if (selectedIdx === null) return;\r\n    const newElements = elements.filter((_, idx) => idx !== selectedIdx);\r\n    saveState(newElements, lines, designName);\r\n    setSelectedIdx(null);\r\n  };\r\n\r\n  const moveElementOrder = (direction) => {\r\n    if (selectedIdx === null) return;\r\n    const newElements = [...elements];\r\n    const idx = selectedIdx;\r\n    if (direction === \"up\" && idx < newElements.length - 1) {\r\n      [newElements[idx], newElements[idx + 1]] = [newElements[idx + 1], newElements[idx]];\r\n      setSelectedIdx(idx + 1);\r\n    }\r\n    if (direction === \"down\" && idx > 0) {\r\n      [newElements[idx], newElements[idx - 1]] = [newElements[idx - 1], newElements[idx]];\r\n      setSelectedIdx(idx - 1);\r\n    }\r\n    saveState(newElements, lines, designName);\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    setHistory([{ elements: [], lines: [], title: \"\" }]);\r\n    setHistoryIndex(0);\r\n    setSelectedIdx(null);\r\n  };\r\n\r\n  const downloadImage = () => {\r\n    if (!canvasRef.current) return;\r\n    const dataUrl = canvasRef.current.toDataURL(\"image/png\");\r\n    const link = document.createElement('a');\r\n    link.href = dataUrl;\r\n    link.download = (designName.trim() || \"canvas\") + \".png\";\r\n    link.click();\r\n  };\r\n\r\n  // Save to cloud (thumbnail and JSON)\r\n  const saveToCloud = async () => {\r\n    if (!canvasRef.current) {\r\n      alert('Canvas not ready');\r\n      return;\r\n    }\r\n    // Get PNG\r\n    const thumbnailData = canvasRef.current.toDataURL(\"image/png\");\r\n    try {\r\n      const thumbRes = await fetch(\"http://localhost:5000/api/upload-thumbnail\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        },\r\n        body: JSON.stringify({ dataUrl: thumbnailData }),\r\n      });\r\n      const thumbJson = await thumbRes.json();\r\n      if (!thumbRes.ok) {\r\n        alert(\"Thumbnail upload failed: \" + thumbJson.message);\r\n        return;\r\n      }\r\n      const thumbnailUrl = thumbJson.url;\r\n\r\n      // Prepare JSON file\r\n      const designJson = {\r\n        title: designName || \"Untitled Design\",\r\n        thumbnailUrl,\r\n        elements,\r\n        lines,\r\n      };\r\n      const blob = new Blob([JSON.stringify(designJson)], { type: \"application/json\" });\r\n      const file = new File([blob], (designName.trim() || \"design\") + \".json\", { type: \"application/json\" });\r\n\r\n      // Upload JSON file to Cloudinary\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", \"your_unsigned_upload_preset\"); // Replace with your preset\r\n      formData.append(\"folder\", \"canvas-json-files\");\r\n\r\n      const jsonRes = await fetch(\"https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/raw/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const jsonData = await jsonRes.json();\r\n      if (!jsonRes.ok) {\r\n        alert(\"Design JSON upload failed: \" + jsonData.error.message);\r\n        return;\r\n      }\r\n      alert(\"Design saved successfully!\");\r\n      console.log(\"Design JSON URL:\", jsonData.secure_url);\r\n    } catch (error) {\r\n      alert(\"Save failed: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <header className=\"flex justify-between items-center p-4 bg-gray-100 border-b\">\r\n        <div className=\"text-5xl font-bold\" style={{ fontFamily: '\"Kablammo\", system-ui' }}>MATTY</div>\r\n        <button className=\"text-gray-700 hover:underline\" onClick={() => window.alert(\"About Us\")}>About Us</button>\r\n      </header>\r\n\r\n      <div className=\"p-2 bg-gray-100 flex items-center gap-4 border-b\">\r\n        <input\r\n          className=\"border px-3 py-2 rounded font-medium text-lg flex-grow\"\r\n          placeholder=\"Enter design name\"\r\n          value={designName}\r\n          onChange={(e) => {\r\n            setDesignName(e.target.value);\r\n            saveState(elements, lines, e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex gap-2 p-2 bg-gray-50 border-b\">\r\n        <button onClick={() => setDrawMode(true)} className={`p-2 ${drawMode && !eraserMode ? 'bg-blue-100' : 'bg-gray-200'}`}>Pencil</button>\r\n        <button onClick={() => setEraserMode(true)} className={`p-2 ${eraserMode ? 'bg-blue-100' : 'bg-gray-200'}`}>Eraser</button>\r\n        <input type=\"color\" value={pencilColor} onChange={e => setPencilColor(e.target.value)} />\r\n        <input type=\"range\" min={1} max={30} value={brushSize} onChange={e => setBrushSize(Number(e.target.value))} />\r\n        <input type=\"range\" min={5} max={50} value={eraserSize} onChange={e => setEraserSize(Number(e.target.value))} />\r\n      </div>\r\n\r\n      <div className=\"flex gap-2 p-2 bg-gray-50 border-b\">\r\n        <select value={selectedShape} onChange={e => setSelectedShape(e.target.value)}>\r\n          <option>rectangle</option>\r\n          <option>square</option>\r\n          <option>circle</option>\r\n          <option>oval</option>\r\n          <option>triangle</option>\r\n          <option>parallelogram</option>\r\n          <option>rhombus</option>\r\n          <option>trapezoid</option>\r\n          <option>kite</option>\r\n          <option>pentagon</option>\r\n          <option>hexagon</option>\r\n          <option>heptagon</option>\r\n          <option>octagon</option>\r\n          <option>nonagon</option>\r\n          <option>decagon</option>\r\n        </select>\r\n        <input type=\"color\" value={shapeColor} onChange={e => setShapeColor(e.target.value)} />\r\n        <button onClick={() => {\r\n          if (selectedShape === 'image') alert(\"Please upload image!\");\r\n          else {\r\n            const ctx = canvasRef.current.getContext('2d');\r\n            let size = getDefaultSize(selectedShape, \"\", ctx);\r\n            let el = {\r\n              id: nextId++,\r\n              type: selectedShape,\r\n              x: 50,\r\n              y: 50,\r\n              w: size.w,\r\n              h: size.h,\r\n              color: shapeColor,\r\n              rotation: 0,\r\n            }\r\n            saveState([...elements, el], lines, designName);\r\n          }\r\n        }}>Add Shape</button>\r\n        <button onClick={() => {\r\n          const text = prompt(\"Enter your text\");\r\n          if (!text) return;\r\n          const ctx = canvasRef.current.getContext('2d');\r\n          let size = getDefaultSize('text', text, ctx);\r\n          const el = {\r\n            id: nextId++,\r\n            type: 'text',\r\n            text,\r\n            x: 50,\r\n            y: 50,\r\n            w: size.w,\r\n            h: size.h,\r\n            color: textColor,\r\n            fontSize: size.fontSize,\r\n            fontFamily,\r\n            rotation: 0,\r\n          };\r\n          saveState([...elements, el], lines, designName);\r\n        }}>Add Text</button>\r\n        <button onClick={() => fileInputRef.current && fileInputRef.current.click()}>Upload Image</button>\r\n        <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }}\r\n          accept=\"image/*\"\r\n          onChange={e => {\r\n            const file = e.target.files[0];\r\n            if (!file) return;\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n              const el = {\r\n                id: nextId++,\r\n                type: 'image',\r\n                x: 50,\r\n                y: 50,\r\n                w: 200,\r\n                h: 200,\r\n                src: reader.result,\r\n                rotation: 0,\r\n              };\r\n              saveState([...elements, el], lines, designName);\r\n            };\r\n            reader.readAsDataURL(file);\r\n            e.target.value = null;\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex gap-2 p-2 bg-gray-50 border-b\">\r\n        <button onClick={() => {\r\n          if (historyIndex > 0) {\r\n            setHistoryIndex(historyIndex - 1);\r\n            setSelectedIdx(null);\r\n          }\r\n        }}>Undo</button>\r\n        <button onClick={() => {\r\n          if (historyIndex < history.length -1) {\r\n            setHistoryIndex(historyIndex + 1);\r\n            setSelectedIdx(null);\r\n          }\r\n        }}>Redo</button>\r\n        <button onClick={() => {\r\n          if (selectedIdx !== null) {\r\n            const newElements = elements.filter((_, idx) => idx !== selectedIdx);\r\n            saveState(newElements, lines, designName);\r\n            setSelectedIdx(null);\r\n          }\r\n        }}>Delete Selected</button>\r\n        <button onClick={() => {\r\n          if (selectedIdx !== null) {\r\n            const newElements = [...elements];\r\n            const idx = selectedIdx;\r\n            if(idx < newElements.length - 1) {\r\n              [newElements[idx], newElements[idx + 1]] = [newElements[idx + 1], newElements[idx]];\r\n              setSelectedIdx(idx + 1);\r\n              saveState(newElements, lines, designName);\r\n            }\r\n          }\r\n        }}>Move Up</button>\r\n        <button onClick={() => {\r\n          if (selectedIdx !== null) {\r\n            const newElements = [...elements];\r\n            const idx = selectedIdx;\r\n            if(idx > 0) {\r\n              [newElements[idx], newElements[idx - 1]] = [newElements[idx - 1], newElements[idx]];\r\n              setSelectedIdx(idx - 1);\r\n              saveState(newElements, lines, designName);\r\n            }\r\n          }\r\n        }}>Move Down</button>\r\n        <button onClick={() => {\r\n          setHistory([{ elements: [], lines: [], title: \"\" }]);\r\n          setHistoryIndex(0);\r\n          setSelectedIdx(null);\r\n          setDesignName('');\r\n        }}>Clear</button>\r\n        <button onClick={() => {\r\n          if (!canvasRef.current) return;\r\n          const link = document.createElement('a');\r\n          link.href = canvasRef.current.toDataURL();\r\n          link.download = (designName.trim() || 'canvas') + '.png';\r\n          link.click();\r\n        }}>Download</button>\r\n        <button onClick={() => {\r\n          // Save to cloud function here\r\n          (async () => {\r\n            if (!canvasRef.current) return;\r\n            const thumbnailData = canvasRef.current.toDataURL('image/png');\r\n            try {\r\n              // Upload thumbnail\r\n              const thumbRes = await fetch('http://localhost:5000/api/upload-thumbnail', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n                },\r\n                body: JSON.stringify({ dataUrl: thumbnailData })\r\n              });\r\n              const thumbJson = await thumbRes.json();\r\n              if (!thumbRes.ok) throw new Error('Thumbnail upload failed');\r\n\r\n              const thumbnailUrl = thumbJson.url;\r\n\r\n              // Prepare JSON file\r\n              const designJson = {\r\n                title: designName,\r\n                thumbnailUrl,\r\n                elements,\r\n                lines\r\n              };\r\n\r\n              const blob = new Blob([JSON.stringify(designJson)], { type: 'application/json' });\r\n              const file = new File([blob], (designName.trim() || 'design') + '.json', { type: 'application/json' });\r\n\r\n              // Upload JSON file to Cloudinary\r\n              const formData = new FormData();\r\n              formData.append('file', file);\r\n              formData.append('upload_preset', 'your_unsigned_upload_preset'); // Put your unsigned preset here\r\n              formData.append('folder', 'canvas-json-files');\r\n\r\n              const jsonRes = await fetch('https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/raw/upload', {\r\n                method: 'POST',\r\n                body: formData\r\n              });\r\n              const jsonData = await jsonRes.json();\r\n              if (!jsonRes.ok) throw new Error(jsonData.error.message);\r\n\r\n              alert('Design saved successfully!');\r\n              console.log('Design JSON URL:', jsonData.secure_url);\r\n\r\n            } catch (err) {\r\n              alert('Save failed: ' + err.message);\r\n            }\r\n          })();\r\n        }}>Save To Cloud</button>\r\n      </div>\r\n\r\n      <main className=\"flex-1 flex justify-center items-center relative\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1000}\r\n          height={700}\r\n          style={{ background: '#fff', border: '1px solid #ccc', cursor: drawMode || eraserMode ? 'crosshair' : 'default' }}\r\n          onMouseDown={(e) => {\r\n            if (!canvasRef.current) return;\r\n            const rect = canvasRef.current.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n            const y = e.clientY - rect.top;\r\n\r\n            let clicked = false;\r\n            for (let i = elements.length - 1; i >= 0; i--) {\r\n              const el = elements[i];\r\n              const handle = getHandleAt(el, x, y);\r\n              if (i === selectedIdx && handle !== null) {\r\n                setResizingHandle(handle);\r\n                clicked = true;\r\n                break;\r\n              }\r\n              if (x >= el.x && x <= el.x + el.w && y >= el.y && y <= el.y + el.h) {\r\n                setSelectedIdx(i);\r\n                setDragOffset({ x: x - el.x, y: y - el.y });\r\n                setIsDragging(true);\r\n                clicked = true;\r\n                break;\r\n              }\r\n            }\r\n            if (!clicked) setSelectedIdx(null);\r\n\r\n            if (drawMode || eraserMode) {\r\n              setIsDrawing(true);\r\n              drawingPointsRef.current = [[x, y]];\r\n            }\r\n          }}\r\n          onMouseMove={(e) => {\r\n            if (!canvasRef.current) return;\r\n            const rect = canvasRef.current.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n            const y = e.clientY - rect.top;\r\n\r\n            if (resizingHandle !== null && selectedIdx !== null) {\r\n              const el = elements[selectedIdx];\r\n              const newEl = { ...el };\r\n              switch (resizingHandle) {\r\n                case 0:\r\n                  newEl.x = x;\r\n                  newEl.y = y;\r\n                  newEl.w = el.w + (el.x - x);\r\n                  newEl.h = el.h + (el.y - y);\r\n                  break;\r\n                case 1:\r\n                  newEl.y = y;\r\n                  newEl.w = x - el.x;\r\n                  newEl.h = el.h + (el.y - y);\r\n                  break;\r\n                case 2:\r\n                  newEl.x = x;\r\n                  newEl.w = el.w + (el.x - x);\r\n                  newEl.h = y - el.y;\r\n                  break;\r\n                case 3:\r\n                  newEl.w = x - el.x;\r\n                  newEl.h = y - el.y;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n              newEl.w = Math.max(newEl.w, 20);\r\n              newEl.h = Math.max(newEl.h, 20);\r\n              if (el.type === 'text') newEl.fontSize = Math.max(newEl.h - 8, 12);\r\n              const newEls = elements.map((v, idx) => (idx === selectedIdx ? newEl : v));\r\n              setHistory((h) => {\r\n                const copy = [...h];\r\n                copy[historyIndex] = { elements: newEls, lines, title };\r\n                return copy;\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (isDragging && selectedIdx !== null) {\r\n              const newEls = elements.map((el, idx) =>\r\n                idx === selectedIdx ? { ...el, x: x - dragOffset.x, y: y - dragOffset.y } : el,\r\n              );\r\n              setHistory((h) => {\r\n                const copy = [...h];\r\n                copy[historyIndex] = { elements: newEls, lines, title };\r\n                return copy;\r\n              });\r\n            }\r\n\r\n            if (isDrawing) {\r\n              drawingPointsRef.current.push([x, y]);\r\n              const ctx = canvasRef.current.getContext('2d');\r\n              ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\r\n              ctx.lineWidth = eraserMode ? eraserSize : brushSize;\r\n              ctx.lineCap = \"round\";\r\n              ctx.lineJoin = \"round\";\r\n              ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\r\n\r\n              const points = drawingPointsRef.current;\r\n              ctx.beginPath();\r\n              ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\r\n              ctx.lineTo(points[points.length - 1][0], points[points.length - 1][1]);\r\n              ctx.stroke();\r\n              ctx.globalCompositeOperation = \"source-over\";\r\n            }\r\n          }}\r\n          onMouseUp={() => {\r\n            if (isDrawing) {\r\n              const newLine = {\r\n                id: nextId++,\r\n                points: drawingPointsRef.current,\r\n                color: pencilColor,\r\n                size: brushSize,\r\n                mode: eraserMode ? \"eraser\" : \"draw\",\r\n              };\r\n              saveState(elements, [...lines, newLine], designName);\r\n            }\r\n            setIsDrawing(false);\r\n            setIsDragging(false);\r\n            setResizingHandle(null);\r\n          }}\r\n          onMouseLeave={() => {\r\n            if (isDrawing) {\r\n              const newLine = {\r\n                id: nextId++,\r\n                points: drawingPointsRef.current,\r\n                color: pencilColor,\r\n                size: brushSize,\r\n                mode: eraserMode ? \"eraser\" : \"draw\",\r\n              };\r\n              saveState(elements, [...lines, newLine], designName);\r\n            }\r\n            setIsDrawing(false);\r\n            setIsDragging(false);\r\n            setResizingHandle(null);\r\n          }}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}