{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst SHAPE_DEFAULTS = {\n  rectangle: {\n    w: 120,\n    h: 80\n  },\n  square: {\n    w: 100,\n    h: 100\n  },\n  circle: {\n    r: 50\n  },\n  oval: {\n    rx: 60,\n    ry: 40\n  },\n  triangle: {},\n  parallelogram: {},\n  rhombus: {},\n  trapezoid: {},\n  kite: {},\n  pentagon: {},\n  hexagon: {},\n  heptagon: {},\n  octagon: {},\n  nonagon: {},\n  decagon: {}\n};\nconst initialState = {\n  shapes: [],\n  // {type, x, y, color, ...}\n  texts: [],\n  // {text, x, y, color}\n  lines: [] // [{points: [x1,y1,x2,y2,...], color}]\n};\nconst CanvasEditor = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [textColor, setTextColor] = useState('#111827');\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n\n  // History state\n  const [history, setHistory] = useState([initialState]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n\n  // Get current state from history\n  const {\n    shapes,\n    texts,\n    lines\n  } = history[historyIndex];\n\n  // Redraw canvas on every state change\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 2;\n    ctx.lineCap = 'round';\n    // Draw shapes\n    shapes.forEach((shape, idx) => {\n      ctx.save();\n      ctx.fillStyle = shape.color;\n      ctx.strokeStyle = shape.color;\n      if (shape.type === 'rectangle') {\n        ctx.fillRect(shape.x, shape.y, 120, 80);\n      } else if (shape.type === 'square') {\n        ctx.fillRect(shape.x, shape.y, 100, 100);\n      } else if (shape.type === 'circle') {\n        ctx.beginPath();\n        ctx.arc(shape.x + 50, shape.y + 50, 50, 0, 2 * Math.PI);\n        ctx.fill();\n      } else if (shape.type === 'oval') {\n        ctx.save();\n        ctx.translate(shape.x + 60, shape.y + 40);\n        ctx.scale(1.5, 1);\n        ctx.beginPath();\n        ctx.arc(0, 0, 40, 0, 2 * Math.PI);\n        ctx.restore();\n        ctx.fill();\n      } else if (shape.type === 'triangle') {\n        ctx.beginPath();\n        ctx.moveTo(shape.x + 0, shape.y + 80);\n        ctx.lineTo(shape.x + 120, shape.y + 80);\n        ctx.lineTo(shape.x + 60, shape.y + 0);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'parallelogram') {\n        ctx.beginPath();\n        ctx.moveTo(shape.x + 20, shape.y + 80);\n        ctx.lineTo(shape.x + 140, shape.y + 80);\n        ctx.lineTo(shape.x + 120, shape.y + 0);\n        ctx.lineTo(shape.x + 0, shape.y + 0);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'rhombus') {\n        ctx.beginPath();\n        ctx.moveTo(shape.x + 60, shape.y + 0);\n        ctx.lineTo(shape.x + 120, shape.y + 40);\n        ctx.lineTo(shape.x + 60, shape.y + 80);\n        ctx.lineTo(shape.x + 0, shape.y + 40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'trapezoid') {\n        ctx.beginPath();\n        ctx.moveTo(shape.x + 20, shape.y + 80);\n        ctx.lineTo(shape.x + 100, shape.y + 80);\n        ctx.lineTo(shape.x + 80, shape.y + 0);\n        ctx.lineTo(shape.x + 40, shape.y + 0);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'kite') {\n        ctx.beginPath();\n        ctx.moveTo(shape.x + 60, shape.y + 0);\n        ctx.lineTo(shape.x + 100, shape.y + 40);\n        ctx.lineTo(shape.x + 60, shape.y + 80);\n        ctx.lineTo(shape.x + 20, shape.y + 40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (['pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'].includes(shape.type)) {\n        const sides = {\n          pentagon: 5,\n          hexagon: 6,\n          heptagon: 7,\n          octagon: 8,\n          nonagon: 9,\n          decagon: 10\n        }[shape.type];\n        drawPolygon(ctx, shape.x + 60, shape.y + 60, 50, sides, shape.color);\n      }\n      // Draw bounding box if selected\n      if (idx === selectedShapeIndex) {\n        ctx.strokeStyle = '#f59e42';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(shape.x - 2, shape.y - 2, 124, 84);\n      }\n      ctx.restore();\n    });\n    // Draw lines\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.color || '#333';\n      ctx.lineWidth = 2;\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n    });\n    // Draw texts\n    texts.forEach(({\n      text,\n      x,\n      y,\n      color\n    }, idx) => {\n      ctx.font = '24px Arial';\n      ctx.fillStyle = color;\n      ctx.fillText(text, x, y);\n      if (idx === selectedTextIndex) {\n        const width = ctx.measureText(text).width;\n        ctx.strokeStyle = '#f59e42';\n        ctx.strokeRect(x - 2, y - 24, width + 4, 28);\n      }\n    });\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex]);\n\n  // --- Undo/Redo ---\n  const saveState = (newShapes, newTexts, newLines) => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      shapes: JSON.parse(JSON.stringify(newShapes)),\n      texts: JSON.parse(JSON.stringify(newTexts)),\n      lines: JSON.parse(JSON.stringify(newLines))\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n    }\n  };\n  const handleRedo = () => {\n    if (historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n    }\n  };\n\n  // --- Drawing (freehand) ---\n  const handleCanvasMouseDown = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    // Check for text selection\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    for (let i = texts.length - 1; i >= 0; i--) {\n      const {\n        text,\n        x,\n        y\n      } = texts[i];\n      ctx.font = '24px Arial';\n      const width = ctx.measureText(text).width;\n      if (mouseX >= x - 2 && mouseX <= x + width + 2 && mouseY >= y - 24 && mouseY <= y + 4) {\n        setSelectedTextIndex(i);\n        setSelectedShapeIndex(null);\n        setDragOffset({\n          x: mouseX - x,\n          y: mouseY - y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    // Check for shape selection\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      const shape = shapes[i];\n      // Use bounding box for all shapes for simplicity\n      if (mouseX >= shape.x && mouseX <= shape.x + 120 && mouseY >= shape.y && mouseY <= shape.y + 80) {\n        setSelectedShapeIndex(i);\n        setSelectedTextIndex(null);\n        setDragOffset({\n          x: mouseX - shape.x,\n          y: mouseY - shape.y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    // If not on text or shape, start drawing if in draw mode\n    if (drawMode) {\n      setIsDrawing(true);\n      setCurrentLine({\n        points: [[mouseX, mouseY]],\n        color: '#333'\n      });\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    if (isDrawing && drawMode) {\n      setCurrentLine(line => ({\n        ...line,\n        points: [...line.points, [mouseX, mouseY]]\n      }));\n      return;\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : t);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes,\n          texts: newTexts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes: newShapes,\n          texts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    if (isDrawing && drawMode && currentLine) {\n      const newLines = [...lines, currentLine];\n      saveState(shapes, texts, newLines);\n      setIsDrawing(false);\n      setCurrentLine(null);\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n  };\n\n  // --- Add Shape ---\n  const handleAddShape = () => {\n    const newShape = {\n      type: selectedShape,\n      x: 300,\n      y: 100,\n      color: shapeColor\n    };\n    saveState([...shapes, newShape], texts, lines);\n  };\n\n  // --- Add Text ---\n  const handleAddText = () => {\n    const text = prompt('Enter text to add:');\n    if (!text) return;\n    saveState(shapes, [...texts, {\n      text,\n      x: 100,\n      y: 400,\n      color: textColor\n    }], lines);\n  };\n\n  // --- Change color of selected text ---\n  const handleTextColorChange = e => {\n    setTextColor(e.target.value);\n    if (selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        color: e.target.value\n      } : t);\n      saveState(shapes, newTexts, lines);\n    }\n  };\n\n  // --- Change color of selected shape ---\n  const handleShapeColorChange = e => {\n    setShapeColor(e.target.value);\n    if (selectedShapeIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        color: e.target.value\n      } : s);\n      saveState(newShapes, texts, lines);\n    }\n  };\n\n  // --- Upload Image ---\n  const handleUploadImage = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      const img = new window.Image();\n      img.onload = function () {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 50, 50, 200, 200);\n        // Not tracked as a shape, but you can extend this to add as a shape if needed\n        saveState(shapes, texts, lines);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n    e.target.value = '';\n  };\n\n  // --- Download ---\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const link = document.createElement('a');\n    link.download = 'canvas.png';\n    link.href = canvas.toDataURL();\n    link.click();\n  };\n\n  // --- Clear All ---\n  const clearCanvas = () => {\n    saveState([], [], []);\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center p-4 bg-gray-100 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-bold\",\n        children: \"MATTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2\",\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        disabled: historyIndex === 0,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedo,\n        disabled: historyIndex === history.length - 1,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"flex flex-col gap-4 p-4 bg-gray-50 border-r\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: drawMode ? 'font-bold underline' : '',\n          onClick: () => setDrawMode(true),\n          children: \"Pencil/Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block mb-1\",\n            children: \"Shape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedShape,\n            onChange: e => {\n              setSelectedShape(e.target.value);\n              setDrawMode(false);\n            },\n            className: \"mb-2 p-1 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rectangle\",\n              children: \"Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"square\",\n              children: \"Square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"circle\",\n              children: \"Circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"oval\",\n              children: \"Oval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"triangle\",\n              children: \"Triangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"parallelogram\",\n              children: \"Parallelogram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rhombus\",\n              children: \"Rhombus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"trapezoid\",\n              children: \"Trapezoid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"kite\",\n              children: \"Kite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pentagon\",\n              children: \"Pentagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hexagon\",\n              children: \"Hexagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"heptagon\",\n              children: \"Heptagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"octagon\",\n              children: \"Octagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nonagon\",\n              children: \"Nonagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"decagon\",\n              children: \"Decagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block mb-1\",\n            children: \"Shape Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: shapeColor,\n            onChange: handleShapeColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block mb-1\",\n            children: \"Text Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: textColor,\n            onChange: handleTextColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadImage,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShape,\n          children: \"Add Shape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddText,\n          children: \"Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 800,\n          height: 500,\n          style: {\n            background: '#fff',\n            border: '1px solid #eee'\n          },\n          onMouseDown: handleCanvasMouseDown,\n          onMouseMove: handleCanvasMouseMove,\n          onMouseUp: handleCanvasMouseUp,\n          onMouseLeave: handleCanvasMouseUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"oadRKtH2Oo1g5fihsun5CEuXnO8=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","SHAPE_DEFAULTS","rectangle","w","h","square","circle","r","oval","rx","ry","triangle","parallelogram","rhombus","trapezoid","kite","pentagon","hexagon","heptagon","octagon","nonagon","decagon","initialState","shapes","texts","lines","CanvasEditor","_s","canvasRef","fileInputRef","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","textColor","setTextColor","dragOffset","setDragOffset","selectedTextIndex","setSelectedTextIndex","selectedShapeIndex","setSelectedShapeIndex","isDragging","setIsDragging","isDrawing","setIsDrawing","currentLine","setCurrentLine","history","setHistory","historyIndex","setHistoryIndex","canvas","current","getContext","clearRect","width","height","lineWidth","lineCap","forEach","shape","idx","save","strokeStyle","type","fillRect","arc","translate","scale","restore","includes","strokeRect","line","points","stroke","text","font","fillText","measureText","saveState","newShapes","newTexts","newLines","newHistory","slice","push","JSON","parse","stringify","length","handleUndo","handleRedo","handleCanvasMouseDown","e","mouseX","nativeEvent","offsetX","mouseY","offsetY","handleCanvasMouseMove","map","t","s","handleCanvasMouseUp","handleAddShape","newShape","handleAddText","prompt","handleTextColorChange","target","value","handleShapeColorChange","handleUploadImage","click","handleFileChange","file","files","reader","FileReader","onload","event","img","window","Image","drawImage","src","result","readAsDataURL","handleDownload","link","document","createElement","download","href","toDataURL","clearCanvas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","accept","ref","style","display","background","border","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst SHAPE_DEFAULTS = {\r\n  rectangle: { w: 120, h: 80 },\r\n  square: { w: 100, h: 100 },\r\n  circle: { r: 50 },\r\n  oval: { rx: 60, ry: 40 },\r\n  triangle: {},\r\n  parallelogram: {},\r\n  rhombus: {},\r\n  trapezoid: {},\r\n  kite: {},\r\n  pentagon: {},\r\n  hexagon: {},\r\n  heptagon: {},\r\n  octagon: {},\r\n  nonagon: {},\r\n  decagon: {}\r\n};\r\n\r\nconst initialState = {\r\n  shapes: [], // {type, x, y, color, ...}\r\n  texts: [],  // {text, x, y, color}\r\n  lines: []   // [{points: [x1,y1,x2,y2,...], color}]\r\n};\r\n\r\nconst CanvasEditor = () => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\r\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(null);\r\n\r\n  // History state\r\n  const [history, setHistory] = useState([initialState]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n\r\n  // Get current state from history\r\n  const { shapes, texts, lines } = history[historyIndex];\r\n\r\n  // Redraw canvas on every state change\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineWidth = 2;\r\n    ctx.lineCap = 'round';\r\n    // Draw shapes\r\n    shapes.forEach((shape, idx) => {\r\n      ctx.save();\r\n      ctx.fillStyle = shape.color;\r\n      ctx.strokeStyle = shape.color;\r\n      if (shape.type === 'rectangle') {\r\n        ctx.fillRect(shape.x, shape.y, 120, 80);\r\n      } else if (shape.type === 'square') {\r\n        ctx.fillRect(shape.x, shape.y, 100, 100);\r\n      } else if (shape.type === 'circle') {\r\n        ctx.beginPath();\r\n        ctx.arc(shape.x + 50, shape.y + 50, 50, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      } else if (shape.type === 'oval') {\r\n        ctx.save();\r\n        ctx.translate(shape.x + 60, shape.y + 40);\r\n        ctx.scale(1.5, 1);\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 40, 0, 2 * Math.PI);\r\n        ctx.restore();\r\n        ctx.fill();\r\n      } else if (shape.type === 'triangle') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x + 0, shape.y + 80);\r\n        ctx.lineTo(shape.x + 120, shape.y + 80);\r\n        ctx.lineTo(shape.x + 60, shape.y + 0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'parallelogram') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x + 20, shape.y + 80);\r\n        ctx.lineTo(shape.x + 140, shape.y + 80);\r\n        ctx.lineTo(shape.x + 120, shape.y + 0);\r\n        ctx.lineTo(shape.x + 0, shape.y + 0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'rhombus') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x + 60, shape.y + 0);\r\n        ctx.lineTo(shape.x + 120, shape.y + 40);\r\n        ctx.lineTo(shape.x + 60, shape.y + 80);\r\n        ctx.lineTo(shape.x + 0, shape.y + 40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'trapezoid') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x + 20, shape.y + 80);\r\n        ctx.lineTo(shape.x + 100, shape.y + 80);\r\n        ctx.lineTo(shape.x + 80, shape.y + 0);\r\n        ctx.lineTo(shape.x + 40, shape.y + 0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'kite') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x + 60, shape.y + 0);\r\n        ctx.lineTo(shape.x + 100, shape.y + 40);\r\n        ctx.lineTo(shape.x + 60, shape.y + 80);\r\n        ctx.lineTo(shape.x + 20, shape.y + 40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if ([\r\n        'pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'\r\n      ].includes(shape.type)) {\r\n        const sides = {\r\n          pentagon: 5, hexagon: 6, heptagon: 7, octagon: 8, nonagon: 9, decagon: 10\r\n        }[shape.type];\r\n        drawPolygon(ctx, shape.x + 60, shape.y + 60, 50, sides, shape.color);\r\n      }\r\n      // Draw bounding box if selected\r\n      if (idx === selectedShapeIndex) {\r\n        ctx.strokeStyle = '#f59e42';\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeRect(shape.x - 2, shape.y - 2, 124, 84);\r\n      }\r\n      ctx.restore();\r\n    });\r\n    // Draw lines\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.color || '#333';\r\n      ctx.lineWidth = 2;\r\n      line.points.forEach(([x, y], i) => {\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n    });\r\n    // Draw texts\r\n    texts.forEach(({ text, x, y, color }, idx) => {\r\n      ctx.font = '24px Arial';\r\n      ctx.fillStyle = color;\r\n      ctx.fillText(text, x, y);\r\n      if (idx === selectedTextIndex) {\r\n        const width = ctx.measureText(text).width;\r\n        ctx.strokeStyle = '#f59e42';\r\n        ctx.strokeRect(x - 2, y - 24, width + 4, 28);\r\n      }\r\n    });\r\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex]);\r\n\r\n  // --- Undo/Redo ---\r\n  const saveState = (newShapes, newTexts, newLines) => {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      shapes: JSON.parse(JSON.stringify(newShapes)),\r\n      texts: JSON.parse(JSON.stringify(newTexts)),\r\n      lines: JSON.parse(JSON.stringify(newLines))\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (historyIndex > 0) {\r\n      setHistoryIndex(historyIndex - 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n    }\r\n  };\r\n  const handleRedo = () => {\r\n    if (historyIndex < history.length - 1) {\r\n      setHistoryIndex(historyIndex + 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n    }\r\n  };\r\n\r\n  // --- Drawing (freehand) ---\r\n  const handleCanvasMouseDown = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    // Check for text selection\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    for (let i = texts.length - 1; i >= 0; i--) {\r\n      const { text, x, y } = texts[i];\r\n      ctx.font = '24px Arial';\r\n      const width = ctx.measureText(text).width;\r\n      if (\r\n        mouseX >= x - 2 &&\r\n        mouseX <= x + width + 2 &&\r\n        mouseY >= y - 24 &&\r\n        mouseY <= y + 4\r\n      ) {\r\n        setSelectedTextIndex(i);\r\n        setSelectedShapeIndex(null);\r\n        setDragOffset({ x: mouseX - x, y: mouseY - y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    // Check for shape selection\r\n    for (let i = shapes.length - 1; i >= 0; i--) {\r\n      const shape = shapes[i];\r\n      // Use bounding box for all shapes for simplicity\r\n      if (\r\n        mouseX >= shape.x &&\r\n        mouseX <= shape.x + 120 &&\r\n        mouseY >= shape.y &&\r\n        mouseY <= shape.y + 80\r\n      ) {\r\n        setSelectedShapeIndex(i);\r\n        setSelectedTextIndex(null);\r\n        setDragOffset({ x: mouseX - shape.x, y: mouseY - shape.y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    // If not on text or shape, start drawing if in draw mode\r\n    if (drawMode) {\r\n      setIsDrawing(true);\r\n      setCurrentLine({ points: [[mouseX, mouseY]], color: '#333' });\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    if (isDrawing && drawMode) {\r\n      setCurrentLine(line => ({ ...line, points: [...line.points, [mouseX, mouseY]] }));\r\n      return;\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : t\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes, texts: newTexts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : s\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseUp = () => {\r\n    if (isDrawing && drawMode && currentLine) {\r\n      const newLines = [...lines, currentLine];\r\n      saveState(shapes, texts, newLines);\r\n      setIsDrawing(false);\r\n      setCurrentLine(null);\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n  };\r\n\r\n  // --- Add Shape ---\r\n  const handleAddShape = () => {\r\n    const newShape = { type: selectedShape, x: 300, y: 100, color: shapeColor };\r\n    saveState([...shapes, newShape], texts, lines);\r\n  };\r\n\r\n  // --- Add Text ---\r\n  const handleAddText = () => {\r\n    const text = prompt('Enter text to add:');\r\n    if (!text) return;\r\n    saveState(shapes, [...texts, { text, x: 100, y: 400, color: textColor }], lines);\r\n  };\r\n\r\n  // --- Change color of selected text ---\r\n  const handleTextColorChange = (e) => {\r\n    setTextColor(e.target.value);\r\n    if (selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, color: e.target.value } : t\r\n      );\r\n      saveState(shapes, newTexts, lines);\r\n    }\r\n  };\r\n\r\n  // --- Change color of selected shape ---\r\n  const handleShapeColorChange = (e) => {\r\n    setShapeColor(e.target.value);\r\n    if (selectedShapeIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, color: e.target.value } : s\r\n      );\r\n      saveState(newShapes, texts, lines);\r\n    }\r\n  };\r\n\r\n  // --- Upload Image ---\r\n  const handleUploadImage = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      const img = new window.Image();\r\n      img.onload = function () {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(img, 50, 50, 200, 200);\r\n        // Not tracked as a shape, but you can extend this to add as a shape if needed\r\n        saveState(shapes, texts, lines);\r\n      };\r\n      img.src = event.target.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n    e.target.value = '';\r\n  };\r\n\r\n  // --- Download ---\r\n  const handleDownload = () => {\r\n    const canvas = canvasRef.current;\r\n    const link = document.createElement('a');\r\n    link.download = 'canvas.png';\r\n    link.href = canvas.toDataURL();\r\n    link.click();\r\n  };\r\n\r\n  // --- Clear All ---\r\n  const clearCanvas = () => {\r\n    saveState([], [], []);\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Header Row */}\r\n      <header className=\"flex justify-between items-center p-4 bg-gray-100 border-b\">\r\n        <div className=\"text-xl font-bold\">MATTY</div>\r\n        <div className=\"flex gap-2\">{/* Social media icons */}</div>\r\n        <button className=\"px-4 py-2\">About Us</button>\r\n      </header>\r\n      {/* Tools Bar */}\r\n      <div className=\"flex gap-4 p-2 bg-gray-50 border-b\">\r\n        <button onClick={clearCanvas}>Clear All</button>\r\n        <button onClick={handleUndo} disabled={historyIndex === 0}>Undo</button>\r\n        <button onClick={handleRedo} disabled={historyIndex === history.length - 1}>Redo</button>\r\n      </div>\r\n      {/* Main Workspace */}\r\n      <div className=\"flex flex-1\">\r\n        {/* Sidebar */}\r\n        <aside className=\"flex flex-col gap-4 p-4 bg-gray-50 border-r\">\r\n          <button\r\n            className={drawMode ? 'font-bold underline' : ''}\r\n            onClick={() => setDrawMode(true)}\r\n          >\r\n            Pencil/Draw\r\n          </button>\r\n          <label>\r\n            <span className=\"block mb-1\">Shape</span>\r\n            <select\r\n              value={selectedShape}\r\n              onChange={e => {\r\n                setSelectedShape(e.target.value);\r\n                setDrawMode(false);\r\n              }}\r\n              className=\"mb-2 p-1 border rounded\"\r\n            >\r\n              <option value=\"rectangle\">Rectangle</option>\r\n              <option value=\"square\">Square</option>\r\n              <option value=\"circle\">Circle</option>\r\n              <option value=\"oval\">Oval</option>\r\n              <option value=\"triangle\">Triangle</option>\r\n              <option value=\"parallelogram\">Parallelogram</option>\r\n              <option value=\"rhombus\">Rhombus</option>\r\n              <option value=\"trapezoid\">Trapezoid</option>\r\n              <option value=\"kite\">Kite</option>\r\n              <option value=\"pentagon\">Pentagon</option>\r\n              <option value=\"hexagon\">Hexagon</option>\r\n              <option value=\"heptagon\">Heptagon</option>\r\n              <option value=\"octagon\">Octagon</option>\r\n              <option value=\"nonagon\">Nonagon</option>\r\n              <option value=\"decagon\">Decagon</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            <span className=\"block mb-1\">Shape Color</span>\r\n            <input\r\n              type=\"color\"\r\n              value={shapeColor}\r\n              onChange={handleShapeColorChange}\r\n              className=\"w-8 h-8 p-0 border-0\"\r\n            />\r\n          </label>\r\n          <label>\r\n            <span className=\"block mb-1\">Text Color</span>\r\n            <input\r\n              type=\"color\"\r\n              value={textColor}\r\n              onChange={handleTextColorChange}\r\n              className=\"w-8 h-8 p-0 border-0\"\r\n            />\r\n          </label>\r\n          <button onClick={handleUploadImage}>Upload Image</button>\r\n          <button onClick={handleAddShape}>Add Shape</button>\r\n          <button onClick={handleAddText}>Add Text</button>\r\n          <button onClick={handleDownload}>Download</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n            onChange={handleFileChange}\r\n          />\r\n        </aside>\r\n        <main className=\"flex-1 flex items-center justify-center\">\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={800}\r\n            height={500}\r\n            style={{ background: '#fff', border: '1px solid #eee' }}\r\n            onMouseDown={handleCanvasMouseDown}\r\n            onMouseMove={handleCanvasMouseMove}\r\n            onMouseUp={handleCanvasMouseUp}\r\n            onMouseLeave={handleCanvasMouseUp}\r\n          />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}