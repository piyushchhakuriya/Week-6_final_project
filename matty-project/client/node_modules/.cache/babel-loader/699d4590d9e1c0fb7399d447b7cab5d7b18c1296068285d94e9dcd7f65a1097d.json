{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"x\", \"y\"];\nimport { HitCanvas, SceneCanvas } from \"./Canvas.js\";\nimport { isCSSFiltersSupported } from \"./Context.js\";\nimport { DD } from \"./DragAndDrop.js\";\nimport { Factory } from \"./Factory.js\";\nimport { Konva } from \"./Global.js\";\nimport { Transform, Util } from \"./Util.js\";\nimport { getBooleanValidator, getNumberValidator, getStringValidator } from \"./Validators.js\";\nfunction parseCSSFilters(cssFilter) {\n  const filterRegex = /(\\w+)\\(([^)]+)\\)/g;\n  let match;\n  while ((match = filterRegex.exec(cssFilter)) !== null) {\n    const [, filterName, filterValue] = match;\n    switch (filterName) {\n      case 'blur':\n        {\n          const blurRadius = parseFloat(filterValue.replace('px', ''));\n          return function (imageData) {\n            this.blurRadius(blurRadius * 0.5);\n            const KonvaFilters = Konva.Filters;\n            if (KonvaFilters && KonvaFilters.Blur) {\n              KonvaFilters.Blur.call(this, imageData);\n            }\n          };\n        }\n      case 'brightness':\n        {\n          const brightness = filterValue.includes('%') ? parseFloat(filterValue) / 100 : parseFloat(filterValue);\n          return function (imageData) {\n            this.brightness(brightness);\n            const KonvaFilters = Konva.Filters;\n            if (KonvaFilters && KonvaFilters.Brightness) {\n              KonvaFilters.Brightness.call(this, imageData);\n            }\n          };\n        }\n      case 'contrast':\n        {\n          const contrast = parseFloat(filterValue);\n          return function (imageData) {\n            const konvaContrast = 100 * (Math.sqrt(contrast) - 1);\n            this.contrast(konvaContrast);\n            const KonvaFilters = Konva.Filters;\n            if (KonvaFilters && KonvaFilters.Contrast) {\n              KonvaFilters.Contrast.call(this, imageData);\n            }\n          };\n        }\n      case 'grayscale':\n        {\n          return function (imageData) {\n            const KonvaFilters = Konva.Filters;\n            if (KonvaFilters && KonvaFilters.Grayscale) {\n              KonvaFilters.Grayscale.call(this, imageData);\n            }\n          };\n        }\n      case 'sepia':\n        {\n          return function (imageData) {\n            const KonvaFilters = Konva.Filters;\n            if (KonvaFilters && KonvaFilters.Sepia) {\n              KonvaFilters.Sepia.call(this, imageData);\n            }\n          };\n        }\n      case 'invert':\n        {\n          return function (imageData) {\n            const KonvaFilters = Konva.Filters;\n            if (KonvaFilters && KonvaFilters.Invert) {\n              KonvaFilters.Invert.call(this, imageData);\n            }\n          };\n        }\n      default:\n        Util.warn(\"CSS filter \\\"\".concat(filterName, \"\\\" is not supported in fallback mode. Consider using function filters for better compatibility.\"));\n        break;\n    }\n  }\n  return () => {};\n}\nconst ABSOLUTE_OPACITY = 'absoluteOpacity',\n  ALL_LISTENERS = 'allEventListeners',\n  ABSOLUTE_TRANSFORM = 'absoluteTransform',\n  ABSOLUTE_SCALE = 'absoluteScale',\n  CANVAS = 'canvas',\n  CHANGE = 'Change',\n  CHILDREN = 'children',\n  KONVA = 'konva',\n  LISTENING = 'listening',\n  MOUSEENTER = 'mouseenter',\n  MOUSELEAVE = 'mouseleave',\n  POINTERENTER = 'pointerenter',\n  POINTERLEAVE = 'pointerleave',\n  TOUCHENTER = 'touchenter',\n  TOUCHLEAVE = 'touchleave',\n  NAME = 'name',\n  SET = 'set',\n  SHAPE = 'Shape',\n  SPACE = ' ',\n  STAGE = 'stage',\n  TRANSFORM = 'transform',\n  UPPER_STAGE = 'Stage',\n  VISIBLE = 'visible',\n  TRANSFORM_CHANGE_STR = ['xChange.konva', 'yChange.konva', 'scaleXChange.konva', 'scaleYChange.konva', 'skewXChange.konva', 'skewYChange.konva', 'rotationChange.konva', 'offsetXChange.konva', 'offsetYChange.konva', 'transformsEnabledChange.konva'].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n  constructor(config) {\n    this._id = idCounter++;\n    this.eventListeners = {};\n    this.attrs = {};\n    this.index = 0;\n    this._allEventListeners = null;\n    this.parent = null;\n    this._cache = new Map();\n    this._attachedDepsListeners = new Map();\n    this._lastPos = null;\n    this._batchingTransformChange = false;\n    this._needClearTransformCache = false;\n    this._filterUpToDate = false;\n    this._isUnderCache = false;\n    this._dragEventId = null;\n    this._shouldFireChangeEvents = false;\n    this.setAttrs(config);\n    this._shouldFireChangeEvents = true;\n  }\n  hasChildren() {\n    return false;\n  }\n  _clearCache(attr) {\n    if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) && this._cache.get(attr)) {\n      this._cache.get(attr).dirty = true;\n    } else if (attr) {\n      this._cache.delete(attr);\n    } else {\n      this._cache.clear();\n    }\n  }\n  _getCache(attr, privateGetter) {\n    let cache = this._cache.get(attr);\n    const isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n    const invalid = cache === undefined || isTransform && cache.dirty === true;\n    if (invalid) {\n      cache = privateGetter.call(this);\n      this._cache.set(attr, cache);\n    }\n    return cache;\n  }\n  _calculate(name, deps, getter) {\n    if (!this._attachedDepsListeners.get(name)) {\n      const depsString = deps.map(dep => dep + 'Change.konva').join(SPACE);\n      this.on(depsString, () => {\n        this._clearCache(name);\n      });\n      this._attachedDepsListeners.set(name, true);\n    }\n    return this._getCache(name, getter);\n  }\n  _getCanvasCache() {\n    return this._cache.get(CANVAS);\n  }\n  _clearSelfAndDescendantCache(attr) {\n    this._clearCache(attr);\n    if (attr === ABSOLUTE_TRANSFORM) {\n      this.fire('absoluteTransformChange');\n    }\n  }\n  clearCache() {\n    if (this._cache.has(CANVAS)) {\n      const {\n        scene,\n        filter,\n        hit,\n        buffer\n      } = this._cache.get(CANVAS);\n      Util.releaseCanvas(scene, filter, hit, buffer);\n      this._cache.delete(CANVAS);\n    }\n    this._clearSelfAndDescendantCache();\n    this._requestDraw();\n    return this;\n  }\n  cache(config) {\n    const conf = config || {};\n    let rect = {};\n    if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) {\n      rect = this.getClientRect({\n        skipTransform: true,\n        relativeTo: this.getParent() || undefined\n      });\n    }\n    let width = Math.ceil(conf.width || rect.width),\n      height = Math.ceil(conf.height || rect.height),\n      pixelRatio = conf.pixelRatio,\n      x = conf.x === undefined ? Math.floor(rect.x) : conf.x,\n      y = conf.y === undefined ? Math.floor(rect.y) : conf.y,\n      offset = conf.offset || 0,\n      drawBorder = conf.drawBorder || false,\n      hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n    if (!width || !height) {\n      Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n      return;\n    }\n    const extraPaddingX = Math.abs(Math.round(rect.x) - x) > 0.5 ? 1 : 0;\n    const extraPaddingY = Math.abs(Math.round(rect.y) - y) > 0.5 ? 1 : 0;\n    width += offset * 2 + extraPaddingX;\n    height += offset * 2 + extraPaddingY;\n    x -= offset;\n    y -= offset;\n    const cachedSceneCanvas = new SceneCanvas({\n        pixelRatio: pixelRatio,\n        width: width,\n        height: height\n      }),\n      cachedFilterCanvas = new SceneCanvas({\n        pixelRatio: pixelRatio,\n        width: 0,\n        height: 0,\n        willReadFrequently: true\n      }),\n      cachedHitCanvas = new HitCanvas({\n        pixelRatio: hitCanvasPixelRatio,\n        width: width,\n        height: height\n      }),\n      sceneContext = cachedSceneCanvas.getContext(),\n      hitContext = cachedHitCanvas.getContext();\n    const bufferCanvas = new SceneCanvas({\n        width: cachedSceneCanvas.width / cachedSceneCanvas.pixelRatio + Math.abs(x),\n        height: cachedSceneCanvas.height / cachedSceneCanvas.pixelRatio + Math.abs(y),\n        pixelRatio: cachedSceneCanvas.pixelRatio\n      }),\n      bufferContext = bufferCanvas.getContext();\n    cachedHitCanvas.isCache = true;\n    cachedSceneCanvas.isCache = true;\n    this._cache.delete(CANVAS);\n    this._filterUpToDate = false;\n    if (conf.imageSmoothingEnabled === false) {\n      cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n      cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n    }\n    sceneContext.save();\n    hitContext.save();\n    bufferContext.save();\n    sceneContext.translate(-x, -y);\n    hitContext.translate(-x, -y);\n    bufferContext.translate(-x, -y);\n    bufferCanvas.x = x;\n    bufferCanvas.y = y;\n    this._isUnderCache = true;\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n    this.drawScene(cachedSceneCanvas, this, bufferCanvas);\n    this.drawHit(cachedHitCanvas, this);\n    this._isUnderCache = false;\n    sceneContext.restore();\n    hitContext.restore();\n    if (drawBorder) {\n      sceneContext.save();\n      sceneContext.beginPath();\n      sceneContext.rect(0, 0, width, height);\n      sceneContext.closePath();\n      sceneContext.setAttr('strokeStyle', 'red');\n      sceneContext.setAttr('lineWidth', 5);\n      sceneContext.stroke();\n      sceneContext.restore();\n    }\n    this._cache.set(CANVAS, {\n      scene: cachedSceneCanvas,\n      filter: cachedFilterCanvas,\n      hit: cachedHitCanvas,\n      buffer: bufferCanvas,\n      x: x,\n      y: y\n    });\n    this._requestDraw();\n    return this;\n  }\n  isCached() {\n    return this._cache.has(CANVAS);\n  }\n  getClientRect(config) {\n    throw new Error('abstract \"getClientRect\" method call');\n  }\n  _transformedRect(rect, top) {\n    const points = [{\n      x: rect.x,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height\n    }, {\n      x: rect.x,\n      y: rect.y + rect.height\n    }];\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    const trans = this.getAbsoluteTransform(top);\n    points.forEach(function (point) {\n      const transformed = trans.point(point);\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n  _drawCachedSceneCanvas(context) {\n    context.save();\n    context._applyOpacity(this);\n    context._applyGlobalCompositeOperation(this);\n    const canvasCache = this._getCanvasCache();\n    context.translate(canvasCache.x, canvasCache.y);\n    const cacheCanvas = this._getCachedSceneCanvas();\n    const ratio = cacheCanvas.pixelRatio;\n    context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n    context.restore();\n  }\n  _drawCachedHitCanvas(context) {\n    const canvasCache = this._getCanvasCache(),\n      hitCanvas = canvasCache.hit;\n    context.save();\n    context.translate(canvasCache.x, canvasCache.y);\n    context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n    context.restore();\n  }\n  _getCachedSceneCanvas() {\n    let filters = this.filters(),\n      cachedCanvas = this._getCanvasCache(),\n      sceneCanvas = cachedCanvas.scene,\n      filterCanvas = cachedCanvas.filter,\n      filterContext = filterCanvas.getContext(),\n      len,\n      imageData,\n      n,\n      filter;\n    if (!filters || filters.length === 0) {\n      return sceneCanvas;\n    }\n    if (this._filterUpToDate) {\n      return filterCanvas;\n    }\n    let useNativeOnly = true;\n    for (let i = 0; i < filters.length; i++) {\n      const fallbackRequired = typeof filters[i] === 'string' && !isCSSFiltersSupported();\n      if (fallbackRequired) {}\n      if (typeof filters[i] !== 'string' || !isCSSFiltersSupported()) {\n        useNativeOnly = false;\n        break;\n      }\n    }\n    const ratio = sceneCanvas.pixelRatio;\n    filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n    if (useNativeOnly) {\n      const finalFilter = filters.join(' ');\n      filterContext.save();\n      filterContext.setAttr('filter', finalFilter);\n      filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n      filterContext.restore();\n      this._filterUpToDate = true;\n      return filterCanvas;\n    }\n    try {\n      len = filters.length;\n      filterContext.clear();\n      filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n      imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n      for (n = 0; n < len; n++) {\n        filter = filters[n];\n        if (typeof filter === 'string') {\n          filter = parseCSSFilters(filter);\n        }\n        filter.call(this, imageData);\n        filterContext.putImageData(imageData, 0, 0);\n      }\n    } catch (e) {\n      Util.error('Unable to apply filter. ' + e.message + ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n    }\n    this._filterUpToDate = true;\n    return filterCanvas;\n  }\n  on(evtStr, handler) {\n    if (this._cache) {\n      this._cache.delete(ALL_LISTENERS);\n    }\n    if (arguments.length === 3) {\n      return this._delegate.apply(this, arguments);\n    }\n    const events = evtStr.split(SPACE);\n    for (let n = 0; n < events.length; n++) {\n      const event = events[n];\n      const parts = event.split('.');\n      const baseEvent = parts[0];\n      const name = parts[1] || '';\n      if (!this.eventListeners[baseEvent]) {\n        this.eventListeners[baseEvent] = [];\n      }\n      this.eventListeners[baseEvent].push({\n        name,\n        handler\n      });\n    }\n    return this;\n  }\n  off(evtStr, callback) {\n    let events = (evtStr || '').split(SPACE),\n      len = events.length,\n      n,\n      t,\n      event,\n      parts,\n      baseEvent,\n      name;\n    this._cache && this._cache.delete(ALL_LISTENERS);\n    if (!evtStr) {\n      for (t in this.eventListeners) {\n        this._off(t);\n      }\n    }\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1];\n      if (baseEvent) {\n        if (this.eventListeners[baseEvent]) {\n          this._off(baseEvent, name, callback);\n        }\n      } else {\n        for (t in this.eventListeners) {\n          this._off(t, name, callback);\n        }\n      }\n    }\n    return this;\n  }\n  dispatchEvent(evt) {\n    const e = {\n      target: this,\n      type: evt.type,\n      evt: evt\n    };\n    this.fire(evt.type, e);\n    return this;\n  }\n  addEventListener(type, handler) {\n    this.on(type, function (evt) {\n      handler.call(this, evt.evt);\n    });\n    return this;\n  }\n  removeEventListener(type) {\n    this.off(type);\n    return this;\n  }\n  _delegate(event, selector, handler) {\n    const stopNode = this;\n    this.on(event, function (evt) {\n      const targets = evt.target.findAncestors(selector, true, stopNode);\n      for (let i = 0; i < targets.length; i++) {\n        evt = Util.cloneObject(evt);\n        evt.currentTarget = targets[i];\n        handler.call(targets[i], evt);\n      }\n    });\n  }\n  remove() {\n    if (this.isDragging()) {\n      this.stopDrag();\n    }\n    DD._dragElements.delete(this._id);\n    this._remove();\n    return this;\n  }\n  _clearCaches() {\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n    this._clearSelfAndDescendantCache(STAGE);\n    this._clearSelfAndDescendantCache(VISIBLE);\n    this._clearSelfAndDescendantCache(LISTENING);\n  }\n  _remove() {\n    this._clearCaches();\n    const parent = this.getParent();\n    if (parent && parent.children) {\n      parent.children.splice(this.index, 1);\n      parent._setChildrenIndices();\n      this.parent = null;\n    }\n  }\n  destroy() {\n    this.remove();\n    this.clearCache();\n    return this;\n  }\n  getAttr(attr) {\n    const method = 'get' + Util._capitalize(attr);\n    if (Util._isFunction(this[method])) {\n      return this[method]();\n    }\n    return this.attrs[attr];\n  }\n  getAncestors() {\n    let parent = this.getParent(),\n      ancestors = [];\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.getParent();\n    }\n    return ancestors;\n  }\n  getAttrs() {\n    return this.attrs || {};\n  }\n  setAttrs(config) {\n    this._batchTransformChanges(() => {\n      let key, method;\n      if (!config) {\n        return this;\n      }\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n        method = SET + Util._capitalize(key);\n        if (Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          this._setAttr(key, config[key]);\n        }\n      }\n    });\n    return this;\n  }\n  isListening() {\n    return this._getCache(LISTENING, this._isListening);\n  }\n  _isListening(relativeTo) {\n    const listening = this.listening();\n    if (!listening) {\n      return false;\n    }\n    const parent = this.getParent();\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isListening(relativeTo);\n    } else {\n      return true;\n    }\n  }\n  isVisible() {\n    return this._getCache(VISIBLE, this._isVisible);\n  }\n  _isVisible(relativeTo) {\n    const visible = this.visible();\n    if (!visible) {\n      return false;\n    }\n    const parent = this.getParent();\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isVisible(relativeTo);\n    } else {\n      return true;\n    }\n  }\n  shouldDrawHit(top) {\n    let skipDragCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (top) {\n      return this._isVisible(top) && this._isListening(top);\n    }\n    const layer = this.getLayer();\n    let layerUnderDrag = false;\n    DD._dragElements.forEach(elem => {\n      if (elem.dragStatus !== 'dragging') {\n        return;\n      } else if (elem.node.nodeType === 'Stage') {\n        layerUnderDrag = true;\n      } else if (elem.node.getLayer() === layer) {\n        layerUnderDrag = true;\n      }\n    });\n    const dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && (layerUnderDrag || Konva.isTransforming());\n    return this.isListening() && this.isVisible() && !dragSkip;\n  }\n  show() {\n    this.visible(true);\n    return this;\n  }\n  hide() {\n    this.visible(false);\n    return this;\n  }\n  getZIndex() {\n    return this.index || 0;\n  }\n  getAbsoluteZIndex() {\n    let depth = this.getDepth(),\n      that = this,\n      index = 0,\n      nodes,\n      len,\n      n,\n      child;\n    function addChildren(children) {\n      nodes = [];\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        child = children[n];\n        index++;\n        if (child.nodeType !== SHAPE) {\n          nodes = nodes.concat(child.getChildren().slice());\n        }\n        if (child._id === that._id) {\n          n = len;\n        }\n      }\n      if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n        addChildren(nodes);\n      }\n    }\n    const stage = this.getStage();\n    if (that.nodeType !== UPPER_STAGE && stage) {\n      addChildren(stage.getChildren());\n    }\n    return index;\n  }\n  getDepth() {\n    let depth = 0,\n      parent = this.parent;\n    while (parent) {\n      depth++;\n      parent = parent.parent;\n    }\n    return depth;\n  }\n  _batchTransformChanges(func) {\n    this._batchingTransformChange = true;\n    func();\n    this._batchingTransformChange = false;\n    if (this._needClearTransformCache) {\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    }\n    this._needClearTransformCache = false;\n  }\n  setPosition(pos) {\n    this._batchTransformChanges(() => {\n      this.x(pos.x);\n      this.y(pos.y);\n    });\n    return this;\n  }\n  getPosition() {\n    return {\n      x: this.x(),\n      y: this.y()\n    };\n  }\n  getRelativePointerPosition() {\n    const stage = this.getStage();\n    if (!stage) {\n      return null;\n    }\n    const pos = stage.getPointerPosition();\n    if (!pos) {\n      return null;\n    }\n    const transform = this.getAbsoluteTransform().copy();\n    transform.invert();\n    return transform.point(pos);\n  }\n  getAbsolutePosition(top) {\n    let haveCachedParent = false;\n    let parent = this.parent;\n    while (parent) {\n      if (parent.isCached()) {\n        haveCachedParent = true;\n        break;\n      }\n      parent = parent.parent;\n    }\n    if (haveCachedParent && !top) {\n      top = true;\n    }\n    const absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n      absoluteTransform = new Transform(),\n      offset = this.offset();\n    absoluteTransform.m = absoluteMatrix.slice();\n    absoluteTransform.translate(offset.x, offset.y);\n    return absoluteTransform.getTranslation();\n  }\n  setAbsolutePosition(pos) {\n    const _this$_clearTransform = this._clearTransform(),\n      {\n        x,\n        y\n      } = _this$_clearTransform,\n      origTrans = _objectWithoutProperties(_this$_clearTransform, _excluded);\n    this.attrs.x = x;\n    this.attrs.y = y;\n    this._clearCache(TRANSFORM);\n    const it = this._getAbsoluteTransform().copy();\n    it.invert();\n    it.translate(pos.x, pos.y);\n    pos = {\n      x: this.attrs.x + it.getTranslation().x,\n      y: this.attrs.y + it.getTranslation().y\n    };\n    this._setTransform(origTrans);\n    this.setPosition({\n      x: pos.x,\n      y: pos.y\n    });\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    return this;\n  }\n  _setTransform(trans) {\n    let key;\n    for (key in trans) {\n      this.attrs[key] = trans[key];\n    }\n  }\n  _clearTransform() {\n    const trans = {\n      x: this.x(),\n      y: this.y(),\n      rotation: this.rotation(),\n      scaleX: this.scaleX(),\n      scaleY: this.scaleY(),\n      offsetX: this.offsetX(),\n      offsetY: this.offsetY(),\n      skewX: this.skewX(),\n      skewY: this.skewY()\n    };\n    this.attrs.x = 0;\n    this.attrs.y = 0;\n    this.attrs.rotation = 0;\n    this.attrs.scaleX = 1;\n    this.attrs.scaleY = 1;\n    this.attrs.offsetX = 0;\n    this.attrs.offsetY = 0;\n    this.attrs.skewX = 0;\n    this.attrs.skewY = 0;\n    return trans;\n  }\n  move(change) {\n    let changeX = change.x,\n      changeY = change.y,\n      x = this.x(),\n      y = this.y();\n    if (changeX !== undefined) {\n      x += changeX;\n    }\n    if (changeY !== undefined) {\n      y += changeY;\n    }\n    this.setPosition({\n      x: x,\n      y: y\n    });\n    return this;\n  }\n  _eachAncestorReverse(func, top) {\n    let family = [],\n      parent = this.getParent(),\n      len,\n      n;\n    if (top && top._id === this._id) {\n      return;\n    }\n    family.unshift(this);\n    while (parent && (!top || parent._id !== top._id)) {\n      family.unshift(parent);\n      parent = parent.parent;\n    }\n    len = family.length;\n    for (n = 0; n < len; n++) {\n      func(family[n]);\n    }\n  }\n  rotate(theta) {\n    this.rotation(this.rotation() + theta);\n    return this;\n  }\n  moveToTop() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToTop function is ignored.');\n      return false;\n    }\n    const index = this.index,\n      len = this.parent.getChildren().length;\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  moveUp() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveUp function is ignored.');\n      return false;\n    }\n    const index = this.index,\n      len = this.parent.getChildren().length;\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index + 1, 0, this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  moveDown() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveDown function is ignored.');\n      return false;\n    }\n    const index = this.index;\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index - 1, 0, this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  moveToBottom() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToBottom function is ignored.');\n      return false;\n    }\n    const index = this.index;\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.unshift(this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  setZIndex(zIndex) {\n    if (!this.parent) {\n      Util.warn('Node has no parent. zIndex parameter is ignored.');\n      return this;\n    }\n    if (zIndex < 0 || zIndex >= this.parent.children.length) {\n      Util.warn('Unexpected value ' + zIndex + ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' + (this.parent.children.length - 1) + '.');\n    }\n    const index = this.index;\n    this.parent.children.splice(index, 1);\n    this.parent.children.splice(zIndex, 0, this);\n    this.parent._setChildrenIndices();\n    return this;\n  }\n  getAbsoluteOpacity() {\n    return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n  }\n  _getAbsoluteOpacity() {\n    let absOpacity = this.opacity();\n    const parent = this.getParent();\n    if (parent && !parent._isUnderCache) {\n      absOpacity *= parent.getAbsoluteOpacity();\n    }\n    return absOpacity;\n  }\n  moveTo(newContainer) {\n    if (this.getParent() !== newContainer) {\n      this._remove();\n      newContainer.add(this);\n    }\n    return this;\n  }\n  toObject() {\n    let attrs = this.getAttrs(),\n      key,\n      val,\n      getter,\n      defaultValue,\n      nonPlainObject;\n    const obj = {\n      attrs: {},\n      className: this.getClassName()\n    };\n    for (key in attrs) {\n      val = attrs[key];\n      nonPlainObject = Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n      if (nonPlainObject) {\n        continue;\n      }\n      getter = typeof this[key] === 'function' && this[key];\n      delete attrs[key];\n      defaultValue = getter ? getter.call(this) : null;\n      attrs[key] = val;\n      if (defaultValue !== val) {\n        obj.attrs[key] = val;\n      }\n    }\n    return Util._prepareToStringify(obj);\n  }\n  toJSON() {\n    return JSON.stringify(this.toObject());\n  }\n  getParent() {\n    return this.parent;\n  }\n  findAncestors(selector, includeSelf, stopNode) {\n    const res = [];\n    if (includeSelf && this._isMatch(selector)) {\n      res.push(this);\n    }\n    let ancestor = this.parent;\n    while (ancestor) {\n      if (ancestor === stopNode) {\n        return res;\n      }\n      if (ancestor._isMatch(selector)) {\n        res.push(ancestor);\n      }\n      ancestor = ancestor.parent;\n    }\n    return res;\n  }\n  isAncestorOf(node) {\n    return false;\n  }\n  findAncestor(selector, includeSelf, stopNode) {\n    return this.findAncestors(selector, includeSelf, stopNode)[0];\n  }\n  _isMatch(selector) {\n    if (!selector) {\n      return false;\n    }\n    if (typeof selector === 'function') {\n      return selector(this);\n    }\n    let selectorArr = selector.replace(/ /g, '').split(','),\n      len = selectorArr.length,\n      n,\n      sel;\n    for (n = 0; n < len; n++) {\n      sel = selectorArr[n];\n      if (!Util.isValidSelector(sel)) {\n        Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n        Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n        Util.warn('Konva is awesome, right?');\n      }\n      if (sel.charAt(0) === '#') {\n        if (this.id() === sel.slice(1)) {\n          return true;\n        }\n      } else if (sel.charAt(0) === '.') {\n        if (this.hasName(sel.slice(1))) {\n          return true;\n        }\n      } else if (this.className === sel || this.nodeType === sel) {\n        return true;\n      }\n    }\n    return false;\n  }\n  getLayer() {\n    const parent = this.getParent();\n    return parent ? parent.getLayer() : null;\n  }\n  getStage() {\n    return this._getCache(STAGE, this._getStage);\n  }\n  _getStage() {\n    const parent = this.getParent();\n    if (parent) {\n      return parent.getStage();\n    } else {\n      return null;\n    }\n  }\n  fire(eventType) {\n    let evt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let bubble = arguments.length > 2 ? arguments[2] : undefined;\n    evt.target = evt.target || this;\n    if (bubble) {\n      this._fireAndBubble(eventType, evt);\n    } else {\n      this._fire(eventType, evt);\n    }\n    return this;\n  }\n  getAbsoluteTransform(top) {\n    if (top) {\n      return this._getAbsoluteTransform(top);\n    } else {\n      return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n    }\n  }\n  _getAbsoluteTransform(top) {\n    let at;\n    if (top) {\n      at = new Transform();\n      this._eachAncestorReverse(function (node) {\n        const transformsEnabled = node.transformsEnabled();\n        if (transformsEnabled === 'all') {\n          at.multiply(node.getTransform());\n        } else if (transformsEnabled === 'position') {\n          at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n        }\n      }, top);\n      return at;\n    } else {\n      at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n      if (this.parent) {\n        this.parent.getAbsoluteTransform().copyInto(at);\n      } else {\n        at.reset();\n      }\n      const transformsEnabled = this.transformsEnabled();\n      if (transformsEnabled === 'all') {\n        at.multiply(this.getTransform());\n      } else if (transformsEnabled === 'position') {\n        const x = this.attrs.x || 0;\n        const y = this.attrs.y || 0;\n        const offsetX = this.attrs.offsetX || 0;\n        const offsetY = this.attrs.offsetY || 0;\n        at.translate(x - offsetX, y - offsetY);\n      }\n      at.dirty = false;\n      return at;\n    }\n  }\n  getAbsoluteScale(top) {\n    let parent = this;\n    while (parent) {\n      if (parent._isUnderCache) {\n        top = parent;\n      }\n      parent = parent.getParent();\n    }\n    const transform = this.getAbsoluteTransform(top);\n    const attrs = transform.decompose();\n    return {\n      x: attrs.scaleX,\n      y: attrs.scaleY\n    };\n  }\n  getAbsoluteRotation() {\n    return this.getAbsoluteTransform().decompose().rotation;\n  }\n  getTransform() {\n    return this._getCache(TRANSFORM, this._getTransform);\n  }\n  _getTransform() {\n    var _a, _b;\n    const m = this._cache.get(TRANSFORM) || new Transform();\n    m.reset();\n    const x = this.x(),\n      y = this.y(),\n      rotation = Konva.getAngle(this.rotation()),\n      scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1,\n      scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1,\n      skewX = this.attrs.skewX || 0,\n      skewY = this.attrs.skewY || 0,\n      offsetX = this.attrs.offsetX || 0,\n      offsetY = this.attrs.offsetY || 0;\n    if (x !== 0 || y !== 0) {\n      m.translate(x, y);\n    }\n    if (rotation !== 0) {\n      m.rotate(rotation);\n    }\n    if (skewX !== 0 || skewY !== 0) {\n      m.skew(skewX, skewY);\n    }\n    if (scaleX !== 1 || scaleY !== 1) {\n      m.scale(scaleX, scaleY);\n    }\n    if (offsetX !== 0 || offsetY !== 0) {\n      m.translate(-1 * offsetX, -1 * offsetY);\n    }\n    m.dirty = false;\n    return m;\n  }\n  clone(obj) {\n    let attrs = Util.cloneObject(this.attrs),\n      key,\n      allListeners,\n      len,\n      n,\n      listener;\n    for (key in obj) {\n      attrs[key] = obj[key];\n    }\n    const node = new this.constructor(attrs);\n    for (key in this.eventListeners) {\n      allListeners = this.eventListeners[key];\n      len = allListeners.length;\n      for (n = 0; n < len; n++) {\n        listener = allListeners[n];\n        if (listener.name.indexOf(KONVA) < 0) {\n          if (!node.eventListeners[key]) {\n            node.eventListeners[key] = [];\n          }\n          node.eventListeners[key].push(listener);\n        }\n      }\n    }\n    return node;\n  }\n  _toKonvaCanvas(config) {\n    config = config || {};\n    const box = this.getClientRect();\n    const stage = this.getStage(),\n      x = config.x !== undefined ? config.x : Math.floor(box.x),\n      y = config.y !== undefined ? config.y : Math.floor(box.y),\n      pixelRatio = config.pixelRatio || 1,\n      canvas = new SceneCanvas({\n        width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n        height: config.height || Math.ceil(box.height) || (stage ? stage.height() : 0),\n        pixelRatio: pixelRatio\n      }),\n      context = canvas.getContext();\n    const bufferCanvas = new SceneCanvas({\n      width: canvas.width / canvas.pixelRatio + Math.abs(x),\n      height: canvas.height / canvas.pixelRatio + Math.abs(y),\n      pixelRatio: canvas.pixelRatio\n    });\n    if (config.imageSmoothingEnabled === false) {\n      context._context.imageSmoothingEnabled = false;\n    }\n    context.save();\n    if (x || y) {\n      context.translate(-1 * x, -1 * y);\n    }\n    this.drawScene(canvas, undefined, bufferCanvas);\n    context.restore();\n    return canvas;\n  }\n  toCanvas(config) {\n    return this._toKonvaCanvas(config)._canvas;\n  }\n  toDataURL(config) {\n    config = config || {};\n    const mimeType = config.mimeType || null,\n      quality = config.quality || null;\n    const url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n    if (config.callback) {\n      config.callback(url);\n    }\n    return url;\n  }\n  toImage(config) {\n    return new Promise((resolve, reject) => {\n      try {\n        const callback = config === null || config === void 0 ? void 0 : config.callback;\n        if (callback) delete config.callback;\n        Util._urlToImage(this.toDataURL(config), function (img) {\n          resolve(img);\n          callback === null || callback === void 0 ? void 0 : callback(img);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n  toBlob(config) {\n    return new Promise((resolve, reject) => {\n      try {\n        const callback = config === null || config === void 0 ? void 0 : config.callback;\n        if (callback) delete config.callback;\n        this.toCanvas(config).toBlob(blob => {\n          resolve(blob);\n          callback === null || callback === void 0 ? void 0 : callback(blob);\n        }, config === null || config === void 0 ? void 0 : config.mimeType, config === null || config === void 0 ? void 0 : config.quality);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n  setSize(size) {\n    this.width(size.width);\n    this.height(size.height);\n    return this;\n  }\n  getSize() {\n    return {\n      width: this.width(),\n      height: this.height()\n    };\n  }\n  getClassName() {\n    return this.className || this.nodeType;\n  }\n  getType() {\n    return this.nodeType;\n  }\n  getDragDistance() {\n    if (this.attrs.dragDistance !== undefined) {\n      return this.attrs.dragDistance;\n    } else if (this.parent) {\n      return this.parent.getDragDistance();\n    } else {\n      return Konva.dragDistance;\n    }\n  }\n  _off(type, name, callback) {\n    let evtListeners = this.eventListeners[type],\n      i,\n      evtName,\n      handler;\n    for (i = 0; i < evtListeners.length; i++) {\n      evtName = evtListeners[i].name;\n      handler = evtListeners[i].handler;\n      if ((evtName !== 'konva' || name === 'konva') && (!name || evtName === name) && (!callback || callback === handler)) {\n        evtListeners.splice(i, 1);\n        if (evtListeners.length === 0) {\n          delete this.eventListeners[type];\n          break;\n        }\n        i--;\n      }\n    }\n  }\n  _fireChangeEvent(attr, oldVal, newVal) {\n    this._fire(attr + CHANGE, {\n      oldVal: oldVal,\n      newVal: newVal\n    });\n  }\n  addName(name) {\n    if (!this.hasName(name)) {\n      const oldName = this.name();\n      const newName = oldName ? oldName + ' ' + name : name;\n      this.name(newName);\n    }\n    return this;\n  }\n  hasName(name) {\n    if (!name) {\n      return false;\n    }\n    const fullName = this.name();\n    if (!fullName) {\n      return false;\n    }\n    const names = (fullName || '').split(/\\s/g);\n    return names.indexOf(name) !== -1;\n  }\n  removeName(name) {\n    const names = (this.name() || '').split(/\\s/g);\n    const index = names.indexOf(name);\n    if (index !== -1) {\n      names.splice(index, 1);\n      this.name(names.join(' '));\n    }\n    return this;\n  }\n  setAttr(attr, val) {\n    const func = this[SET + Util._capitalize(attr)];\n    if (Util._isFunction(func)) {\n      func.call(this, val);\n    } else {\n      this._setAttr(attr, val);\n    }\n    return this;\n  }\n  _requestDraw() {\n    if (Konva.autoDrawEnabled) {\n      const drawNode = this.getLayer() || this.getStage();\n      drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n    }\n  }\n  _setAttr(key, val) {\n    const oldVal = this.attrs[key];\n    if (oldVal === val && !Util.isObject(val)) {\n      return;\n    }\n    if (val === undefined || val === null) {\n      delete this.attrs[key];\n    } else {\n      this.attrs[key] = val;\n    }\n    if (this._shouldFireChangeEvents) {\n      this._fireChangeEvent(key, oldVal, val);\n    }\n    this._requestDraw();\n  }\n  _setComponentAttr(key, component, val) {\n    let oldVal;\n    if (val !== undefined) {\n      oldVal = this.attrs[key];\n      if (!oldVal) {\n        this.attrs[key] = this.getAttr(key);\n      }\n      this.attrs[key][component] = val;\n      this._fireChangeEvent(key, oldVal, val);\n    }\n  }\n  _fireAndBubble(eventType, evt, compareShape) {\n    if (evt && this.nodeType === SHAPE) {\n      evt.target = this;\n    }\n    const nonBubbling = [MOUSEENTER, MOUSELEAVE, POINTERENTER, POINTERLEAVE, TOUCHENTER, TOUCHLEAVE];\n    const shouldStop = nonBubbling.indexOf(eventType) !== -1 && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === 'Stage' && !compareShape);\n    if (!shouldStop) {\n      this._fire(eventType, evt);\n      const stopBubble = nonBubbling.indexOf(eventType) !== -1 && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n      if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n        if (compareShape && compareShape.parent) {\n          this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n        } else {\n          this._fireAndBubble.call(this.parent, eventType, evt);\n        }\n      }\n    }\n  }\n  _getProtoListeners(eventType) {\n    var _a, _b, _c;\n    const allListeners = (_a = this._cache.get(ALL_LISTENERS)) !== null && _a !== void 0 ? _a : {};\n    let events = allListeners === null || allListeners === void 0 ? void 0 : allListeners[eventType];\n    if (events === undefined) {\n      events = [];\n      let obj = Object.getPrototypeOf(this);\n      while (obj) {\n        const hierarchyEvents = (_c = (_b = obj.eventListeners) === null || _b === void 0 ? void 0 : _b[eventType]) !== null && _c !== void 0 ? _c : [];\n        events.push(...hierarchyEvents);\n        obj = Object.getPrototypeOf(obj);\n      }\n      allListeners[eventType] = events;\n      this._cache.set(ALL_LISTENERS, allListeners);\n    }\n    return events;\n  }\n  _fire(eventType, evt) {\n    evt = evt || {};\n    evt.currentTarget = this;\n    evt.type = eventType;\n    const topListeners = this._getProtoListeners(eventType);\n    if (topListeners) {\n      for (let i = 0; i < topListeners.length; i++) {\n        topListeners[i].handler.call(this, evt);\n      }\n    }\n    const selfListeners = this.eventListeners[eventType];\n    if (selfListeners) {\n      for (let i = 0; i < selfListeners.length; i++) {\n        selfListeners[i].handler.call(this, evt);\n      }\n    }\n  }\n  draw() {\n    this.drawScene();\n    this.drawHit();\n    return this;\n  }\n  _createDragElement(evt) {\n    const pointerId = evt ? evt.pointerId : undefined;\n    const stage = this.getStage();\n    const ap = this.getAbsolutePosition();\n    if (!stage) {\n      return;\n    }\n    const pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n    DD._dragElements.set(this._id, {\n      node: this,\n      startPointerPos: pos,\n      offset: {\n        x: pos.x - ap.x,\n        y: pos.y - ap.y\n      },\n      dragStatus: 'ready',\n      pointerId\n    });\n  }\n  startDrag(evt) {\n    let bubbleEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!DD._dragElements.has(this._id)) {\n      this._createDragElement(evt);\n    }\n    const elem = DD._dragElements.get(this._id);\n    elem.dragStatus = 'dragging';\n    this.fire('dragstart', {\n      type: 'dragstart',\n      target: this,\n      evt: evt && evt.evt\n    }, bubbleEvent);\n  }\n  _setDragPosition(evt, elem) {\n    const pos = this.getStage()._getPointerById(elem.pointerId);\n    if (!pos) {\n      return;\n    }\n    let newNodePos = {\n      x: pos.x - elem.offset.x,\n      y: pos.y - elem.offset.y\n    };\n    const dbf = this.dragBoundFunc();\n    if (dbf !== undefined) {\n      const bounded = dbf.call(this, newNodePos, evt);\n      if (!bounded) {\n        Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n      } else {\n        newNodePos = bounded;\n      }\n    }\n    if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n      this.setAbsolutePosition(newNodePos);\n      this._requestDraw();\n    }\n    this._lastPos = newNodePos;\n  }\n  stopDrag(evt) {\n    const elem = DD._dragElements.get(this._id);\n    if (elem) {\n      elem.dragStatus = 'stopped';\n    }\n    DD._endDragBefore(evt);\n    DD._endDragAfter(evt);\n  }\n  setDraggable(draggable) {\n    this._setAttr('draggable', draggable);\n    this._dragChange();\n  }\n  isDragging() {\n    const elem = DD._dragElements.get(this._id);\n    return elem ? elem.dragStatus === 'dragging' : false;\n  }\n  _listenDrag() {\n    this._dragCleanup();\n    this.on('mousedown.konva touchstart.konva', function (evt) {\n      const shouldCheckButton = evt.evt['button'] !== undefined;\n      const canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n      if (!canDrag) {\n        return;\n      }\n      if (this.isDragging()) {\n        return;\n      }\n      let hasDraggingChild = false;\n      DD._dragElements.forEach(elem => {\n        if (this.isAncestorOf(elem.node)) {\n          hasDraggingChild = true;\n        }\n      });\n      if (!hasDraggingChild) {\n        this._createDragElement(evt);\n      }\n    });\n  }\n  _dragChange() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      this._dragCleanup();\n      const stage = this.getStage();\n      if (!stage) {\n        return;\n      }\n      const dragElement = DD._dragElements.get(this._id);\n      const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n      const isReady = dragElement && dragElement.dragStatus === 'ready';\n      if (isDragging) {\n        this.stopDrag();\n      } else if (isReady) {\n        DD._dragElements.delete(this._id);\n      }\n    }\n  }\n  _dragCleanup() {\n    this.off('mousedown.konva');\n    this.off('touchstart.konva');\n  }\n  isClientRectOnScreen() {\n    let margin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      x: 0,\n      y: 0\n    };\n    const stage = this.getStage();\n    if (!stage) {\n      return false;\n    }\n    const screenRect = {\n      x: -margin.x,\n      y: -margin.y,\n      width: stage.width() + 2 * margin.x,\n      height: stage.height() + 2 * margin.y\n    };\n    return Util.haveIntersection(screenRect, this.getClientRect());\n  }\n  static create(data, container) {\n    if (Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n    return this._createNode(data, container);\n  }\n  static _createNode(obj, container) {\n    let className = Node.prototype.getClassName.call(obj),\n      children = obj.children,\n      no,\n      len,\n      n;\n    if (container) {\n      obj.attrs.container = container;\n    }\n    if (!Konva[className]) {\n      Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n      className = 'Shape';\n    }\n    const Class = Konva[className];\n    no = new Class(obj.attrs);\n    if (children) {\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        no.add(Node._createNode(children[n]));\n      }\n    }\n    return no;\n  }\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n  if (this._batchingTransformChange) {\n    this._needClearTransformCache = true;\n    return;\n  }\n  this._clearCache(TRANSFORM);\n  this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n  this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n  this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n  this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', undefined, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', undefined, function (val) {\n  this._filterUpToDate = false;\n  return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n  rotateDeg: 'rotate',\n  setRotationDeg: 'setRotation',\n  getRotationDeg: 'getRotation'\n});","map":{"version":3,"names":["HitCanvas","SceneCanvas","isCSSFiltersSupported","DD","Factory","Konva","Transform","Util","getBooleanValidator","getNumberValidator","getStringValidator","parseCSSFilters","cssFilter","filterRegex","match","exec","filterName","filterValue","blurRadius","parseFloat","replace","imageData","KonvaFilters","Filters","Blur","call","brightness","includes","Brightness","contrast","konvaContrast","Math","sqrt","Contrast","Grayscale","Sepia","Invert","warn","concat","ABSOLUTE_OPACITY","ALL_LISTENERS","ABSOLUTE_TRANSFORM","ABSOLUTE_SCALE","CANVAS","CHANGE","CHILDREN","KONVA","LISTENING","MOUSEENTER","MOUSELEAVE","POINTERENTER","POINTERLEAVE","TOUCHENTER","TOUCHLEAVE","NAME","SET","SHAPE","SPACE","STAGE","TRANSFORM","UPPER_STAGE","VISIBLE","TRANSFORM_CHANGE_STR","join","idCounter","Node","constructor","config","_id","eventListeners","attrs","index","_allEventListeners","parent","_cache","Map","_attachedDepsListeners","_lastPos","_batchingTransformChange","_needClearTransformCache","_filterUpToDate","_isUnderCache","_dragEventId","_shouldFireChangeEvents","setAttrs","hasChildren","_clearCache","attr","get","dirty","delete","clear","_getCache","privateGetter","cache","isTransform","invalid","undefined","set","_calculate","name","deps","getter","depsString","map","dep","on","_getCanvasCache","_clearSelfAndDescendantCache","fire","clearCache","has","scene","filter","hit","buffer","releaseCanvas","_requestDraw","conf","rect","x","y","width","height","getClientRect","skipTransform","relativeTo","getParent","ceil","pixelRatio","floor","offset","drawBorder","hitCanvasPixelRatio","error","extraPaddingX","abs","round","extraPaddingY","cachedSceneCanvas","cachedFilterCanvas","willReadFrequently","cachedHitCanvas","sceneContext","getContext","hitContext","bufferCanvas","bufferContext","isCache","imageSmoothingEnabled","_context","save","translate","drawScene","drawHit","restore","beginPath","closePath","setAttr","stroke","isCached","Error","_transformedRect","top","points","minX","Infinity","minY","maxX","maxY","trans","getAbsoluteTransform","forEach","point","transformed","min","max","_drawCachedSceneCanvas","context","_applyOpacity","_applyGlobalCompositeOperation","canvasCache","cacheCanvas","_getCachedSceneCanvas","ratio","drawImage","_canvas","_drawCachedHitCanvas","hitCanvas","filters","cachedCanvas","sceneCanvas","filterCanvas","filterContext","len","n","length","useNativeOnly","i","fallbackRequired","setSize","finalFilter","getWidth","getHeight","getImageData","putImageData","e","message","evtStr","handler","arguments","_delegate","apply","events","split","event","parts","baseEvent","push","off","callback","t","_off","dispatchEvent","evt","target","type","addEventListener","removeEventListener","selector","stopNode","targets","findAncestors","cloneObject","currentTarget","remove","isDragging","stopDrag","_dragElements","_remove","_clearCaches","children","splice","_setChildrenIndices","destroy","getAttr","method","_capitalize","_isFunction","getAncestors","ancestors","getAttrs","_batchTransformChanges","key","_setAttr","isListening","_isListening","listening","isVisible","_isVisible","visible","shouldDrawHit","skipDragCheck","layer","getLayer","layerUnderDrag","elem","dragStatus","node","nodeType","dragSkip","hitOnDragEnabled","isTransforming","show","hide","getZIndex","getAbsoluteZIndex","depth","getDepth","that","nodes","child","addChildren","getChildren","slice","stage","getStage","func","setPosition","pos","getPosition","getRelativePointerPosition","getPointerPosition","transform","copy","invert","getAbsolutePosition","haveCachedParent","absoluteMatrix","getMatrix","absoluteTransform","m","getTranslation","setAbsolutePosition","_this$_clearTransform","_clearTransform","origTrans","_objectWithoutProperties","_excluded","it","_getAbsoluteTransform","_setTransform","rotation","scaleX","scaleY","offsetX","offsetY","skewX","skewY","move","change","changeX","changeY","_eachAncestorReverse","family","unshift","rotate","theta","moveToTop","moveUp","moveDown","moveToBottom","setZIndex","zIndex","getAbsoluteOpacity","_getAbsoluteOpacity","absOpacity","opacity","moveTo","newContainer","add","toObject","val","defaultValue","nonPlainObject","obj","className","getClassName","isObject","_isPlainObject","_isArray","_prepareToStringify","toJSON","JSON","stringify","includeSelf","res","_isMatch","ancestor","isAncestorOf","findAncestor","selectorArr","sel","isValidSelector","charAt","id","hasName","_getStage","eventType","bubble","_fireAndBubble","_fire","at","transformsEnabled","multiply","getTransform","copyInto","reset","getAbsoluteScale","decompose","getAbsoluteRotation","_getTransform","_a","_b","getAngle","skew","scale","clone","allListeners","listener","indexOf","_toKonvaCanvas","box","canvas","toCanvas","toDataURL","mimeType","quality","url","toImage","Promise","resolve","reject","_urlToImage","img","err","toBlob","blob","size","getSize","getType","getDragDistance","dragDistance","evtListeners","evtName","_fireChangeEvent","oldVal","newVal","addName","oldName","newName","fullName","names","removeName","autoDrawEnabled","drawNode","batchDraw","_setComponentAttr","component","compareShape","nonBubbling","shouldStop","stopBubble","cancelBubble","_getProtoListeners","_c","Object","getPrototypeOf","hierarchyEvents","topListeners","selfListeners","draw","_createDragElement","pointerId","ap","_getPointerById","_changedPointerPositions","startPointerPos","startDrag","bubbleEvent","_setDragPosition","newNodePos","dbf","dragBoundFunc","bounded","_endDragBefore","_endDragAfter","setDraggable","draggable","_dragChange","_listenDrag","_dragCleanup","shouldCheckButton","canDrag","dragButtons","hasDraggingChild","dragElement","isReady","isClientRectOnScreen","margin","screenRect","haveIntersection","create","data","container","_isString","parse","_createNode","prototype","no","Class","_attrsAffectingSize","addGetterSetter","addComponentsGetterSetter","backCompat","rotateDeg","setRotationDeg","getRotationDeg"],"sources":["C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/konva/lib/Node.js"],"sourcesContent":["import { HitCanvas, SceneCanvas } from \"./Canvas.js\";\r\nimport { isCSSFiltersSupported } from \"./Context.js\";\r\nimport { DD } from \"./DragAndDrop.js\";\r\nimport { Factory } from \"./Factory.js\";\r\nimport { Konva } from \"./Global.js\";\r\nimport { Transform, Util } from \"./Util.js\";\r\nimport { getBooleanValidator, getNumberValidator, getStringValidator, } from \"./Validators.js\";\r\nfunction parseCSSFilters(cssFilter) {\r\n    const filterRegex = /(\\w+)\\(([^)]+)\\)/g;\r\n    let match;\r\n    while ((match = filterRegex.exec(cssFilter)) !== null) {\r\n        const [, filterName, filterValue] = match;\r\n        switch (filterName) {\r\n            case 'blur': {\r\n                const blurRadius = parseFloat(filterValue.replace('px', ''));\r\n                return function (imageData) {\r\n                    this.blurRadius(blurRadius * 0.5);\r\n                    const KonvaFilters = Konva.Filters;\r\n                    if (KonvaFilters && KonvaFilters.Blur) {\r\n                        KonvaFilters.Blur.call(this, imageData);\r\n                    }\r\n                };\r\n            }\r\n            case 'brightness': {\r\n                const brightness = filterValue.includes('%')\r\n                    ? parseFloat(filterValue) / 100\r\n                    : parseFloat(filterValue);\r\n                return function (imageData) {\r\n                    this.brightness(brightness);\r\n                    const KonvaFilters = Konva.Filters;\r\n                    if (KonvaFilters && KonvaFilters.Brightness) {\r\n                        KonvaFilters.Brightness.call(this, imageData);\r\n                    }\r\n                };\r\n            }\r\n            case 'contrast': {\r\n                const contrast = parseFloat(filterValue);\r\n                return function (imageData) {\r\n                    const konvaContrast = 100 * (Math.sqrt(contrast) - 1);\r\n                    this.contrast(konvaContrast);\r\n                    const KonvaFilters = Konva.Filters;\r\n                    if (KonvaFilters && KonvaFilters.Contrast) {\r\n                        KonvaFilters.Contrast.call(this, imageData);\r\n                    }\r\n                };\r\n            }\r\n            case 'grayscale': {\r\n                return function (imageData) {\r\n                    const KonvaFilters = Konva.Filters;\r\n                    if (KonvaFilters && KonvaFilters.Grayscale) {\r\n                        KonvaFilters.Grayscale.call(this, imageData);\r\n                    }\r\n                };\r\n            }\r\n            case 'sepia': {\r\n                return function (imageData) {\r\n                    const KonvaFilters = Konva.Filters;\r\n                    if (KonvaFilters && KonvaFilters.Sepia) {\r\n                        KonvaFilters.Sepia.call(this, imageData);\r\n                    }\r\n                };\r\n            }\r\n            case 'invert': {\r\n                return function (imageData) {\r\n                    const KonvaFilters = Konva.Filters;\r\n                    if (KonvaFilters && KonvaFilters.Invert) {\r\n                        KonvaFilters.Invert.call(this, imageData);\r\n                    }\r\n                };\r\n            }\r\n            default:\r\n                Util.warn(`CSS filter \"${filterName}\" is not supported in fallback mode. Consider using function filters for better compatibility.`);\r\n                break;\r\n        }\r\n    }\r\n    return () => { };\r\n}\r\nconst ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', POINTERENTER = 'pointerenter', POINTERLEAVE = 'pointerleave', TOUCHENTER = 'touchenter', TOUCHLEAVE = 'touchleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\r\n    'xChange.konva',\r\n    'yChange.konva',\r\n    'scaleXChange.konva',\r\n    'scaleYChange.konva',\r\n    'skewXChange.konva',\r\n    'skewYChange.konva',\r\n    'rotationChange.konva',\r\n    'offsetXChange.konva',\r\n    'offsetYChange.konva',\r\n    'transformsEnabledChange.konva',\r\n].join(SPACE);\r\nlet idCounter = 1;\r\nexport class Node {\r\n    constructor(config) {\r\n        this._id = idCounter++;\r\n        this.eventListeners = {};\r\n        this.attrs = {};\r\n        this.index = 0;\r\n        this._allEventListeners = null;\r\n        this.parent = null;\r\n        this._cache = new Map();\r\n        this._attachedDepsListeners = new Map();\r\n        this._lastPos = null;\r\n        this._batchingTransformChange = false;\r\n        this._needClearTransformCache = false;\r\n        this._filterUpToDate = false;\r\n        this._isUnderCache = false;\r\n        this._dragEventId = null;\r\n        this._shouldFireChangeEvents = false;\r\n        this.setAttrs(config);\r\n        this._shouldFireChangeEvents = true;\r\n    }\r\n    hasChildren() {\r\n        return false;\r\n    }\r\n    _clearCache(attr) {\r\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\r\n            this._cache.get(attr)) {\r\n            this._cache.get(attr).dirty = true;\r\n        }\r\n        else if (attr) {\r\n            this._cache.delete(attr);\r\n        }\r\n        else {\r\n            this._cache.clear();\r\n        }\r\n    }\r\n    _getCache(attr, privateGetter) {\r\n        let cache = this._cache.get(attr);\r\n        const isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\r\n        const invalid = cache === undefined || (isTransform && cache.dirty === true);\r\n        if (invalid) {\r\n            cache = privateGetter.call(this);\r\n            this._cache.set(attr, cache);\r\n        }\r\n        return cache;\r\n    }\r\n    _calculate(name, deps, getter) {\r\n        if (!this._attachedDepsListeners.get(name)) {\r\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\r\n            this.on(depsString, () => {\r\n                this._clearCache(name);\r\n            });\r\n            this._attachedDepsListeners.set(name, true);\r\n        }\r\n        return this._getCache(name, getter);\r\n    }\r\n    _getCanvasCache() {\r\n        return this._cache.get(CANVAS);\r\n    }\r\n    _clearSelfAndDescendantCache(attr) {\r\n        this._clearCache(attr);\r\n        if (attr === ABSOLUTE_TRANSFORM) {\r\n            this.fire('absoluteTransformChange');\r\n        }\r\n    }\r\n    clearCache() {\r\n        if (this._cache.has(CANVAS)) {\r\n            const { scene, filter, hit, buffer } = this._cache.get(CANVAS);\r\n            Util.releaseCanvas(scene, filter, hit, buffer);\r\n            this._cache.delete(CANVAS);\r\n        }\r\n        this._clearSelfAndDescendantCache();\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    cache(config) {\r\n        const conf = config || {};\r\n        let rect = {};\r\n        if (conf.x === undefined ||\r\n            conf.y === undefined ||\r\n            conf.width === undefined ||\r\n            conf.height === undefined) {\r\n            rect = this.getClientRect({\r\n                skipTransform: true,\r\n                relativeTo: this.getParent() || undefined,\r\n            });\r\n        }\r\n        let width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\r\n        if (!width || !height) {\r\n            Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\r\n            return;\r\n        }\r\n        const extraPaddingX = Math.abs(Math.round(rect.x) - x) > 0.5 ? 1 : 0;\r\n        const extraPaddingY = Math.abs(Math.round(rect.y) - y) > 0.5 ? 1 : 0;\r\n        width += offset * 2 + extraPaddingX;\r\n        height += offset * 2 + extraPaddingY;\r\n        x -= offset;\r\n        y -= offset;\r\n        const cachedSceneCanvas = new SceneCanvas({\r\n            pixelRatio: pixelRatio,\r\n            width: width,\r\n            height: height,\r\n        }), cachedFilterCanvas = new SceneCanvas({\r\n            pixelRatio: pixelRatio,\r\n            width: 0,\r\n            height: 0,\r\n            willReadFrequently: true,\r\n        }), cachedHitCanvas = new HitCanvas({\r\n            pixelRatio: hitCanvasPixelRatio,\r\n            width: width,\r\n            height: height,\r\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\r\n        const bufferCanvas = new SceneCanvas({\r\n            width: cachedSceneCanvas.width / cachedSceneCanvas.pixelRatio + Math.abs(x),\r\n            height: cachedSceneCanvas.height / cachedSceneCanvas.pixelRatio + Math.abs(y),\r\n            pixelRatio: cachedSceneCanvas.pixelRatio,\r\n        }), bufferContext = bufferCanvas.getContext();\r\n        cachedHitCanvas.isCache = true;\r\n        cachedSceneCanvas.isCache = true;\r\n        this._cache.delete(CANVAS);\r\n        this._filterUpToDate = false;\r\n        if (conf.imageSmoothingEnabled === false) {\r\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\r\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\r\n        }\r\n        sceneContext.save();\r\n        hitContext.save();\r\n        bufferContext.save();\r\n        sceneContext.translate(-x, -y);\r\n        hitContext.translate(-x, -y);\r\n        bufferContext.translate(-x, -y);\r\n        bufferCanvas.x = x;\r\n        bufferCanvas.y = y;\r\n        this._isUnderCache = true;\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\r\n        this.drawScene(cachedSceneCanvas, this, bufferCanvas);\r\n        this.drawHit(cachedHitCanvas, this);\r\n        this._isUnderCache = false;\r\n        sceneContext.restore();\r\n        hitContext.restore();\r\n        if (drawBorder) {\r\n            sceneContext.save();\r\n            sceneContext.beginPath();\r\n            sceneContext.rect(0, 0, width, height);\r\n            sceneContext.closePath();\r\n            sceneContext.setAttr('strokeStyle', 'red');\r\n            sceneContext.setAttr('lineWidth', 5);\r\n            sceneContext.stroke();\r\n            sceneContext.restore();\r\n        }\r\n        this._cache.set(CANVAS, {\r\n            scene: cachedSceneCanvas,\r\n            filter: cachedFilterCanvas,\r\n            hit: cachedHitCanvas,\r\n            buffer: bufferCanvas,\r\n            x: x,\r\n            y: y,\r\n        });\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    isCached() {\r\n        return this._cache.has(CANVAS);\r\n    }\r\n    getClientRect(config) {\r\n        throw new Error('abstract \"getClientRect\" method call');\r\n    }\r\n    _transformedRect(rect, top) {\r\n        const points = [\r\n            { x: rect.x, y: rect.y },\r\n            { x: rect.x + rect.width, y: rect.y },\r\n            { x: rect.x + rect.width, y: rect.y + rect.height },\r\n            { x: rect.x, y: rect.y + rect.height },\r\n        ];\r\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n        const trans = this.getAbsoluteTransform(top);\r\n        points.forEach(function (point) {\r\n            const transformed = trans.point(point);\r\n            if (minX === undefined) {\r\n                minX = maxX = transformed.x;\r\n                minY = maxY = transformed.y;\r\n            }\r\n            minX = Math.min(minX, transformed.x);\r\n            minY = Math.min(minY, transformed.y);\r\n            maxX = Math.max(maxX, transformed.x);\r\n            maxY = Math.max(maxY, transformed.y);\r\n        });\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    }\r\n    _drawCachedSceneCanvas(context) {\r\n        context.save();\r\n        context._applyOpacity(this);\r\n        context._applyGlobalCompositeOperation(this);\r\n        const canvasCache = this._getCanvasCache();\r\n        context.translate(canvasCache.x, canvasCache.y);\r\n        const cacheCanvas = this._getCachedSceneCanvas();\r\n        const ratio = cacheCanvas.pixelRatio;\r\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\r\n        context.restore();\r\n    }\r\n    _drawCachedHitCanvas(context) {\r\n        const canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\r\n        context.save();\r\n        context.translate(canvasCache.x, canvasCache.y);\r\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\r\n        context.restore();\r\n    }\r\n    _getCachedSceneCanvas() {\r\n        let filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\r\n        if (!filters || filters.length === 0) {\r\n            return sceneCanvas;\r\n        }\r\n        if (this._filterUpToDate) {\r\n            return filterCanvas;\r\n        }\r\n        let useNativeOnly = true;\r\n        for (let i = 0; i < filters.length; i++) {\r\n            const fallbackRequired = typeof filters[i] === 'string' && !isCSSFiltersSupported();\r\n            if (fallbackRequired) {\r\n            }\r\n            if (typeof filters[i] !== 'string' || !isCSSFiltersSupported()) {\r\n                useNativeOnly = false;\r\n                break;\r\n            }\r\n        }\r\n        const ratio = sceneCanvas.pixelRatio;\r\n        filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\r\n        if (useNativeOnly) {\r\n            const finalFilter = filters.join(' ');\r\n            filterContext.save();\r\n            filterContext.setAttr('filter', finalFilter);\r\n            filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\r\n            filterContext.restore();\r\n            this._filterUpToDate = true;\r\n            return filterCanvas;\r\n        }\r\n        try {\r\n            len = filters.length;\r\n            filterContext.clear();\r\n            filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\r\n            imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\r\n            for (n = 0; n < len; n++) {\r\n                filter = filters[n];\r\n                if (typeof filter === 'string') {\r\n                    filter = parseCSSFilters(filter);\r\n                }\r\n                filter.call(this, imageData);\r\n                filterContext.putImageData(imageData, 0, 0);\r\n            }\r\n        }\r\n        catch (e) {\r\n            Util.error('Unable to apply filter. ' +\r\n                e.message +\r\n                ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\r\n        }\r\n        this._filterUpToDate = true;\r\n        return filterCanvas;\r\n    }\r\n    on(evtStr, handler) {\r\n        if (this._cache) {\r\n            this._cache.delete(ALL_LISTENERS);\r\n        }\r\n        if (arguments.length === 3) {\r\n            return this._delegate.apply(this, arguments);\r\n        }\r\n        const events = evtStr.split(SPACE);\r\n        for (let n = 0; n < events.length; n++) {\r\n            const event = events[n];\r\n            const parts = event.split('.');\r\n            const baseEvent = parts[0];\r\n            const name = parts[1] || '';\r\n            if (!this.eventListeners[baseEvent]) {\r\n                this.eventListeners[baseEvent] = [];\r\n            }\r\n            this.eventListeners[baseEvent].push({ name, handler });\r\n        }\r\n        return this;\r\n    }\r\n    off(evtStr, callback) {\r\n        let events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\r\n        this._cache && this._cache.delete(ALL_LISTENERS);\r\n        if (!evtStr) {\r\n            for (t in this.eventListeners) {\r\n                this._off(t);\r\n            }\r\n        }\r\n        for (n = 0; n < len; n++) {\r\n            event = events[n];\r\n            parts = event.split('.');\r\n            baseEvent = parts[0];\r\n            name = parts[1];\r\n            if (baseEvent) {\r\n                if (this.eventListeners[baseEvent]) {\r\n                    this._off(baseEvent, name, callback);\r\n                }\r\n            }\r\n            else {\r\n                for (t in this.eventListeners) {\r\n                    this._off(t, name, callback);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    dispatchEvent(evt) {\r\n        const e = {\r\n            target: this,\r\n            type: evt.type,\r\n            evt: evt,\r\n        };\r\n        this.fire(evt.type, e);\r\n        return this;\r\n    }\r\n    addEventListener(type, handler) {\r\n        this.on(type, function (evt) {\r\n            handler.call(this, evt.evt);\r\n        });\r\n        return this;\r\n    }\r\n    removeEventListener(type) {\r\n        this.off(type);\r\n        return this;\r\n    }\r\n    _delegate(event, selector, handler) {\r\n        const stopNode = this;\r\n        this.on(event, function (evt) {\r\n            const targets = evt.target.findAncestors(selector, true, stopNode);\r\n            for (let i = 0; i < targets.length; i++) {\r\n                evt = Util.cloneObject(evt);\r\n                evt.currentTarget = targets[i];\r\n                handler.call(targets[i], evt);\r\n            }\r\n        });\r\n    }\r\n    remove() {\r\n        if (this.isDragging()) {\r\n            this.stopDrag();\r\n        }\r\n        DD._dragElements.delete(this._id);\r\n        this._remove();\r\n        return this;\r\n    }\r\n    _clearCaches() {\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\r\n        this._clearSelfAndDescendantCache(STAGE);\r\n        this._clearSelfAndDescendantCache(VISIBLE);\r\n        this._clearSelfAndDescendantCache(LISTENING);\r\n    }\r\n    _remove() {\r\n        this._clearCaches();\r\n        const parent = this.getParent();\r\n        if (parent && parent.children) {\r\n            parent.children.splice(this.index, 1);\r\n            parent._setChildrenIndices();\r\n            this.parent = null;\r\n        }\r\n    }\r\n    destroy() {\r\n        this.remove();\r\n        this.clearCache();\r\n        return this;\r\n    }\r\n    getAttr(attr) {\r\n        const method = 'get' + Util._capitalize(attr);\r\n        if (Util._isFunction(this[method])) {\r\n            return this[method]();\r\n        }\r\n        return this.attrs[attr];\r\n    }\r\n    getAncestors() {\r\n        let parent = this.getParent(), ancestors = [];\r\n        while (parent) {\r\n            ancestors.push(parent);\r\n            parent = parent.getParent();\r\n        }\r\n        return ancestors;\r\n    }\r\n    getAttrs() {\r\n        return (this.attrs || {});\r\n    }\r\n    setAttrs(config) {\r\n        this._batchTransformChanges(() => {\r\n            let key, method;\r\n            if (!config) {\r\n                return this;\r\n            }\r\n            for (key in config) {\r\n                if (key === CHILDREN) {\r\n                    continue;\r\n                }\r\n                method = SET + Util._capitalize(key);\r\n                if (Util._isFunction(this[method])) {\r\n                    this[method](config[key]);\r\n                }\r\n                else {\r\n                    this._setAttr(key, config[key]);\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    isListening() {\r\n        return this._getCache(LISTENING, this._isListening);\r\n    }\r\n    _isListening(relativeTo) {\r\n        const listening = this.listening();\r\n        if (!listening) {\r\n            return false;\r\n        }\r\n        const parent = this.getParent();\r\n        if (parent && parent !== relativeTo && this !== relativeTo) {\r\n            return parent._isListening(relativeTo);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    isVisible() {\r\n        return this._getCache(VISIBLE, this._isVisible);\r\n    }\r\n    _isVisible(relativeTo) {\r\n        const visible = this.visible();\r\n        if (!visible) {\r\n            return false;\r\n        }\r\n        const parent = this.getParent();\r\n        if (parent && parent !== relativeTo && this !== relativeTo) {\r\n            return parent._isVisible(relativeTo);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    shouldDrawHit(top, skipDragCheck = false) {\r\n        if (top) {\r\n            return this._isVisible(top) && this._isListening(top);\r\n        }\r\n        const layer = this.getLayer();\r\n        let layerUnderDrag = false;\r\n        DD._dragElements.forEach((elem) => {\r\n            if (elem.dragStatus !== 'dragging') {\r\n                return;\r\n            }\r\n            else if (elem.node.nodeType === 'Stage') {\r\n                layerUnderDrag = true;\r\n            }\r\n            else if (elem.node.getLayer() === layer) {\r\n                layerUnderDrag = true;\r\n            }\r\n        });\r\n        const dragSkip = !skipDragCheck &&\r\n            !Konva.hitOnDragEnabled &&\r\n            (layerUnderDrag || Konva.isTransforming());\r\n        return this.isListening() && this.isVisible() && !dragSkip;\r\n    }\r\n    show() {\r\n        this.visible(true);\r\n        return this;\r\n    }\r\n    hide() {\r\n        this.visible(false);\r\n        return this;\r\n    }\r\n    getZIndex() {\r\n        return this.index || 0;\r\n    }\r\n    getAbsoluteZIndex() {\r\n        let depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\r\n        function addChildren(children) {\r\n            nodes = [];\r\n            len = children.length;\r\n            for (n = 0; n < len; n++) {\r\n                child = children[n];\r\n                index++;\r\n                if (child.nodeType !== SHAPE) {\r\n                    nodes = nodes.concat(child.getChildren().slice());\r\n                }\r\n                if (child._id === that._id) {\r\n                    n = len;\r\n                }\r\n            }\r\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\r\n                addChildren(nodes);\r\n            }\r\n        }\r\n        const stage = this.getStage();\r\n        if (that.nodeType !== UPPER_STAGE && stage) {\r\n            addChildren(stage.getChildren());\r\n        }\r\n        return index;\r\n    }\r\n    getDepth() {\r\n        let depth = 0, parent = this.parent;\r\n        while (parent) {\r\n            depth++;\r\n            parent = parent.parent;\r\n        }\r\n        return depth;\r\n    }\r\n    _batchTransformChanges(func) {\r\n        this._batchingTransformChange = true;\r\n        func();\r\n        this._batchingTransformChange = false;\r\n        if (this._needClearTransformCache) {\r\n            this._clearCache(TRANSFORM);\r\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        }\r\n        this._needClearTransformCache = false;\r\n    }\r\n    setPosition(pos) {\r\n        this._batchTransformChanges(() => {\r\n            this.x(pos.x);\r\n            this.y(pos.y);\r\n        });\r\n        return this;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            x: this.x(),\r\n            y: this.y(),\r\n        };\r\n    }\r\n    getRelativePointerPosition() {\r\n        const stage = this.getStage();\r\n        if (!stage) {\r\n            return null;\r\n        }\r\n        const pos = stage.getPointerPosition();\r\n        if (!pos) {\r\n            return null;\r\n        }\r\n        const transform = this.getAbsoluteTransform().copy();\r\n        transform.invert();\r\n        return transform.point(pos);\r\n    }\r\n    getAbsolutePosition(top) {\r\n        let haveCachedParent = false;\r\n        let parent = this.parent;\r\n        while (parent) {\r\n            if (parent.isCached()) {\r\n                haveCachedParent = true;\r\n                break;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        if (haveCachedParent && !top) {\r\n            top = true;\r\n        }\r\n        const absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\r\n        absoluteTransform.m = absoluteMatrix.slice();\r\n        absoluteTransform.translate(offset.x, offset.y);\r\n        return absoluteTransform.getTranslation();\r\n    }\r\n    setAbsolutePosition(pos) {\r\n        const { x, y, ...origTrans } = this._clearTransform();\r\n        this.attrs.x = x;\r\n        this.attrs.y = y;\r\n        this._clearCache(TRANSFORM);\r\n        const it = this._getAbsoluteTransform().copy();\r\n        it.invert();\r\n        it.translate(pos.x, pos.y);\r\n        pos = {\r\n            x: this.attrs.x + it.getTranslation().x,\r\n            y: this.attrs.y + it.getTranslation().y,\r\n        };\r\n        this._setTransform(origTrans);\r\n        this.setPosition({ x: pos.x, y: pos.y });\r\n        this._clearCache(TRANSFORM);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        return this;\r\n    }\r\n    _setTransform(trans) {\r\n        let key;\r\n        for (key in trans) {\r\n            this.attrs[key] = trans[key];\r\n        }\r\n    }\r\n    _clearTransform() {\r\n        const trans = {\r\n            x: this.x(),\r\n            y: this.y(),\r\n            rotation: this.rotation(),\r\n            scaleX: this.scaleX(),\r\n            scaleY: this.scaleY(),\r\n            offsetX: this.offsetX(),\r\n            offsetY: this.offsetY(),\r\n            skewX: this.skewX(),\r\n            skewY: this.skewY(),\r\n        };\r\n        this.attrs.x = 0;\r\n        this.attrs.y = 0;\r\n        this.attrs.rotation = 0;\r\n        this.attrs.scaleX = 1;\r\n        this.attrs.scaleY = 1;\r\n        this.attrs.offsetX = 0;\r\n        this.attrs.offsetY = 0;\r\n        this.attrs.skewX = 0;\r\n        this.attrs.skewY = 0;\r\n        return trans;\r\n    }\r\n    move(change) {\r\n        let changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\r\n        if (changeX !== undefined) {\r\n            x += changeX;\r\n        }\r\n        if (changeY !== undefined) {\r\n            y += changeY;\r\n        }\r\n        this.setPosition({ x: x, y: y });\r\n        return this;\r\n    }\r\n    _eachAncestorReverse(func, top) {\r\n        let family = [], parent = this.getParent(), len, n;\r\n        if (top && top._id === this._id) {\r\n            return;\r\n        }\r\n        family.unshift(this);\r\n        while (parent && (!top || parent._id !== top._id)) {\r\n            family.unshift(parent);\r\n            parent = parent.parent;\r\n        }\r\n        len = family.length;\r\n        for (n = 0; n < len; n++) {\r\n            func(family[n]);\r\n        }\r\n    }\r\n    rotate(theta) {\r\n        this.rotation(this.rotation() + theta);\r\n        return this;\r\n    }\r\n    moveToTop() {\r\n        if (!this.parent) {\r\n            Util.warn('Node has no parent. moveToTop function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index, len = this.parent.getChildren().length;\r\n        if (index < len - 1) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.push(this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveUp() {\r\n        if (!this.parent) {\r\n            Util.warn('Node has no parent. moveUp function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index, len = this.parent.getChildren().length;\r\n        if (index < len - 1) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.splice(index + 1, 0, this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveDown() {\r\n        if (!this.parent) {\r\n            Util.warn('Node has no parent. moveDown function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index;\r\n        if (index > 0) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.splice(index - 1, 0, this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveToBottom() {\r\n        if (!this.parent) {\r\n            Util.warn('Node has no parent. moveToBottom function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index;\r\n        if (index > 0) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.unshift(this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    setZIndex(zIndex) {\r\n        if (!this.parent) {\r\n            Util.warn('Node has no parent. zIndex parameter is ignored.');\r\n            return this;\r\n        }\r\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\r\n            Util.warn('Unexpected value ' +\r\n                zIndex +\r\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\r\n                (this.parent.children.length - 1) +\r\n                '.');\r\n        }\r\n        const index = this.index;\r\n        this.parent.children.splice(index, 1);\r\n        this.parent.children.splice(zIndex, 0, this);\r\n        this.parent._setChildrenIndices();\r\n        return this;\r\n    }\r\n    getAbsoluteOpacity() {\r\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\r\n    }\r\n    _getAbsoluteOpacity() {\r\n        let absOpacity = this.opacity();\r\n        const parent = this.getParent();\r\n        if (parent && !parent._isUnderCache) {\r\n            absOpacity *= parent.getAbsoluteOpacity();\r\n        }\r\n        return absOpacity;\r\n    }\r\n    moveTo(newContainer) {\r\n        if (this.getParent() !== newContainer) {\r\n            this._remove();\r\n            newContainer.add(this);\r\n        }\r\n        return this;\r\n    }\r\n    toObject() {\r\n        let attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\r\n        const obj = {\r\n            attrs: {},\r\n            className: this.getClassName(),\r\n        };\r\n        for (key in attrs) {\r\n            val = attrs[key];\r\n            nonPlainObject =\r\n                Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\r\n            if (nonPlainObject) {\r\n                continue;\r\n            }\r\n            getter = typeof this[key] === 'function' && this[key];\r\n            delete attrs[key];\r\n            defaultValue = getter ? getter.call(this) : null;\r\n            attrs[key] = val;\r\n            if (defaultValue !== val) {\r\n                obj.attrs[key] = val;\r\n            }\r\n        }\r\n        return Util._prepareToStringify(obj);\r\n    }\r\n    toJSON() {\r\n        return JSON.stringify(this.toObject());\r\n    }\r\n    getParent() {\r\n        return this.parent;\r\n    }\r\n    findAncestors(selector, includeSelf, stopNode) {\r\n        const res = [];\r\n        if (includeSelf && this._isMatch(selector)) {\r\n            res.push(this);\r\n        }\r\n        let ancestor = this.parent;\r\n        while (ancestor) {\r\n            if (ancestor === stopNode) {\r\n                return res;\r\n            }\r\n            if (ancestor._isMatch(selector)) {\r\n                res.push(ancestor);\r\n            }\r\n            ancestor = ancestor.parent;\r\n        }\r\n        return res;\r\n    }\r\n    isAncestorOf(node) {\r\n        return false;\r\n    }\r\n    findAncestor(selector, includeSelf, stopNode) {\r\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\r\n    }\r\n    _isMatch(selector) {\r\n        if (!selector) {\r\n            return false;\r\n        }\r\n        if (typeof selector === 'function') {\r\n            return selector(this);\r\n        }\r\n        let selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\r\n        for (n = 0; n < len; n++) {\r\n            sel = selectorArr[n];\r\n            if (!Util.isValidSelector(sel)) {\r\n                Util.warn('Selector \"' +\r\n                    sel +\r\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\r\n                Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\r\n                Util.warn('Konva is awesome, right?');\r\n            }\r\n            if (sel.charAt(0) === '#') {\r\n                if (this.id() === sel.slice(1)) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (sel.charAt(0) === '.') {\r\n                if (this.hasName(sel.slice(1))) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (this.className === sel || this.nodeType === sel) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getLayer() {\r\n        const parent = this.getParent();\r\n        return parent ? parent.getLayer() : null;\r\n    }\r\n    getStage() {\r\n        return this._getCache(STAGE, this._getStage);\r\n    }\r\n    _getStage() {\r\n        const parent = this.getParent();\r\n        if (parent) {\r\n            return parent.getStage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    fire(eventType, evt = {}, bubble) {\r\n        evt.target = evt.target || this;\r\n        if (bubble) {\r\n            this._fireAndBubble(eventType, evt);\r\n        }\r\n        else {\r\n            this._fire(eventType, evt);\r\n        }\r\n        return this;\r\n    }\r\n    getAbsoluteTransform(top) {\r\n        if (top) {\r\n            return this._getAbsoluteTransform(top);\r\n        }\r\n        else {\r\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\r\n        }\r\n    }\r\n    _getAbsoluteTransform(top) {\r\n        let at;\r\n        if (top) {\r\n            at = new Transform();\r\n            this._eachAncestorReverse(function (node) {\r\n                const transformsEnabled = node.transformsEnabled();\r\n                if (transformsEnabled === 'all') {\r\n                    at.multiply(node.getTransform());\r\n                }\r\n                else if (transformsEnabled === 'position') {\r\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\r\n                }\r\n            }, top);\r\n            return at;\r\n        }\r\n        else {\r\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\r\n            if (this.parent) {\r\n                this.parent.getAbsoluteTransform().copyInto(at);\r\n            }\r\n            else {\r\n                at.reset();\r\n            }\r\n            const transformsEnabled = this.transformsEnabled();\r\n            if (transformsEnabled === 'all') {\r\n                at.multiply(this.getTransform());\r\n            }\r\n            else if (transformsEnabled === 'position') {\r\n                const x = this.attrs.x || 0;\r\n                const y = this.attrs.y || 0;\r\n                const offsetX = this.attrs.offsetX || 0;\r\n                const offsetY = this.attrs.offsetY || 0;\r\n                at.translate(x - offsetX, y - offsetY);\r\n            }\r\n            at.dirty = false;\r\n            return at;\r\n        }\r\n    }\r\n    getAbsoluteScale(top) {\r\n        let parent = this;\r\n        while (parent) {\r\n            if (parent._isUnderCache) {\r\n                top = parent;\r\n            }\r\n            parent = parent.getParent();\r\n        }\r\n        const transform = this.getAbsoluteTransform(top);\r\n        const attrs = transform.decompose();\r\n        return {\r\n            x: attrs.scaleX,\r\n            y: attrs.scaleY,\r\n        };\r\n    }\r\n    getAbsoluteRotation() {\r\n        return this.getAbsoluteTransform().decompose().rotation;\r\n    }\r\n    getTransform() {\r\n        return this._getCache(TRANSFORM, this._getTransform);\r\n    }\r\n    _getTransform() {\r\n        var _a, _b;\r\n        const m = this._cache.get(TRANSFORM) || new Transform();\r\n        m.reset();\r\n        const x = this.x(), y = this.y(), rotation = Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\r\n        if (x !== 0 || y !== 0) {\r\n            m.translate(x, y);\r\n        }\r\n        if (rotation !== 0) {\r\n            m.rotate(rotation);\r\n        }\r\n        if (skewX !== 0 || skewY !== 0) {\r\n            m.skew(skewX, skewY);\r\n        }\r\n        if (scaleX !== 1 || scaleY !== 1) {\r\n            m.scale(scaleX, scaleY);\r\n        }\r\n        if (offsetX !== 0 || offsetY !== 0) {\r\n            m.translate(-1 * offsetX, -1 * offsetY);\r\n        }\r\n        m.dirty = false;\r\n        return m;\r\n    }\r\n    clone(obj) {\r\n        let attrs = Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\r\n        for (key in obj) {\r\n            attrs[key] = obj[key];\r\n        }\r\n        const node = new this.constructor(attrs);\r\n        for (key in this.eventListeners) {\r\n            allListeners = this.eventListeners[key];\r\n            len = allListeners.length;\r\n            for (n = 0; n < len; n++) {\r\n                listener = allListeners[n];\r\n                if (listener.name.indexOf(KONVA) < 0) {\r\n                    if (!node.eventListeners[key]) {\r\n                        node.eventListeners[key] = [];\r\n                    }\r\n                    node.eventListeners[key].push(listener);\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n    _toKonvaCanvas(config) {\r\n        config = config || {};\r\n        const box = this.getClientRect();\r\n        const stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\r\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\r\n            height: config.height ||\r\n                Math.ceil(box.height) ||\r\n                (stage ? stage.height() : 0),\r\n            pixelRatio: pixelRatio,\r\n        }), context = canvas.getContext();\r\n        const bufferCanvas = new SceneCanvas({\r\n            width: canvas.width / canvas.pixelRatio + Math.abs(x),\r\n            height: canvas.height / canvas.pixelRatio + Math.abs(y),\r\n            pixelRatio: canvas.pixelRatio,\r\n        });\r\n        if (config.imageSmoothingEnabled === false) {\r\n            context._context.imageSmoothingEnabled = false;\r\n        }\r\n        context.save();\r\n        if (x || y) {\r\n            context.translate(-1 * x, -1 * y);\r\n        }\r\n        this.drawScene(canvas, undefined, bufferCanvas);\r\n        context.restore();\r\n        return canvas;\r\n    }\r\n    toCanvas(config) {\r\n        return this._toKonvaCanvas(config)._canvas;\r\n    }\r\n    toDataURL(config) {\r\n        config = config || {};\r\n        const mimeType = config.mimeType || null, quality = config.quality || null;\r\n        const url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\r\n        if (config.callback) {\r\n            config.callback(url);\r\n        }\r\n        return url;\r\n    }\r\n    toImage(config) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\r\n                if (callback)\r\n                    delete config.callback;\r\n                Util._urlToImage(this.toDataURL(config), function (img) {\r\n                    resolve(img);\r\n                    callback === null || callback === void 0 ? void 0 : callback(img);\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    toBlob(config) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\r\n                if (callback)\r\n                    delete config.callback;\r\n                this.toCanvas(config).toBlob((blob) => {\r\n                    resolve(blob);\r\n                    callback === null || callback === void 0 ? void 0 : callback(blob);\r\n                }, config === null || config === void 0 ? void 0 : config.mimeType, config === null || config === void 0 ? void 0 : config.quality);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    setSize(size) {\r\n        this.width(size.width);\r\n        this.height(size.height);\r\n        return this;\r\n    }\r\n    getSize() {\r\n        return {\r\n            width: this.width(),\r\n            height: this.height(),\r\n        };\r\n    }\r\n    getClassName() {\r\n        return this.className || this.nodeType;\r\n    }\r\n    getType() {\r\n        return this.nodeType;\r\n    }\r\n    getDragDistance() {\r\n        if (this.attrs.dragDistance !== undefined) {\r\n            return this.attrs.dragDistance;\r\n        }\r\n        else if (this.parent) {\r\n            return this.parent.getDragDistance();\r\n        }\r\n        else {\r\n            return Konva.dragDistance;\r\n        }\r\n    }\r\n    _off(type, name, callback) {\r\n        let evtListeners = this.eventListeners[type], i, evtName, handler;\r\n        for (i = 0; i < evtListeners.length; i++) {\r\n            evtName = evtListeners[i].name;\r\n            handler = evtListeners[i].handler;\r\n            if ((evtName !== 'konva' || name === 'konva') &&\r\n                (!name || evtName === name) &&\r\n                (!callback || callback === handler)) {\r\n                evtListeners.splice(i, 1);\r\n                if (evtListeners.length === 0) {\r\n                    delete this.eventListeners[type];\r\n                    break;\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    _fireChangeEvent(attr, oldVal, newVal) {\r\n        this._fire(attr + CHANGE, {\r\n            oldVal: oldVal,\r\n            newVal: newVal,\r\n        });\r\n    }\r\n    addName(name) {\r\n        if (!this.hasName(name)) {\r\n            const oldName = this.name();\r\n            const newName = oldName ? oldName + ' ' + name : name;\r\n            this.name(newName);\r\n        }\r\n        return this;\r\n    }\r\n    hasName(name) {\r\n        if (!name) {\r\n            return false;\r\n        }\r\n        const fullName = this.name();\r\n        if (!fullName) {\r\n            return false;\r\n        }\r\n        const names = (fullName || '').split(/\\s/g);\r\n        return names.indexOf(name) !== -1;\r\n    }\r\n    removeName(name) {\r\n        const names = (this.name() || '').split(/\\s/g);\r\n        const index = names.indexOf(name);\r\n        if (index !== -1) {\r\n            names.splice(index, 1);\r\n            this.name(names.join(' '));\r\n        }\r\n        return this;\r\n    }\r\n    setAttr(attr, val) {\r\n        const func = this[SET + Util._capitalize(attr)];\r\n        if (Util._isFunction(func)) {\r\n            func.call(this, val);\r\n        }\r\n        else {\r\n            this._setAttr(attr, val);\r\n        }\r\n        return this;\r\n    }\r\n    _requestDraw() {\r\n        if (Konva.autoDrawEnabled) {\r\n            const drawNode = this.getLayer() || this.getStage();\r\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\r\n        }\r\n    }\r\n    _setAttr(key, val) {\r\n        const oldVal = this.attrs[key];\r\n        if (oldVal === val && !Util.isObject(val)) {\r\n            return;\r\n        }\r\n        if (val === undefined || val === null) {\r\n            delete this.attrs[key];\r\n        }\r\n        else {\r\n            this.attrs[key] = val;\r\n        }\r\n        if (this._shouldFireChangeEvents) {\r\n            this._fireChangeEvent(key, oldVal, val);\r\n        }\r\n        this._requestDraw();\r\n    }\r\n    _setComponentAttr(key, component, val) {\r\n        let oldVal;\r\n        if (val !== undefined) {\r\n            oldVal = this.attrs[key];\r\n            if (!oldVal) {\r\n                this.attrs[key] = this.getAttr(key);\r\n            }\r\n            this.attrs[key][component] = val;\r\n            this._fireChangeEvent(key, oldVal, val);\r\n        }\r\n    }\r\n    _fireAndBubble(eventType, evt, compareShape) {\r\n        if (evt && this.nodeType === SHAPE) {\r\n            evt.target = this;\r\n        }\r\n        const nonBubbling = [\r\n            MOUSEENTER,\r\n            MOUSELEAVE,\r\n            POINTERENTER,\r\n            POINTERLEAVE,\r\n            TOUCHENTER,\r\n            TOUCHLEAVE,\r\n        ];\r\n        const shouldStop = nonBubbling.indexOf(eventType) !== -1 &&\r\n            ((compareShape &&\r\n                (this === compareShape ||\r\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\r\n                (this.nodeType === 'Stage' && !compareShape));\r\n        if (!shouldStop) {\r\n            this._fire(eventType, evt);\r\n            const stopBubble = nonBubbling.indexOf(eventType) !== -1 &&\r\n                compareShape &&\r\n                compareShape.isAncestorOf &&\r\n                compareShape.isAncestorOf(this) &&\r\n                !compareShape.isAncestorOf(this.parent);\r\n            if (((evt && !evt.cancelBubble) || !evt) &&\r\n                this.parent &&\r\n                this.parent.isListening() &&\r\n                !stopBubble) {\r\n                if (compareShape && compareShape.parent) {\r\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\r\n                }\r\n                else {\r\n                    this._fireAndBubble.call(this.parent, eventType, evt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getProtoListeners(eventType) {\r\n        var _a, _b, _c;\r\n        const allListeners = (_a = this._cache.get(ALL_LISTENERS)) !== null && _a !== void 0 ? _a : {};\r\n        let events = allListeners === null || allListeners === void 0 ? void 0 : allListeners[eventType];\r\n        if (events === undefined) {\r\n            events = [];\r\n            let obj = Object.getPrototypeOf(this);\r\n            while (obj) {\r\n                const hierarchyEvents = (_c = (_b = obj.eventListeners) === null || _b === void 0 ? void 0 : _b[eventType]) !== null && _c !== void 0 ? _c : [];\r\n                events.push(...hierarchyEvents);\r\n                obj = Object.getPrototypeOf(obj);\r\n            }\r\n            allListeners[eventType] = events;\r\n            this._cache.set(ALL_LISTENERS, allListeners);\r\n        }\r\n        return events;\r\n    }\r\n    _fire(eventType, evt) {\r\n        evt = evt || {};\r\n        evt.currentTarget = this;\r\n        evt.type = eventType;\r\n        const topListeners = this._getProtoListeners(eventType);\r\n        if (topListeners) {\r\n            for (let i = 0; i < topListeners.length; i++) {\r\n                topListeners[i].handler.call(this, evt);\r\n            }\r\n        }\r\n        const selfListeners = this.eventListeners[eventType];\r\n        if (selfListeners) {\r\n            for (let i = 0; i < selfListeners.length; i++) {\r\n                selfListeners[i].handler.call(this, evt);\r\n            }\r\n        }\r\n    }\r\n    draw() {\r\n        this.drawScene();\r\n        this.drawHit();\r\n        return this;\r\n    }\r\n    _createDragElement(evt) {\r\n        const pointerId = evt ? evt.pointerId : undefined;\r\n        const stage = this.getStage();\r\n        const ap = this.getAbsolutePosition();\r\n        if (!stage) {\r\n            return;\r\n        }\r\n        const pos = stage._getPointerById(pointerId) ||\r\n            stage._changedPointerPositions[0] ||\r\n            ap;\r\n        DD._dragElements.set(this._id, {\r\n            node: this,\r\n            startPointerPos: pos,\r\n            offset: {\r\n                x: pos.x - ap.x,\r\n                y: pos.y - ap.y,\r\n            },\r\n            dragStatus: 'ready',\r\n            pointerId,\r\n        });\r\n    }\r\n    startDrag(evt, bubbleEvent = true) {\r\n        if (!DD._dragElements.has(this._id)) {\r\n            this._createDragElement(evt);\r\n        }\r\n        const elem = DD._dragElements.get(this._id);\r\n        elem.dragStatus = 'dragging';\r\n        this.fire('dragstart', {\r\n            type: 'dragstart',\r\n            target: this,\r\n            evt: evt && evt.evt,\r\n        }, bubbleEvent);\r\n    }\r\n    _setDragPosition(evt, elem) {\r\n        const pos = this.getStage()._getPointerById(elem.pointerId);\r\n        if (!pos) {\r\n            return;\r\n        }\r\n        let newNodePos = {\r\n            x: pos.x - elem.offset.x,\r\n            y: pos.y - elem.offset.y,\r\n        };\r\n        const dbf = this.dragBoundFunc();\r\n        if (dbf !== undefined) {\r\n            const bounded = dbf.call(this, newNodePos, evt);\r\n            if (!bounded) {\r\n                Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\r\n            }\r\n            else {\r\n                newNodePos = bounded;\r\n            }\r\n        }\r\n        if (!this._lastPos ||\r\n            this._lastPos.x !== newNodePos.x ||\r\n            this._lastPos.y !== newNodePos.y) {\r\n            this.setAbsolutePosition(newNodePos);\r\n            this._requestDraw();\r\n        }\r\n        this._lastPos = newNodePos;\r\n    }\r\n    stopDrag(evt) {\r\n        const elem = DD._dragElements.get(this._id);\r\n        if (elem) {\r\n            elem.dragStatus = 'stopped';\r\n        }\r\n        DD._endDragBefore(evt);\r\n        DD._endDragAfter(evt);\r\n    }\r\n    setDraggable(draggable) {\r\n        this._setAttr('draggable', draggable);\r\n        this._dragChange();\r\n    }\r\n    isDragging() {\r\n        const elem = DD._dragElements.get(this._id);\r\n        return elem ? elem.dragStatus === 'dragging' : false;\r\n    }\r\n    _listenDrag() {\r\n        this._dragCleanup();\r\n        this.on('mousedown.konva touchstart.konva', function (evt) {\r\n            const shouldCheckButton = evt.evt['button'] !== undefined;\r\n            const canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\r\n            if (!canDrag) {\r\n                return;\r\n            }\r\n            if (this.isDragging()) {\r\n                return;\r\n            }\r\n            let hasDraggingChild = false;\r\n            DD._dragElements.forEach((elem) => {\r\n                if (this.isAncestorOf(elem.node)) {\r\n                    hasDraggingChild = true;\r\n                }\r\n            });\r\n            if (!hasDraggingChild) {\r\n                this._createDragElement(evt);\r\n            }\r\n        });\r\n    }\r\n    _dragChange() {\r\n        if (this.attrs.draggable) {\r\n            this._listenDrag();\r\n        }\r\n        else {\r\n            this._dragCleanup();\r\n            const stage = this.getStage();\r\n            if (!stage) {\r\n                return;\r\n            }\r\n            const dragElement = DD._dragElements.get(this._id);\r\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\r\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\r\n            if (isDragging) {\r\n                this.stopDrag();\r\n            }\r\n            else if (isReady) {\r\n                DD._dragElements.delete(this._id);\r\n            }\r\n        }\r\n    }\r\n    _dragCleanup() {\r\n        this.off('mousedown.konva');\r\n        this.off('touchstart.konva');\r\n    }\r\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\r\n        const stage = this.getStage();\r\n        if (!stage) {\r\n            return false;\r\n        }\r\n        const screenRect = {\r\n            x: -margin.x,\r\n            y: -margin.y,\r\n            width: stage.width() + 2 * margin.x,\r\n            height: stage.height() + 2 * margin.y,\r\n        };\r\n        return Util.haveIntersection(screenRect, this.getClientRect());\r\n    }\r\n    static create(data, container) {\r\n        if (Util._isString(data)) {\r\n            data = JSON.parse(data);\r\n        }\r\n        return this._createNode(data, container);\r\n    }\r\n    static _createNode(obj, container) {\r\n        let className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\r\n        if (container) {\r\n            obj.attrs.container = container;\r\n        }\r\n        if (!Konva[className]) {\r\n            Util.warn('Can not find a node with class name \"' +\r\n                className +\r\n                '\". Fallback to \"Shape\".');\r\n            className = 'Shape';\r\n        }\r\n        const Class = Konva[className];\r\n        no = new Class(obj.attrs);\r\n        if (children) {\r\n            len = children.length;\r\n            for (n = 0; n < len; n++) {\r\n                no.add(Node._createNode(children[n]));\r\n            }\r\n        }\r\n        return no;\r\n    }\r\n}\r\nNode.prototype.nodeType = 'Node';\r\nNode.prototype._attrsAffectingSize = [];\r\nNode.prototype.eventListeners = {};\r\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\r\n    if (this._batchingTransformChange) {\r\n        this._needClearTransformCache = true;\r\n        return;\r\n    }\r\n    this._clearCache(TRANSFORM);\r\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(VISIBLE);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(LISTENING);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n});\r\nconst addGetterSetter = Factory.addGetterSetter;\r\naddGetterSetter(Node, 'zIndex');\r\naddGetterSetter(Node, 'absolutePosition');\r\naddGetterSetter(Node, 'position');\r\naddGetterSetter(Node, 'x', 0, getNumberValidator());\r\naddGetterSetter(Node, 'y', 0, getNumberValidator());\r\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\r\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\r\naddGetterSetter(Node, 'name', '', getStringValidator());\r\naddGetterSetter(Node, 'id', '', getStringValidator());\r\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\r\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\r\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\r\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\r\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\r\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\r\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\r\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\r\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\r\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\r\naddGetterSetter(Node, 'dragDistance', undefined, getNumberValidator());\r\naddGetterSetter(Node, 'width', 0, getNumberValidator());\r\naddGetterSetter(Node, 'height', 0, getNumberValidator());\r\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\r\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\r\naddGetterSetter(Node, 'filters', undefined, function (val) {\r\n    this._filterUpToDate = false;\r\n    return val;\r\n});\r\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\r\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\r\naddGetterSetter(Node, 'size');\r\naddGetterSetter(Node, 'dragBoundFunc');\r\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\r\nFactory.backCompat(Node, {\r\n    rotateDeg: 'rotate',\r\n    setRotationDeg: 'setRotation',\r\n    getRotationDeg: 'getRotation',\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}