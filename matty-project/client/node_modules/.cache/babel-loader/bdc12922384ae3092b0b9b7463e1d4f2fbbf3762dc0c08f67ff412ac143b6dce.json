{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst initialState = {\n  shapes: [],\n  texts: [],\n  lines: []\n};\nconst defaultShapeProps = {\n  rotation: 0,\n  scale: 1,\n  width: 120,\n  height: 80\n};\nconst defaultTextProps = {\n  rotation: 0,\n  scale: 1,\n  fontSize: 24\n};\nconst defaultImageProps = {\n  rotation: 0,\n  scale: 1,\n  w: 200,\n  h: 200\n};\nconst CanvasEditor = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n  const [isRotating, setIsRotating] = useState(false);\n  const [history, setHistory] = useState([initialState]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const drawingPointsRef = useRef([]);\n  const rotateStartAngleRef = useRef(0);\n  const rotateStartMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const resizeStartMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const resizeStartPropsRef = useRef(null);\n  const {\n    shapes,\n    texts,\n    lines\n  } = history[historyIndex];\n  function getCenter(obj) {\n    if (obj.type === 'image') return {\n      x: obj.x + obj.w / 2,\n      y: obj.y + obj.h / 2\n    };\n    if (obj.text) return {\n      x: obj.x,\n      y: obj.y\n    };\n    return {\n      x: obj.x + (obj.width || 120) / 2,\n      y: obj.y + (obj.height || 80) / 2\n    };\n  }\n  function drawHandles(ctx, obj) {\n    const center = getCenter(obj);\n    ctx.save();\n    ctx.translate(center.x, center.y);\n    ctx.rotate(obj.rotation || 0);\n    ctx.scale(obj.scale || 1, obj.scale || 1);\n    // Resize handle (bottom right)\n    ctx.beginPath();\n    ctx.arc((obj.width || obj.w || 120) / 2, (obj.height || obj.h || 80) / 2, 8, 0, 2 * Math.PI);\n    ctx.fillStyle = '#4f46e5';\n    ctx.fill();\n    // Rotate handle (top center, offset)\n    ctx.beginPath();\n    ctx.arc(0, -((obj.height || obj.h || 80) / 2) - 30, 8, 0, 2 * Math.PI);\n    ctx.fillStyle = '#f59e42';\n    ctx.fill();\n    ctx.restore();\n  }\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 2;\n    ctx.lineCap = 'round';\n    shapes.forEach((shape, idx) => {\n      ctx.save();\n      const center = getCenter(shape);\n      ctx.translate(center.x, center.y);\n      ctx.rotate(shape.rotation || 0);\n      ctx.scale(shape.scale || 1, shape.scale || 1);\n      ctx.fillStyle = shape.color;\n      ctx.strokeStyle = shape.color;\n      if (shape.type === 'rectangle') {\n        ctx.fillRect(-(shape.width || 120) / 2, -(shape.height || 80) / 2, shape.width || 120, shape.height || 80);\n      } else if (shape.type === 'square') {\n        ctx.fillRect(-50, -50, 100, 100);\n      } else if (shape.type === 'circle') {\n        ctx.beginPath();\n        ctx.arc(0, 0, 50, 0, 2 * Math.PI);\n        ctx.fill();\n      } else if (shape.type === 'oval') {\n        ctx.save();\n        ctx.scale(1.5, 1);\n        ctx.beginPath();\n        ctx.arc(0, 0, 40, 0, 2 * Math.PI);\n        ctx.restore();\n        ctx.fill();\n      } else if (shape.type === 'triangle') {\n        ctx.beginPath();\n        ctx.moveTo(-60, 40);\n        ctx.lineTo(60, 40);\n        ctx.lineTo(0, -40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'parallelogram') {\n        ctx.beginPath();\n        ctx.moveTo(-40, 40);\n        ctx.lineTo(80, 40);\n        ctx.lineTo(60, -40);\n        ctx.lineTo(-60, -40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'rhombus') {\n        ctx.beginPath();\n        ctx.moveTo(0, -40);\n        ctx.lineTo(60, 0);\n        ctx.lineTo(0, 40);\n        ctx.lineTo(-60, 0);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'trapezoid') {\n        ctx.beginPath();\n        ctx.moveTo(-40, 40);\n        ctx.lineTo(40, 40);\n        ctx.lineTo(20, -40);\n        ctx.lineTo(-20, -40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'kite') {\n        ctx.beginPath();\n        ctx.moveTo(0, -40);\n        ctx.lineTo(40, 0);\n        ctx.lineTo(0, 40);\n        ctx.lineTo(-40, 0);\n        ctx.closePath();\n        ctx.fill();\n      } else if (['pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'].includes(shape.type)) {\n        const sides = {\n          pentagon: 5,\n          hexagon: 6,\n          heptagon: 7,\n          octagon: 8,\n          nonagon: 9,\n          decagon: 10\n        }[shape.type];\n        drawPolygon(ctx, 0, 0, 50, sides, shape.color);\n      }\n      if (idx === selectedShapeIndex) {\n        drawHandles(ctx, shape);\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n    texts.forEach((t, idx) => {\n      ctx.save();\n      ctx.translate(t.x, t.y);\n      ctx.rotate(t.rotation || 0);\n      ctx.scale(t.scale || 1, t.scale || 1);\n      ctx.font = `${t.fontSize || 24}px Arial`;\n      ctx.fillStyle = t.color;\n      ctx.fillText(t.text, 0, 0);\n      if (idx === selectedTextIndex) {\n        drawHandles(ctx, {\n          ...t,\n          width: ctx.measureText(t.text).width,\n          height: t.fontSize || 24\n        });\n      }\n      ctx.restore();\n    });\n    shapes.forEach((shape, idx) => {\n      if (shape.type === 'image') {\n        ctx.save();\n        const center = getCenter(shape);\n        ctx.translate(center.x, center.y);\n        ctx.rotate(shape.rotation || 0);\n        ctx.scale(shape.scale || 1, shape.scale || 1);\n        const img = new window.Image();\n        img.src = shape.src;\n        img.onload = () => {\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\n          if (idx === selectedImageIndex) {\n            drawHandles(ctx, shape);\n          }\n        };\n        if (img.complete) {\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\n          if (idx === selectedImageIndex) {\n            drawHandles(ctx, shape);\n          }\n        }\n        ctx.restore();\n      }\n    });\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex, selectedImageIndex]);\n\n  // ...[mouse event handlers, add shape/text/image, color changes, undo/redo, etc. as in previous code block]...\n  // (For brevity, see the previous answer for the full set of event handlers and logic.)\n\n  // ...[rest of your code remains unchanged]...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"n/yzPXaY2ZhbZfbXNAQbUxPD0CA=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","initialState","shapes","texts","lines","defaultShapeProps","rotation","scale","width","height","defaultTextProps","fontSize","defaultImageProps","w","h","CanvasEditor","_s","canvasRef","fileInputRef","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedTextIndex","setSelectedTextIndex","selectedShapeIndex","setSelectedShapeIndex","selectedImageIndex","setSelectedImageIndex","isDragging","setIsDragging","isDrawing","setIsDrawing","isResizing","setIsResizing","isRotating","setIsRotating","history","setHistory","historyIndex","setHistoryIndex","drawingPointsRef","rotateStartAngleRef","rotateStartMouseRef","resizeStartMouseRef","resizeStartPropsRef","getCenter","obj","type","text","drawHandles","center","save","translate","rotate","arc","restore","canvas","current","getContext","clearRect","lineWidth","lineCap","forEach","shape","idx","strokeStyle","fillRect","includes","pentagon","hexagon","heptagon","octagon","nonagon","decagon","line","mode","size","globalCompositeOperation","points","stroke","t","font","fillText","measureText","img","window","Image","src","onload","drawImage","complete","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst initialState = {\r\n  shapes: [],\r\n  texts: [],\r\n  lines: []\r\n};\r\n\r\nconst defaultShapeProps = { rotation: 0, scale: 1, width: 120, height: 80 };\r\nconst defaultTextProps = { rotation: 0, scale: 1, fontSize: 24 };\r\nconst defaultImageProps = { rotation: 0, scale: 1, w: 200, h: 200 };\r\n\r\nconst CanvasEditor = () => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\r\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\r\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [history, setHistory] = useState([initialState]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const drawingPointsRef = useRef([]);\r\n  const rotateStartAngleRef = useRef(0);\r\n  const rotateStartMouseRef = useRef({ x: 0, y: 0 });\r\n  const resizeStartMouseRef = useRef({ x: 0, y: 0 });\r\n  const resizeStartPropsRef = useRef(null);\r\n\r\n  const { shapes, texts, lines } = history[historyIndex];\r\n\r\n  function getCenter(obj) {\r\n    if (obj.type === 'image') return { x: obj.x + obj.w / 2, y: obj.y + obj.h / 2 };\r\n    if (obj.text) return { x: obj.x, y: obj.y };\r\n    return { x: obj.x + (obj.width || 120) / 2, y: obj.y + (obj.height || 80) / 2 };\r\n  }\r\n\r\n  function drawHandles(ctx, obj) {\r\n    const center = getCenter(obj);\r\n    ctx.save();\r\n    ctx.translate(center.x, center.y);\r\n    ctx.rotate(obj.rotation || 0);\r\n    ctx.scale(obj.scale || 1, obj.scale || 1);\r\n    // Resize handle (bottom right)\r\n    ctx.beginPath();\r\n    ctx.arc((obj.width || obj.w || 120) / 2, (obj.height || obj.h || 80) / 2, 8, 0, 2 * Math.PI);\r\n    ctx.fillStyle = '#4f46e5';\r\n    ctx.fill();\r\n    // Rotate handle (top center, offset)\r\n    ctx.beginPath();\r\n    ctx.arc(0, -((obj.height || obj.h || 80) / 2) - 30, 8, 0, 2 * Math.PI);\r\n    ctx.fillStyle = '#f59e42';\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineWidth = 2;\r\n    ctx.lineCap = 'round';\r\n\r\n    shapes.forEach((shape, idx) => {\r\n      ctx.save();\r\n      const center = getCenter(shape);\r\n      ctx.translate(center.x, center.y);\r\n      ctx.rotate(shape.rotation || 0);\r\n      ctx.scale(shape.scale || 1, shape.scale || 1);\r\n\r\n      ctx.fillStyle = shape.color;\r\n      ctx.strokeStyle = shape.color;\r\n      if (shape.type === 'rectangle') {\r\n        ctx.fillRect(-(shape.width || 120) / 2, -(shape.height || 80) / 2, shape.width || 120, shape.height || 80);\r\n      } else if (shape.type === 'square') {\r\n        ctx.fillRect(-50, -50, 100, 100);\r\n      } else if (shape.type === 'circle') {\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 50, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      } else if (shape.type === 'oval') {\r\n        ctx.save();\r\n        ctx.scale(1.5, 1);\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 40, 0, 2 * Math.PI);\r\n        ctx.restore();\r\n        ctx.fill();\r\n      } else if (shape.type === 'triangle') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(-60, 40);\r\n        ctx.lineTo(60, 40);\r\n        ctx.lineTo(0, -40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'parallelogram') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(-40, 40);\r\n        ctx.lineTo(80, 40);\r\n        ctx.lineTo(60, -40);\r\n        ctx.lineTo(-60, -40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'rhombus') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, -40);\r\n        ctx.lineTo(60, 0);\r\n        ctx.lineTo(0, 40);\r\n        ctx.lineTo(-60, 0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'trapezoid') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(-40, 40);\r\n        ctx.lineTo(40, 40);\r\n        ctx.lineTo(20, -40);\r\n        ctx.lineTo(-20, -40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'kite') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, -40);\r\n        ctx.lineTo(40, 0);\r\n        ctx.lineTo(0, 40);\r\n        ctx.lineTo(-40, 0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if ([\r\n        'pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'\r\n      ].includes(shape.type)) {\r\n        const sides = {\r\n          pentagon: 5, hexagon: 6, heptagon: 7, octagon: 8, nonagon: 9, decagon: 10\r\n        }[shape.type];\r\n        drawPolygon(ctx, 0, 0, 50, sides, shape.color);\r\n      }\r\n      if (idx === selectedShapeIndex) {\r\n        drawHandles(ctx, shape);\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\r\n      line.points.forEach(([x, y], i) => {\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n    });\r\n\r\n    texts.forEach((t, idx) => {\r\n      ctx.save();\r\n      ctx.translate(t.x, t.y);\r\n      ctx.rotate(t.rotation || 0);\r\n      ctx.scale(t.scale || 1, t.scale || 1);\r\n      ctx.font = `${t.fontSize || 24}px Arial`;\r\n      ctx.fillStyle = t.color;\r\n      ctx.fillText(t.text, 0, 0);\r\n      if (idx === selectedTextIndex) {\r\n        drawHandles(ctx, { ...t, width: ctx.measureText(t.text).width, height: t.fontSize || 24 });\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    shapes.forEach((shape, idx) => {\r\n      if (shape.type === 'image') {\r\n        ctx.save();\r\n        const center = getCenter(shape);\r\n        ctx.translate(center.x, center.y);\r\n        ctx.rotate(shape.rotation || 0);\r\n        ctx.scale(shape.scale || 1, shape.scale || 1);\r\n        const img = new window.Image();\r\n        img.src = shape.src;\r\n        img.onload = () => {\r\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\r\n          if (idx === selectedImageIndex) {\r\n            drawHandles(ctx, shape);\r\n          }\r\n        };\r\n        if (img.complete) {\r\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\r\n          if (idx === selectedImageIndex) {\r\n            drawHandles(ctx, shape);\r\n          }\r\n        }\r\n        ctx.restore();\r\n      }\r\n    });\r\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex, selectedImageIndex]);\r\n\r\n  // ...[mouse event handlers, add shape/text/image, color changes, undo/redo, etc. as in previous code block]...\r\n  // (For brevity, see the previous answer for the full set of event handlers and logic.)\r\n\r\n  // ...[rest of your code remains unchanged]...\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* ...header, toolbar, sidebar, and canvas as in previous code... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACpDL,GAAG,CAACM,SAAS,CAAC,CAAC;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;IAC9B,MAAMC,KAAK,GAAI,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,CAAC,GAAIH,KAAK,GAAGK,IAAI,CAACC,EAAE,GAAG,CAAC;IACrD,MAAMC,EAAE,GAAGV,CAAC,GAAGE,MAAM,GAAGM,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC;IACvC,MAAMK,EAAE,GAAGX,CAAC,GAAGC,MAAM,GAAGM,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC;IACvC,IAAID,CAAC,KAAK,CAAC,EAAEP,GAAG,CAACe,MAAM,CAACJ,EAAE,EAAEE,EAAE,CAAC,CAAC,KAC3Bb,GAAG,CAACgB,MAAM,CAACL,EAAE,EAAEE,EAAE,CAAC;EACzB;EACAb,GAAG,CAACiB,SAAS,CAAC,CAAC;EACfjB,GAAG,CAACkB,SAAS,GAAGb,KAAK;EACrBL,GAAG,CAACmB,IAAI,CAAC,CAAC;AACZ;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,iBAAiB,GAAG;EAAEC,QAAQ,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAG,CAAC;AAC3E,MAAMC,gBAAgB,GAAG;EAAEJ,QAAQ,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEI,QAAQ,EAAE;AAAG,CAAC;AAChE,MAAMC,iBAAiB,GAAG;EAAEN,QAAQ,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEM,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC;AAEnE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAG1C,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM2C,YAAY,GAAG3C,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAAC4C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,WAAW,CAAC;EAC/D,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAAC8C,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACgD,UAAU,EAAEC,aAAa,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoD,SAAS,EAAEC,YAAY,CAAC,GAAGrD,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC0D,UAAU,EAAEC,aAAa,CAAC,GAAG3D,QAAQ,CAAC;IAAEK,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACsD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7D,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC8D,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACgE,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjE,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACkE,UAAU,EAAEC,aAAa,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoE,SAAS,EAAEC,YAAY,CAAC,GAAGrE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsE,UAAU,EAAEC,aAAa,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACwE,UAAU,EAAEC,aAAa,CAAC,GAAGzE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC0E,OAAO,EAAEC,UAAU,CAAC,GAAG3E,QAAQ,CAAC,CAACwB,YAAY,CAAC,CAAC;EACtD,MAAM,CAACoD,YAAY,EAAEC,eAAe,CAAC,GAAG7E,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM8E,gBAAgB,GAAGhF,MAAM,CAAC,EAAE,CAAC;EACnC,MAAMiF,mBAAmB,GAAGjF,MAAM,CAAC,CAAC,CAAC;EACrC,MAAMkF,mBAAmB,GAAGlF,MAAM,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAClD,MAAM2E,mBAAmB,GAAGnF,MAAM,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAClD,MAAM4E,mBAAmB,GAAGpF,MAAM,CAAC,IAAI,CAAC;EAExC,MAAM;IAAE2B,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAG+C,OAAO,CAACE,YAAY,CAAC;EAEtD,SAASO,SAASA,CAACC,GAAG,EAAE;IACtB,IAAIA,GAAG,CAACC,IAAI,KAAK,OAAO,EAAE,OAAO;MAAEhF,CAAC,EAAE+E,GAAG,CAAC/E,CAAC,GAAG+E,GAAG,CAAChD,CAAC,GAAG,CAAC;MAAE9B,CAAC,EAAE8E,GAAG,CAAC9E,CAAC,GAAG8E,GAAG,CAAC/C,CAAC,GAAG;IAAE,CAAC;IAC/E,IAAI+C,GAAG,CAACE,IAAI,EAAE,OAAO;MAAEjF,CAAC,EAAE+E,GAAG,CAAC/E,CAAC;MAAEC,CAAC,EAAE8E,GAAG,CAAC9E;IAAE,CAAC;IAC3C,OAAO;MAAED,CAAC,EAAE+E,GAAG,CAAC/E,CAAC,GAAG,CAAC+E,GAAG,CAACrD,KAAK,IAAI,GAAG,IAAI,CAAC;MAAEzB,CAAC,EAAE8E,GAAG,CAAC9E,CAAC,GAAG,CAAC8E,GAAG,CAACpD,MAAM,IAAI,EAAE,IAAI;IAAE,CAAC;EACjF;EAEA,SAASuD,WAAWA,CAACnF,GAAG,EAAEgF,GAAG,EAAE;IAC7B,MAAMI,MAAM,GAAGL,SAAS,CAACC,GAAG,CAAC;IAC7BhF,GAAG,CAACqF,IAAI,CAAC,CAAC;IACVrF,GAAG,CAACsF,SAAS,CAACF,MAAM,CAACnF,CAAC,EAAEmF,MAAM,CAAClF,CAAC,CAAC;IACjCF,GAAG,CAACuF,MAAM,CAACP,GAAG,CAACvD,QAAQ,IAAI,CAAC,CAAC;IAC7BzB,GAAG,CAAC0B,KAAK,CAACsD,GAAG,CAACtD,KAAK,IAAI,CAAC,EAAEsD,GAAG,CAACtD,KAAK,IAAI,CAAC,CAAC;IACzC;IACA1B,GAAG,CAACM,SAAS,CAAC,CAAC;IACfN,GAAG,CAACwF,GAAG,CAAC,CAACR,GAAG,CAACrD,KAAK,IAAIqD,GAAG,CAAChD,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAACgD,GAAG,CAACpD,MAAM,IAAIoD,GAAG,CAAC/C,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGxB,IAAI,CAACC,EAAE,CAAC;IAC5FV,GAAG,CAACkB,SAAS,GAAG,SAAS;IACzBlB,GAAG,CAACmB,IAAI,CAAC,CAAC;IACV;IACAnB,GAAG,CAACM,SAAS,CAAC,CAAC;IACfN,GAAG,CAACwF,GAAG,CAAC,CAAC,EAAE,EAAE,CAACR,GAAG,CAACpD,MAAM,IAAIoD,GAAG,CAAC/C,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGxB,IAAI,CAACC,EAAE,CAAC;IACtEV,GAAG,CAACkB,SAAS,GAAG,SAAS;IACzBlB,GAAG,CAACmB,IAAI,CAAC,CAAC;IACVnB,GAAG,CAACyF,OAAO,CAAC,CAAC;EACf;EAEA9F,SAAS,CAAC,MAAM;IACd,MAAM+F,MAAM,GAAGtD,SAAS,CAACuD,OAAO;IAChC,MAAM3F,GAAG,GAAG0F,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC5F,GAAG,CAAC6F,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,MAAM,CAAC/D,KAAK,EAAE+D,MAAM,CAAC9D,MAAM,CAAC;IAChD5B,GAAG,CAAC8F,SAAS,GAAG,CAAC;IACjB9F,GAAG,CAAC+F,OAAO,GAAG,OAAO;IAErB1E,MAAM,CAAC2E,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;MAC7BlG,GAAG,CAACqF,IAAI,CAAC,CAAC;MACV,MAAMD,MAAM,GAAGL,SAAS,CAACkB,KAAK,CAAC;MAC/BjG,GAAG,CAACsF,SAAS,CAACF,MAAM,CAACnF,CAAC,EAAEmF,MAAM,CAAClF,CAAC,CAAC;MACjCF,GAAG,CAACuF,MAAM,CAACU,KAAK,CAACxE,QAAQ,IAAI,CAAC,CAAC;MAC/BzB,GAAG,CAAC0B,KAAK,CAACuE,KAAK,CAACvE,KAAK,IAAI,CAAC,EAAEuE,KAAK,CAACvE,KAAK,IAAI,CAAC,CAAC;MAE7C1B,GAAG,CAACkB,SAAS,GAAG+E,KAAK,CAAC5F,KAAK;MAC3BL,GAAG,CAACmG,WAAW,GAAGF,KAAK,CAAC5F,KAAK;MAC7B,IAAI4F,KAAK,CAAChB,IAAI,KAAK,WAAW,EAAE;QAC9BjF,GAAG,CAACoG,QAAQ,CAAC,EAAEH,KAAK,CAACtE,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,EAAEsE,KAAK,CAACrE,MAAM,IAAI,EAAE,CAAC,GAAG,CAAC,EAAEqE,KAAK,CAACtE,KAAK,IAAI,GAAG,EAAEsE,KAAK,CAACrE,MAAM,IAAI,EAAE,CAAC;MAC5G,CAAC,MAAM,IAAIqE,KAAK,CAAChB,IAAI,KAAK,QAAQ,EAAE;QAClCjF,GAAG,CAACoG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClC,CAAC,MAAM,IAAIH,KAAK,CAAChB,IAAI,KAAK,QAAQ,EAAE;QAClCjF,GAAG,CAACM,SAAS,CAAC,CAAC;QACfN,GAAG,CAACwF,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG/E,IAAI,CAACC,EAAE,CAAC;QACjCV,GAAG,CAACmB,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI8E,KAAK,CAAChB,IAAI,KAAK,MAAM,EAAE;QAChCjF,GAAG,CAACqF,IAAI,CAAC,CAAC;QACVrF,GAAG,CAAC0B,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;QACjB1B,GAAG,CAACM,SAAS,CAAC,CAAC;QACfN,GAAG,CAACwF,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG/E,IAAI,CAACC,EAAE,CAAC;QACjCV,GAAG,CAACyF,OAAO,CAAC,CAAC;QACbzF,GAAG,CAACmB,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI8E,KAAK,CAAChB,IAAI,KAAK,UAAU,EAAE;QACpCjF,GAAG,CAACM,SAAS,CAAC,CAAC;QACfN,GAAG,CAACe,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;QACnBf,GAAG,CAACgB,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;QAClBhB,GAAG,CAACgB,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAClBhB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI8E,KAAK,CAAChB,IAAI,KAAK,eAAe,EAAE;QACzCjF,GAAG,CAACM,SAAS,CAAC,CAAC;QACfN,GAAG,CAACe,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;QACnBf,GAAG,CAACgB,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;QAClBhB,GAAG,CAACgB,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QACnBhB,GAAG,CAACgB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QACpBhB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI8E,KAAK,CAAChB,IAAI,KAAK,SAAS,EAAE;QACnCjF,GAAG,CAACM,SAAS,CAAC,CAAC;QACfN,GAAG,CAACe,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAClBf,GAAG,CAACgB,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QACjBhB,GAAG,CAACgB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;QACjBhB,GAAG,CAACgB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAClBhB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI8E,KAAK,CAAChB,IAAI,KAAK,WAAW,EAAE;QACrCjF,GAAG,CAACM,SAAS,CAAC,CAAC;QACfN,GAAG,CAACe,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;QACnBf,GAAG,CAACgB,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;QAClBhB,GAAG,CAACgB,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QACnBhB,GAAG,CAACgB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QACpBhB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI8E,KAAK,CAAChB,IAAI,KAAK,MAAM,EAAE;QAChCjF,GAAG,CAACM,SAAS,CAAC,CAAC;QACfN,GAAG,CAACe,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAClBf,GAAG,CAACgB,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QACjBhB,GAAG,CAACgB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;QACjBhB,GAAG,CAACgB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAClBhB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI,CACT,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CACnE,CAACkF,QAAQ,CAACJ,KAAK,CAAChB,IAAI,CAAC,EAAE;QACtB,MAAM7E,KAAK,GAAG;UACZkG,QAAQ,EAAE,CAAC;UAAEC,OAAO,EAAE,CAAC;UAAEC,QAAQ,EAAE,CAAC;UAAEC,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAE;QACzE,CAAC,CAACV,KAAK,CAAChB,IAAI,CAAC;QACblF,WAAW,CAACC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAEI,KAAK,EAAE6F,KAAK,CAAC5F,KAAK,CAAC;MAChD;MACA,IAAI6F,GAAG,KAAKxC,kBAAkB,EAAE;QAC9ByB,WAAW,CAACnF,GAAG,EAAEiG,KAAK,CAAC;MACzB;MACAjG,GAAG,CAACyF,OAAO,CAAC,CAAC;IACf,CAAC,CAAC;IAEFlE,KAAK,CAACyE,OAAO,CAACY,IAAI,IAAI;MACpB5G,GAAG,CAACM,SAAS,CAAC,CAAC;MACfN,GAAG,CAACmG,WAAW,GAAGS,IAAI,CAACC,IAAI,KAAK,QAAQ,GAAG,eAAe,GAAGD,IAAI,CAACvG,KAAK,IAAI,MAAM;MACjFL,GAAG,CAAC8F,SAAS,GAAGc,IAAI,CAACE,IAAI,IAAI,CAAC;MAC9B9G,GAAG,CAAC+G,wBAAwB,GAAGH,IAAI,CAACC,IAAI,KAAK,QAAQ,GAAG,iBAAiB,GAAG,aAAa;MACzFD,IAAI,CAACI,MAAM,CAAChB,OAAO,CAAC,CAAC,CAAC/F,CAAC,EAAEC,CAAC,CAAC,EAAEK,CAAC,KAAK;QACjC,IAAIA,CAAC,KAAK,CAAC,EAAEP,GAAG,CAACe,MAAM,CAACd,CAAC,EAAEC,CAAC,CAAC,CAAC,KACzBF,GAAG,CAACgB,MAAM,CAACf,CAAC,EAAEC,CAAC,CAAC;MACvB,CAAC,CAAC;MACFF,GAAG,CAACiH,MAAM,CAAC,CAAC;MACZjH,GAAG,CAAC+G,wBAAwB,GAAG,aAAa;IAC9C,CAAC,CAAC;IAEFzF,KAAK,CAAC0E,OAAO,CAAC,CAACkB,CAAC,EAAEhB,GAAG,KAAK;MACxBlG,GAAG,CAACqF,IAAI,CAAC,CAAC;MACVrF,GAAG,CAACsF,SAAS,CAAC4B,CAAC,CAACjH,CAAC,EAAEiH,CAAC,CAAChH,CAAC,CAAC;MACvBF,GAAG,CAACuF,MAAM,CAAC2B,CAAC,CAACzF,QAAQ,IAAI,CAAC,CAAC;MAC3BzB,GAAG,CAAC0B,KAAK,CAACwF,CAAC,CAACxF,KAAK,IAAI,CAAC,EAAEwF,CAAC,CAACxF,KAAK,IAAI,CAAC,CAAC;MACrC1B,GAAG,CAACmH,IAAI,GAAG,GAAGD,CAAC,CAACpF,QAAQ,IAAI,EAAE,UAAU;MACxC9B,GAAG,CAACkB,SAAS,GAAGgG,CAAC,CAAC7G,KAAK;MACvBL,GAAG,CAACoH,QAAQ,CAACF,CAAC,CAAChC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1B,IAAIgB,GAAG,KAAK1C,iBAAiB,EAAE;QAC7B2B,WAAW,CAACnF,GAAG,EAAE;UAAE,GAAGkH,CAAC;UAAEvF,KAAK,EAAE3B,GAAG,CAACqH,WAAW,CAACH,CAAC,CAAChC,IAAI,CAAC,CAACvD,KAAK;UAAEC,MAAM,EAAEsF,CAAC,CAACpF,QAAQ,IAAI;QAAG,CAAC,CAAC;MAC5F;MACA9B,GAAG,CAACyF,OAAO,CAAC,CAAC;IACf,CAAC,CAAC;IAEFpE,MAAM,CAAC2E,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;MAC7B,IAAID,KAAK,CAAChB,IAAI,KAAK,OAAO,EAAE;QAC1BjF,GAAG,CAACqF,IAAI,CAAC,CAAC;QACV,MAAMD,MAAM,GAAGL,SAAS,CAACkB,KAAK,CAAC;QAC/BjG,GAAG,CAACsF,SAAS,CAACF,MAAM,CAACnF,CAAC,EAAEmF,MAAM,CAAClF,CAAC,CAAC;QACjCF,GAAG,CAACuF,MAAM,CAACU,KAAK,CAACxE,QAAQ,IAAI,CAAC,CAAC;QAC/BzB,GAAG,CAAC0B,KAAK,CAACuE,KAAK,CAACvE,KAAK,IAAI,CAAC,EAAEuE,KAAK,CAACvE,KAAK,IAAI,CAAC,CAAC;QAC7C,MAAM4F,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAK,CAAC,CAAC;QAC9BF,GAAG,CAACG,GAAG,GAAGxB,KAAK,CAACwB,GAAG;QACnBH,GAAG,CAACI,MAAM,GAAG,MAAM;UACjB1H,GAAG,CAAC2H,SAAS,CAACL,GAAG,EAAE,EAAErB,KAAK,CAACjE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,EAAEiE,KAAK,CAAChE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAEgE,KAAK,CAACjE,CAAC,IAAI,GAAG,EAAEiE,KAAK,CAAChE,CAAC,IAAI,GAAG,CAAC;UAChG,IAAIiE,GAAG,KAAKtC,kBAAkB,EAAE;YAC9BuB,WAAW,CAACnF,GAAG,EAAEiG,KAAK,CAAC;UACzB;QACF,CAAC;QACD,IAAIqB,GAAG,CAACM,QAAQ,EAAE;UAChB5H,GAAG,CAAC2H,SAAS,CAACL,GAAG,EAAE,EAAErB,KAAK,CAACjE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,EAAEiE,KAAK,CAAChE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAEgE,KAAK,CAACjE,CAAC,IAAI,GAAG,EAAEiE,KAAK,CAAChE,CAAC,IAAI,GAAG,CAAC;UAChG,IAAIiE,GAAG,KAAKtC,kBAAkB,EAAE;YAC9BuB,WAAW,CAACnF,GAAG,EAAEiG,KAAK,CAAC;UACzB;QACF;QACAjG,GAAG,CAACyF,OAAO,CAAC,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACpE,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEiC,iBAAiB,EAAEE,kBAAkB,EAAEE,kBAAkB,CAAC,CAAC;;EAErF;EACA;;EAEA;;EAEA,oBACE9D,OAAA;IAAK+H,SAAS,EAAC;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElC,CAAC;AAEV,CAAC;AAAC9F,EAAA,CAzMID,YAAY;AAAAgG,EAAA,GAAZhG,YAAY;AA2MlB,eAAeA,YAAY;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}