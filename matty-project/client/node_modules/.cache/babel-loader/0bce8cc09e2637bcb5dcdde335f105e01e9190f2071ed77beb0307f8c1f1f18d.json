{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst HANDLE_SIZE = 16;\nlet nextId = 1;\nconst getDefaultSize = (type, text, ctx) => {\n  if (type === 'rectangle') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'square' || type === 'circle') return {\n    w: 100,\n    h: 100\n  };\n  if (type === 'oval') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'image') return {\n    w: 200,\n    h: 200\n  };\n  if (type === 'text') {\n    ctx.font = '24px Arial';\n    return {\n      w: ctx.measureText(text).width,\n      h: 32,\n      fontSize: 24\n    };\n  }\n  return {\n    w: 120,\n    h: 80\n  };\n};\nconst CanvasEditor = ({\n  initialData\n}) => {\n  _s();\n  var _initialData$jsonData, _initialData$jsonData2;\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedIdx, setSelectedIdx] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const drawingPointsRef = useRef([]);\n\n  // Initialize history with initialData or empty defaults\n  const [history, setHistory] = useState([{\n    elements: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData = initialData.jsonData) === null || _initialData$jsonData === void 0 ? void 0 : _initialData$jsonData.elements) || [],\n    lines: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData2 = initialData.jsonData) === null || _initialData$jsonData2 === void 0 ? void 0 : _initialData$jsonData2.lines) || []\n  }]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const {\n    elements,\n    lines\n  } = history[historyIndex];\n  const [imageCache, setImageCache] = useState({});\n  useEffect(() => {\n    elements.forEach(el => {\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\n        const img = new window.Image();\n        img.src = el.src;\n        img.onload = () => setImageCache(c => ({\n          ...c,\n          [el.id]: img\n        }));\n      }\n    });\n  }, [elements, imageCache]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 2;\n    elements.forEach((el, idx) => {\n      ctx.save();\n      const w = el.w,\n        h = el.h;\n      const cx = el.x + w / 2;\n      const cy = el.y + h / 2;\n      ctx.translate(cx, cy);\n      const rotationRad = (el.rotation || 0) * Math.PI / 180;\n      ctx.rotate(rotationRad);\n      ctx.translate(-cx, -cy);\n      if (el.type === 'image') {\n        const img = imageCache[el.id];\n        if (img) {\n          ctx.drawImage(img, el.x, el.y, w, h);\n          if (idx === selectedIdx) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n            drawHandles(ctx, el.x, el.y, w, h);\n          }\n        }\n      } else if (el.type === 'text') {\n        ctx.font = `${el.fontSize || 24}px Arial`;\n        ctx.fillStyle = el.color;\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\n        const boxW = el.w;\n        const boxH = el.h || (el.fontSize || 24) + 8;\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\n        }\n      } else {\n        ctx.fillStyle = el.color;\n        ctx.strokeStyle = el.color;\n        switch (el.type) {\n          case 'rectangle':\n          case 'square':\n            ctx.fillRect(el.x, el.y, w, h);\n            break;\n          case 'circle':\n            ctx.beginPath();\n            ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, 2 * Math.PI);\n            ctx.fill();\n            break;\n          case 'oval':\n            ctx.save();\n            ctx.translate(el.x + w / 2, el.y + h / 2);\n            ctx.scale(1.5, 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\n            ctx.restore();\n            ctx.fill();\n            break;\n          case 'triangle':\n            ctx.beginPath();\n            ctx.moveTo(el.x, el.y + h);\n            ctx.lineTo(el.x + w, el.y + h);\n            ctx.lineTo(el.x + w / 2, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'parallelogram':\n            ctx.beginPath();\n            ctx.moveTo(el.x + 20, el.y + h);\n            ctx.lineTo(el.x + w + 20, el.y + h);\n            ctx.lineTo(el.x + w, el.y);\n            ctx.lineTo(el.x, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'rhombus':\n            ctx.beginPath();\n            ctx.moveTo(el.x + w / 2, el.y);\n            ctx.lineTo(el.x + w, el.y + h / 2);\n            ctx.lineTo(el.x + w / 2, el.y + h);\n            ctx.lineTo(el.x, el.y + h / 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'trapezoid':\n            ctx.beginPath();\n            ctx.moveTo(el.x + 20, el.y + h);\n            ctx.lineTo(el.x + w - 20, el.y + h);\n            ctx.lineTo(el.x + w, el.y);\n            ctx.lineTo(el.x, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'kite':\n            ctx.beginPath();\n            ctx.moveTo(el.x + w / 2, el.y);\n            ctx.lineTo(el.x + w, el.y + h / 2);\n            ctx.lineTo(el.x + w / 2, el.y + h);\n            ctx.lineTo(el.x, el.y + h / 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'pentagon':\n          case 'hexagon':\n          case 'heptagon':\n          case 'octagon':\n          case 'nonagon':\n          case 'decagon':\n            const sides = {\n              pentagon: 5,\n              hexagon: 6,\n              heptagon: 7,\n              octagon: 8,\n              nonagon: 9,\n              decagon: 10\n            }[el.type];\n            drawPolygon(ctx, el.x + w / 2, el.y + h / 2, Math.min(w, h) / 2, sides, el.color);\n            break;\n          default:\n            break;\n        }\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.lineWidth = 2;\n          ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n          drawHandles(ctx, el.x, el.y, w, h);\n        }\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || \"#333\";\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : \"source-over\";\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n  }, [elements, lines, imageCache, selectedIdx]);\n  function drawHandles(ctx, x, y, w, h) {\n    const handles = [[x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2]];\n    handles.forEach(([hx, hy]) => {\n      ctx.fillStyle = '#fff';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n    });\n  }\n\n  // DO NOT RE-DECLARE THIS TWICE - ONLY THIS VERSION SHOULD EXIST!\n  const saveState = (newElements, newLines) => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      elements: JSON.parse(JSON.stringify(newElements)),\n      lines: JSON.parse(JSON.stringify(newLines))\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n\n  // ...rest of your code remains exactly as before...\n  // (handlers, download, move, undo, redo, render, file input, upload etc)\n\n  // All other handlers from your original code, not duplicating any names\n\n  // The rest of the code in your previous message is correct.\n\n  // Only ONE definition of 'saveState' should exist in your file, not two!\n\n  // --- (render JSX remains the same) --- //\n\n  // For brevity, refer to your previous code for the full render JSX and all other handlers,\n  // making sure none (especially 'saveState') are duplicated.\n};\n_s(CanvasEditor, \"UszXBWTIkyEGCG7hAO+/zioyQq8=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","HANDLE_SIZE","nextId","getDefaultSize","type","text","w","h","font","measureText","width","fontSize","CanvasEditor","initialData","_s","_initialData$jsonData","_initialData$jsonData2","canvasRef","fileInputRef","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedIdx","setSelectedIdx","isDragging","setIsDragging","isDrawing","setIsDrawing","resizingHandle","setResizingHandle","drawingPointsRef","history","setHistory","elements","jsonData","lines","historyIndex","setHistoryIndex","imageCache","setImageCache","forEach","el","src","id","img","window","Image","onload","c","canvas","current","getContext","clearRect","height","lineCap","lineWidth","idx","save","cx","cy","translate","rotationRad","rotation","rotate","drawImage","strokeStyle","strokeRect","drawHandles","fillText","boxW","boxH","fillRect","arc","scale","restore","pentagon","hexagon","heptagon","octagon","nonagon","decagon","min","line","mode","size","globalCompositeOperation","points","stroke","handles","hx","hy","saveState","newElements","newLines","newHistory","slice","push","JSON","parse","stringify","length","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst HANDLE_SIZE = 16;\r\nlet nextId = 1;\r\n\r\nconst getDefaultSize = (type, text, ctx) => {\r\n  if (type === 'rectangle') return { w: 120, h: 80 };\r\n  if (type === 'square' || type === 'circle') return { w: 100, h: 100 };\r\n  if (type === 'oval') return { w: 120, h: 80 };\r\n  if (type === 'image') return { w: 200, h: 200 };\r\n  if (type === 'text') {\r\n    ctx.font = '24px Arial';\r\n    return { w: ctx.measureText(text).width, h: 32, fontSize: 24 };\r\n  }\r\n  return { w: 120, h: 80 };\r\n};\r\n\r\nconst CanvasEditor = ({ initialData }) => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedIdx, setSelectedIdx] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const drawingPointsRef = useRef([]);\r\n\r\n  // Initialize history with initialData or empty defaults\r\n  const [history, setHistory] = useState([\r\n    {\r\n      elements: initialData?.jsonData?.elements || [],\r\n      lines: initialData?.jsonData?.lines || [],\r\n    },\r\n  ]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n\r\n  const { elements, lines } = history[historyIndex];\r\n  const [imageCache, setImageCache] = useState({});\r\n\r\n  useEffect(() => {\r\n    elements.forEach(el => {\r\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\r\n        const img = new window.Image();\r\n        img.src = el.src;\r\n        img.onload = () => setImageCache(c => ({ ...c, [el.id]: img }));\r\n      }\r\n    });\r\n  }, [elements, imageCache]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    elements.forEach((el, idx) => {\r\n      ctx.save();\r\n      const w = el.w, h = el.h;\r\n      const cx = el.x + w / 2;\r\n      const cy = el.y + h / 2;\r\n      ctx.translate(cx, cy);\r\n      const rotationRad = (el.rotation || 0) * Math.PI / 180;\r\n      ctx.rotate(rotationRad);\r\n      ctx.translate(-cx, -cy);\r\n\r\n      if (el.type === 'image') {\r\n        const img = imageCache[el.id];\r\n        if (img) {\r\n          ctx.drawImage(img, el.x, el.y, w, h);\r\n          if (idx === selectedIdx) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n            drawHandles(ctx, el.x, el.y, w, h);\r\n          }\r\n        }\r\n      } else if (el.type === 'text') {\r\n        ctx.font = `${el.fontSize || 24}px Arial`;\r\n        ctx.fillStyle = el.color;\r\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\r\n        const boxW = el.w;\r\n        const boxH = el.h || (el.fontSize || 24) + 8;\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\r\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\r\n        }\r\n      } else {\r\n        ctx.fillStyle = el.color;\r\n        ctx.strokeStyle = el.color;\r\n\r\n        switch(el.type) {\r\n          case 'rectangle':\r\n          case 'square':\r\n            ctx.fillRect(el.x, el.y, w, h);\r\n            break;\r\n          case 'circle':\r\n            ctx.beginPath();\r\n            ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n            break;\r\n          case 'oval':\r\n            ctx.save();\r\n            ctx.translate(el.x + w / 2, el.y + h / 2);\r\n            ctx.scale(1.5, 1);\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\r\n            ctx.restore();\r\n            ctx.fill();\r\n            break;\r\n          case 'triangle':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y + h);\r\n            ctx.lineTo(el.x + w / 2, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'parallelogram':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + 20, el.y + h);\r\n            ctx.lineTo(el.x + w + 20, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y);\r\n            ctx.lineTo(el.x, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'rhombus':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + w / 2, el.y);\r\n            ctx.lineTo(el.x + w, el.y + h / 2);\r\n            ctx.lineTo(el.x + w / 2, el.y + h);\r\n            ctx.lineTo(el.x, el.y + h / 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'trapezoid':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + 20, el.y + h);\r\n            ctx.lineTo(el.x + w - 20, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y);\r\n            ctx.lineTo(el.x, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'kite':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + w / 2, el.y);\r\n            ctx.lineTo(el.x + w, el.y + h / 2);\r\n            ctx.lineTo(el.x + w / 2, el.y + h);\r\n            ctx.lineTo(el.x, el.y + h / 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'pentagon':\r\n          case 'hexagon':\r\n          case 'heptagon':\r\n          case 'octagon':\r\n          case 'nonagon':\r\n          case 'decagon':\r\n            const sides = {\r\n              pentagon: 5,\r\n              hexagon: 6,\r\n              heptagon: 7,\r\n              octagon: 8,\r\n              nonagon: 9,\r\n              decagon: 10,\r\n            }[el.type];\r\n            drawPolygon(ctx, el.x + w / 2, el.y + h / 2, Math.min(w, h) / 2, sides, el.color);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        if(idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n          drawHandles(ctx, el.x, el.y, w, h);\r\n        }\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || \"#333\";\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : \"source-over\";\r\n      line.points.forEach(([x,y], i) => {\r\n        if(i===0) ctx.moveTo(x,y);\r\n        else ctx.lineTo(x,y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n    });\r\n  }, [elements, lines, imageCache, selectedIdx]);\r\n\r\n  function drawHandles(ctx, x, y, w, h) {\r\n    const handles = [\r\n      [x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2],\r\n      [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2],\r\n      [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2],\r\n      [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2],\r\n    ];\r\n    handles.forEach(([hx, hy]) => {\r\n      ctx.fillStyle = '#fff';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth = 1;\r\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n    });\r\n  }\r\n\r\n  // DO NOT RE-DECLARE THIS TWICE - ONLY THIS VERSION SHOULD EXIST!\r\n  const saveState = (newElements, newLines) => {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      elements: JSON.parse(JSON.stringify(newElements)),\r\n      lines: JSON.parse(JSON.stringify(newLines)),\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  // ...rest of your code remains exactly as before...\r\n  // (handlers, download, move, undo, redo, render, file input, upload etc)\r\n\r\n  // All other handlers from your original code, not duplicating any names\r\n\r\n  // The rest of the code in your previous message is correct.\r\n\r\n  // Only ONE definition of 'saveState' should exist in your file, not two!\r\n\r\n  // --- (render JSX remains the same) --- //\r\n\r\n  // For brevity, refer to your previous code for the full render JSX and all other handlers,\r\n  // making sure none (especially 'saveState') are duplicated.\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,SAASC,WAAWA,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACpDL,GAAG,CAACM,SAAS,CAAC,CAAC;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;IAC9B,MAAMC,KAAK,GAAI,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,CAAC,GAAIH,KAAK,GAAGK,IAAI,CAACC,EAAE,GAAG,CAAC;IACrD,MAAMC,EAAE,GAAGV,CAAC,GAAGE,MAAM,GAAGM,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC;IACvC,MAAMK,EAAE,GAAGX,CAAC,GAAGC,MAAM,GAAGM,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC;IACvC,IAAID,CAAC,KAAK,CAAC,EAAEP,GAAG,CAACe,MAAM,CAACJ,EAAE,EAAEE,EAAE,CAAC,CAAC,KAC3Bb,GAAG,CAACgB,MAAM,CAACL,EAAE,EAAEE,EAAE,CAAC;EACzB;EACAb,GAAG,CAACiB,SAAS,CAAC,CAAC;EACfjB,GAAG,CAACkB,SAAS,GAAGb,KAAK;EACrBL,GAAG,CAACmB,IAAI,CAAC,CAAC;AACZ;AAEA,MAAMC,WAAW,GAAG,EAAE;AACtB,IAAIC,MAAM,GAAG,CAAC;AAEd,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAExB,GAAG,KAAK;EAC1C,IAAIuB,IAAI,KAAK,WAAW,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;EAClD,IAAIH,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,QAAQ,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EACrE,IAAIH,IAAI,KAAK,MAAM,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;EAC7C,IAAIH,IAAI,KAAK,OAAO,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAC/C,IAAIH,IAAI,KAAK,MAAM,EAAE;IACnBvB,GAAG,CAAC2B,IAAI,GAAG,YAAY;IACvB,OAAO;MAAEF,CAAC,EAAEzB,GAAG,CAAC4B,WAAW,CAACJ,IAAI,CAAC,CAACK,KAAK;MAAEH,CAAC,EAAE,EAAE;MAAEI,QAAQ,EAAE;IAAG,CAAC;EAChE;EACA,OAAO;IAAEL,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;AAC1B,CAAC;AAED,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACxC,MAAMC,SAAS,GAAGxC,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMyC,YAAY,GAAGzC,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,WAAW,CAAC;EAC/D,MAAM,CAAC0C,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAAC4C,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC8C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgD,UAAU,EAAEC,aAAa,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAGnD,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACsD,SAAS,EAAEC,YAAY,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACwD,UAAU,EAAEC,aAAa,CAAC,GAAGzD,QAAQ,CAAC;IAAEG,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8D,SAAS,EAAEC,YAAY,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgE,cAAc,EAAEC,iBAAiB,CAAC,GAAGjE,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMkE,gBAAgB,GAAGpE,MAAM,CAAC,EAAE,CAAC;;EAEnC;EACA,MAAM,CAACqE,OAAO,EAAEC,UAAU,CAAC,GAAGpE,QAAQ,CAAC,CACrC;IACEqE,QAAQ,EAAE,CAAAnC,WAAW,aAAXA,WAAW,wBAAAE,qBAAA,GAAXF,WAAW,CAAEoC,QAAQ,cAAAlC,qBAAA,uBAArBA,qBAAA,CAAuBiC,QAAQ,KAAI,EAAE;IAC/CE,KAAK,EAAE,CAAArC,WAAW,aAAXA,WAAW,wBAAAG,sBAAA,GAAXH,WAAW,CAAEoC,QAAQ,cAAAjC,sBAAA,uBAArBA,sBAAA,CAAuBkC,KAAK,KAAI;EACzC,CAAC,CACF,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGzE,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAM;IAAEqE,QAAQ;IAAEE;EAAM,CAAC,GAAGJ,OAAO,CAACK,YAAY,CAAC;EACjD,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAG3E,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdsE,QAAQ,CAACO,OAAO,CAACC,EAAE,IAAI;MACrB,IAAIA,EAAE,CAACpD,IAAI,KAAK,OAAO,IAAIoD,EAAE,CAACC,GAAG,IAAI,CAACJ,UAAU,CAACG,EAAE,CAACE,EAAE,CAAC,EAAE;QACvD,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAK,CAAC,CAAC;QAC9BF,GAAG,CAACF,GAAG,GAAGD,EAAE,CAACC,GAAG;QAChBE,GAAG,CAACG,MAAM,GAAG,MAAMR,aAAa,CAACS,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAE,CAACP,EAAE,CAACE,EAAE,GAAGC;QAAI,CAAC,CAAC,CAAC;MACjE;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,QAAQ,EAAEK,UAAU,CAAC,CAAC;EAE1B3E,SAAS,CAAC,MAAM;IACd,MAAMsF,MAAM,GAAG/C,SAAS,CAACgD,OAAO;IAChC,MAAMpF,GAAG,GAAGmF,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IAEnCrF,GAAG,CAACsF,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,MAAM,CAACtD,KAAK,EAAEsD,MAAM,CAACI,MAAM,CAAC;IAChDvF,GAAG,CAACwF,OAAO,GAAG,OAAO;IACrBxF,GAAG,CAACyF,SAAS,GAAG,CAAC;IAEjBtB,QAAQ,CAACO,OAAO,CAAC,CAACC,EAAE,EAAEe,GAAG,KAAK;MAC5B1F,GAAG,CAAC2F,IAAI,CAAC,CAAC;MACV,MAAMlE,CAAC,GAAGkD,EAAE,CAAClD,CAAC;QAAEC,CAAC,GAAGiD,EAAE,CAACjD,CAAC;MACxB,MAAMkE,EAAE,GAAGjB,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC;MACvB,MAAMoE,EAAE,GAAGlB,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC;MACvB1B,GAAG,CAAC8F,SAAS,CAACF,EAAE,EAAEC,EAAE,CAAC;MACrB,MAAME,WAAW,GAAG,CAACpB,EAAE,CAACqB,QAAQ,IAAI,CAAC,IAAIvF,IAAI,CAACC,EAAE,GAAG,GAAG;MACtDV,GAAG,CAACiG,MAAM,CAACF,WAAW,CAAC;MACvB/F,GAAG,CAAC8F,SAAS,CAAC,CAACF,EAAE,EAAE,CAACC,EAAE,CAAC;MAEvB,IAAIlB,EAAE,CAACpD,IAAI,KAAK,OAAO,EAAE;QACvB,MAAMuD,GAAG,GAAGN,UAAU,CAACG,EAAE,CAACE,EAAE,CAAC;QAC7B,IAAIC,GAAG,EAAE;UACP9E,GAAG,CAACkG,SAAS,CAACpB,GAAG,EAAEH,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;UACpC,IAAIgE,GAAG,KAAKlC,WAAW,EAAE;YACvBxD,GAAG,CAACmG,WAAW,GAAG,SAAS;YAC3BnG,GAAG,CAACyF,SAAS,GAAG,CAAC;YACjBzF,GAAG,CAACoG,UAAU,CAACzB,EAAE,CAAC1E,CAAC,GAAG,CAAC,EAAE0E,EAAE,CAACzE,CAAC,GAAG,CAAC,EAAEuB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC;YAChD2E,WAAW,CAACrG,GAAG,EAAE2E,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;UACpC;QACF;MACF,CAAC,MAAM,IAAIiD,EAAE,CAACpD,IAAI,KAAK,MAAM,EAAE;QAC7BvB,GAAG,CAAC2B,IAAI,GAAG,GAAGgD,EAAE,CAAC7C,QAAQ,IAAI,EAAE,UAAU;QACzC9B,GAAG,CAACkB,SAAS,GAAGyD,EAAE,CAACtE,KAAK;QACxBL,GAAG,CAACsG,QAAQ,CAAC3B,EAAE,CAACnD,IAAI,EAAEmD,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,IAAIyE,EAAE,CAAC7C,QAAQ,IAAI,EAAE,CAAC,CAAC;QACvD,MAAMyE,IAAI,GAAG5B,EAAE,CAAClD,CAAC;QACjB,MAAM+E,IAAI,GAAG7B,EAAE,CAACjD,CAAC,IAAI,CAACiD,EAAE,CAAC7C,QAAQ,IAAI,EAAE,IAAI,CAAC;QAC5C,IAAI4D,GAAG,KAAKlC,WAAW,EAAE;UACvBxD,GAAG,CAACmG,WAAW,GAAG,SAAS;UAC3BnG,GAAG,CAACoG,UAAU,CAACzB,EAAE,CAAC1E,CAAC,GAAG,CAAC,EAAE0E,EAAE,CAACzE,CAAC,GAAG,CAAC,EAAEqG,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,CAAC;UACtDH,WAAW,CAACrG,GAAG,EAAE2E,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,EAAEqG,IAAI,EAAEC,IAAI,CAAC;QAC1C;MACF,CAAC,MAAM;QACLxG,GAAG,CAACkB,SAAS,GAAGyD,EAAE,CAACtE,KAAK;QACxBL,GAAG,CAACmG,WAAW,GAAGxB,EAAE,CAACtE,KAAK;QAE1B,QAAOsE,EAAE,CAACpD,IAAI;UACZ,KAAK,WAAW;UAChB,KAAK,QAAQ;YACXvB,GAAG,CAACyG,QAAQ,CAAC9B,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;YAC9B;UACF,KAAK,QAAQ;YACX1B,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAAC0G,GAAG,CAAC/B,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGhB,IAAI,CAACC,EAAE,CAAC;YAC1DV,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,MAAM;YACTnB,GAAG,CAAC2F,IAAI,CAAC,CAAC;YACV3F,GAAG,CAAC8F,SAAS,CAACnB,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YACzC1B,GAAG,CAAC2G,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;YACjB3G,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAAC0G,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEhF,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGjB,IAAI,CAACC,EAAE,CAAC;YACpCV,GAAG,CAAC4G,OAAO,CAAC,CAAC;YACb5G,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,UAAU;YACbnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAAC4D,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YAC1B1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YAC9B1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,CAAC;YAC9BF,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,eAAe;YAClBnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAAC4D,EAAE,CAAC1E,CAAC,GAAG,EAAE,EAAE0E,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YAC/B1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,EAAE,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YACnC1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,EAAEkD,EAAE,CAACzE,CAAC,CAAC;YAC1BF,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,CAAC;YACtBF,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,SAAS;YACZnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAAC4D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,CAAC;YAC9BF,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAC9B1B,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,WAAW;YACdnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAAC4D,EAAE,CAAC1E,CAAC,GAAG,EAAE,EAAE0E,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YAC/B1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,EAAE,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YACnC1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,EAAEkD,EAAE,CAACzE,CAAC,CAAC;YAC1BF,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,CAAC;YACtBF,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,MAAM;YACTnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAAC4D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,CAAC;YAC9BF,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAAC2D,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAC9B1B,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,UAAU;UACf,KAAK,SAAS;UACd,KAAK,UAAU;UACf,KAAK,SAAS;UACd,KAAK,SAAS;UACd,KAAK,SAAS;YACZ,MAAMf,KAAK,GAAG;cACZyG,QAAQ,EAAE,CAAC;cACXC,OAAO,EAAE,CAAC;cACVC,QAAQ,EAAE,CAAC;cACXC,OAAO,EAAE,CAAC;cACVC,OAAO,EAAE,CAAC;cACVC,OAAO,EAAE;YACX,CAAC,CAACvC,EAAE,CAACpD,IAAI,CAAC;YACVxB,WAAW,CAACC,GAAG,EAAE2E,EAAE,CAAC1E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEkD,EAAE,CAACzE,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEjB,IAAI,CAAC0G,GAAG,CAAC1F,CAAC,EAAEC,CAAC,CAAC,GAAG,CAAC,EAAEtB,KAAK,EAAEuE,EAAE,CAACtE,KAAK,CAAC;YACjF;UACF;YACE;QACJ;QACA,IAAGqF,GAAG,KAAKlC,WAAW,EAAE;UACtBxD,GAAG,CAACmG,WAAW,GAAG,SAAS;UAC3BnG,GAAG,CAACyF,SAAS,GAAG,CAAC;UACjBzF,GAAG,CAACoG,UAAU,CAACzB,EAAE,CAAC1E,CAAC,GAAG,CAAC,EAAE0E,EAAE,CAACzE,CAAC,GAAG,CAAC,EAAEuB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC;UAChD2E,WAAW,CAACrG,GAAG,EAAE2E,EAAE,CAAC1E,CAAC,EAAE0E,EAAE,CAACzE,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;QACpC;MACF;MACA1B,GAAG,CAAC4G,OAAO,CAAC,CAAC;IACf,CAAC,CAAC;IAEFvC,KAAK,CAACK,OAAO,CAAC0C,IAAI,IAAI;MACpBpH,GAAG,CAACM,SAAS,CAAC,CAAC;MACfN,GAAG,CAACmG,WAAW,GAAGiB,IAAI,CAACC,IAAI,KAAK,QAAQ,GAAG,eAAe,GAAGD,IAAI,CAAC/G,KAAK,IAAI,MAAM;MACjFL,GAAG,CAACyF,SAAS,GAAG2B,IAAI,CAACE,IAAI,IAAI,CAAC;MAC9BtH,GAAG,CAACuH,wBAAwB,GAAGH,IAAI,CAACC,IAAI,KAAK,QAAQ,GAAG,iBAAiB,GAAG,aAAa;MACzFD,IAAI,CAACI,MAAM,CAAC9C,OAAO,CAAC,CAAC,CAACzE,CAAC,EAACC,CAAC,CAAC,EAAEK,CAAC,KAAK;QAChC,IAAGA,CAAC,KAAG,CAAC,EAAEP,GAAG,CAACe,MAAM,CAACd,CAAC,EAACC,CAAC,CAAC,CAAC,KACrBF,GAAG,CAACgB,MAAM,CAACf,CAAC,EAACC,CAAC,CAAC;MACtB,CAAC,CAAC;MACFF,GAAG,CAACyH,MAAM,CAAC,CAAC;MACZzH,GAAG,CAACuH,wBAAwB,GAAG,aAAa;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAE,CAACpD,QAAQ,EAAEE,KAAK,EAAEG,UAAU,EAAEhB,WAAW,CAAC,CAAC;EAE9C,SAAS6C,WAAWA,CAACrG,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEuB,CAAC,EAAEC,CAAC,EAAE;IACpC,MAAMgG,OAAO,GAAG,CACd,CAACzH,CAAC,GAAGmB,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGkB,WAAW,GAAG,CAAC,CAAC,EAC1C,CAACnB,CAAC,GAAGwB,CAAC,GAAGL,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGkB,WAAW,GAAG,CAAC,CAAC,EAC9C,CAACnB,CAAC,GAAGmB,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGwB,CAAC,GAAGN,WAAW,GAAG,CAAC,CAAC,EAC9C,CAACnB,CAAC,GAAGwB,CAAC,GAAGL,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGwB,CAAC,GAAGN,WAAW,GAAG,CAAC,CAAC,CACnD;IACDsG,OAAO,CAAChD,OAAO,CAAC,CAAC,CAACiD,EAAE,EAAEC,EAAE,CAAC,KAAK;MAC5B5H,GAAG,CAACkB,SAAS,GAAG,MAAM;MACtBlB,GAAG,CAACmG,WAAW,GAAG,MAAM;MACxBnG,GAAG,CAACyF,SAAS,GAAG,CAAC;MACjBzF,GAAG,CAACyG,QAAQ,CAACkB,EAAE,EAAEC,EAAE,EAAExG,WAAW,EAAEA,WAAW,CAAC;MAC9CpB,GAAG,CAACoG,UAAU,CAACuB,EAAE,EAAEC,EAAE,EAAExG,WAAW,EAAEA,WAAW,CAAC;IAClD,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMyG,SAAS,GAAGA,CAACC,WAAW,EAAEC,QAAQ,KAAK;IAC3C,MAAMC,UAAU,GAAG/D,OAAO,CAACgE,KAAK,CAAC,CAAC,EAAE3D,YAAY,GAAG,CAAC,CAAC;IACrD0D,UAAU,CAACE,IAAI,CAAC;MACd/D,QAAQ,EAAEgE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACP,WAAW,CAAC,CAAC;MACjDzD,KAAK,EAAE8D,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,QAAQ,CAAC;IAC5C,CAAC,CAAC;IACF7D,UAAU,CAAC8D,UAAU,CAAC;IACtBzD,eAAe,CAACyD,UAAU,CAACM,MAAM,GAAG,CAAC,CAAC;EACxC,CAAC;;EAED;EACA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;EACA;AACF,CAAC;AAACrG,EAAA,CAvOIF,YAAY;AAAAwG,EAAA,GAAZxG,YAAY;AAyOlB,eAAeA,YAAY;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}