{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst HANDLE_SIZE = 16;\nlet nextId = 1;\nconst getDefaultSize = (type, text, ctx) => {\n  if (type === 'rectangle') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'square' || type === 'circle') return {\n    w: 100,\n    h: 100\n  };\n  if (type === 'oval') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'image') return {\n    w: 200,\n    h: 200\n  };\n  if (type === 'text') {\n    ctx.font = '24px Arial';\n    return {\n      w: ctx.measureText(text).width,\n      h: 32,\n      fontSize: 24\n    };\n  }\n  return {\n    w: 120,\n    h: 80\n  };\n};\nconst initialState = {\n  elements: [],\n  lines: []\n};\nconst CanvasEditor = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [imageCache, setImageCache] = useState({});\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedIdx, setSelectedIdx] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const [history, setHistory] = useState([initialState]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const drawingPointsRef = useRef([]);\n  const {\n    elements,\n    lines\n  } = history[historyIndex];\n\n  // Preload images and cache\n  useEffect(() => {\n    elements.forEach(el => {\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\n        const img = new window.Image();\n        img.src = el.src;\n        img.onload = () => setImageCache(cache => ({\n          ...cache,\n          [el.id]: img\n        }));\n      }\n    });\n  }, [elements]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 2;\n    elements.forEach((el, idx) => {\n      ctx.save();\n\n      // Translate to the center of the element for rotation\n      const cx = el.x + el.w / 2;\n      const cy = el.y + el.h / 2;\n      ctx.translate(cx, cy);\n\n      // Rotate canvas by the element's rotation in radians\n      ctx.rotate((el.rotation || 0) * Math.PI / 180);\n\n      // Draw the element centered at (0,0) after translation\n      const w = el.w;\n      const h = el.h;\n      if (el.type === 'image') {\n        const img = imageCache[el.id];\n        if (img) {\n          ctx.drawImage(img, -w / 2, -h / 2, w, h);\n          if (idx === selectedIdx) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(-w / 2 - 2, -h / 2 - 2, w + 4, h + 4);\n            drawHandles(ctx, -w / 2, -h / 2, w, h);\n          }\n        }\n      } else if (el.type === 'text') {\n        ctx.font = `${el.fontSize || 24}px Arial`;\n        ctx.fillStyle = el.color;\n        ctx.textBaseline = 'top';\n        ctx.fillText(el.text, -w / 2, -h / 2);\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.strokeRect(-w / 2 - 2, -h / 2 - 2, w + 4, h + 4);\n          drawHandles(ctx, -w / 2, -h / 2, w, h);\n        }\n      } else {\n        ctx.fillStyle = el.color;\n        ctx.strokeStyle = el.color;\n        if (el.type === 'rectangle' || el.type === 'square') {\n          ctx.fillRect(-w / 2, -h / 2, w, h);\n        } else if (el.type === 'circle') {\n          ctx.beginPath();\n          ctx.arc(0, 0, w / 2, 0, 2 * Math.PI);\n          ctx.fill();\n        } else if (el.type === 'oval') {\n          ctx.save();\n          ctx.scale(1.5, 1);\n          ctx.beginPath();\n          ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\n          ctx.restore();\n          ctx.fill();\n        } else if (el.type === 'triangle') {\n          ctx.beginPath();\n          ctx.moveTo(-w / 2, h / 2);\n          ctx.lineTo(w / 2, h / 2);\n          ctx.lineTo(0, -h / 2);\n          ctx.closePath();\n          ctx.fill();\n        } else if (el.type === 'parallelogram') {\n          ctx.beginPath();\n          ctx.moveTo(-w / 2 + 20, h / 2);\n          ctx.lineTo(w / 2 + 20, h / 2);\n          ctx.lineTo(w / 2, -h / 2);\n          ctx.lineTo(-w / 2, -h / 2);\n          ctx.closePath();\n          ctx.fill();\n        } else if (el.type === 'rhombus') {\n          ctx.beginPath();\n          ctx.moveTo(0, -h / 2);\n          ctx.lineTo(w / 2, 0);\n          ctx.lineTo(0, h / 2);\n          ctx.lineTo(-w / 2, 0);\n          ctx.closePath();\n          ctx.fill();\n        }\n        // ... add other shapes drawing similarly\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.lineWidth = 2;\n          ctx.strokeRect(-w / 2 - 2, -h / 2 - 2, w + 4, h + 4);\n          drawHandles(ctx, -w / 2, -h / 2, w, h);\n        }\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n  }, [elements, lines, imageCache, selectedIdx]);\n  function drawHandles(ctx, x, y, w, h) {\n    const handles = [[x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2]];\n    handles.forEach(([hx, hy]) => {\n      ctx.fillStyle = '#fff';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n    });\n  }\n  function saveState(newElements, newLines) {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      elements: JSON.parse(JSON.stringify(newElements)),\n      lines: JSON.parse(JSON.stringify(newLines))\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  }\n\n  // Add rotation control to the selected element\n  const rotateElement = angleDelta => {\n    if (selectedIdx === null) return;\n    const newElements = elements.map((el, idx) => idx === selectedIdx ? {\n      ...el,\n      rotation: ((el.rotation || 0) + angleDelta) % 360\n    } : el);\n    saveState(newElements, lines);\n  };\n\n  // You can call rotateElement(15) or rotateElement(-15) for example to rotate 15 degrees CW or CCW\n\n  // Include rotate buttons in your UI\n  // Inside your return JSX, add buttons:\n\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(-15)}>Rotate Left</button>\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(15)}>Rotate Right</button>\n\n  // Add these buttons near Move Up/Down buttons or where appropriate\n\n  // ...rest of your existing handlers here including drag, resize, undo/redo...\n\n  // Other handlers remain mostly unchanged\n\n  // Canvas events for drag/resize remain the same; rotation manipulation only changes the rotation property\n\n  // Return JSX with rotate buttons (add inside controls div):\n\n  // Example modification in control buttons panel:\n  //\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(-15)}>Rotate Left</button>\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(15)}>Rotate Right</button>\n};\n_s(CanvasEditor, \"XhGk9/c39JFwkqcXwKqIjEWDgQ8=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","HANDLE_SIZE","nextId","getDefaultSize","type","text","w","h","font","measureText","width","fontSize","initialState","elements","lines","CanvasEditor","_s","canvasRef","fileInputRef","imageCache","setImageCache","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedIdx","setSelectedIdx","isDragging","setIsDragging","isDrawing","setIsDrawing","resizingHandle","setResizingHandle","history","setHistory","historyIndex","setHistoryIndex","drawingPointsRef","forEach","el","src","id","img","window","Image","onload","cache","canvas","current","getContext","clearRect","height","lineCap","lineWidth","idx","save","cx","cy","translate","rotate","rotation","drawImage","strokeStyle","strokeRect","drawHandles","textBaseline","fillText","fillRect","arc","scale","restore","line","mode","size","globalCompositeOperation","points","stroke","handles","hx","hy","saveState","newElements","newLines","newHistory","slice","push","JSON","parse","stringify","length","rotateElement","angleDelta","map","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst HANDLE_SIZE = 16;\r\nlet nextId = 1;\r\n\r\nconst getDefaultSize = (type, text, ctx) => {\r\n  if (type === 'rectangle') return { w: 120, h: 80 };\r\n  if (type === 'square' || type === 'circle') return { w: 100, h: 100 };\r\n  if (type === 'oval') return { w: 120, h: 80 };\r\n  if (type === 'image') return { w: 200, h: 200 };\r\n  if (type === 'text') {\r\n    ctx.font = '24px Arial';\r\n    return { w: ctx.measureText(text).width, h: 32, fontSize: 24 };\r\n  }\r\n  return { w: 120, h: 80 };\r\n};\r\n\r\nconst initialState = {\r\n  elements: [],\r\n  lines: [],\r\n};\r\n\r\nconst CanvasEditor = () => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [imageCache, setImageCache] = useState({});\r\n\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedIdx, setSelectedIdx] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const [history, setHistory] = useState([initialState]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const drawingPointsRef = useRef([]);\r\n  const { elements, lines } = history[historyIndex];\r\n\r\n  // Preload images and cache\r\n  useEffect(() => {\r\n    elements.forEach(el => {\r\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\r\n        const img = new window.Image();\r\n        img.src = el.src;\r\n        img.onload = () => setImageCache(cache => ({ ...cache, [el.id]: img }));\r\n      }\r\n    });\r\n  }, [elements]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    elements.forEach((el, idx) => {\r\n      ctx.save();\r\n\r\n      // Translate to the center of the element for rotation\r\n      const cx = el.x + el.w / 2;\r\n      const cy = el.y + el.h / 2;\r\n      ctx.translate(cx, cy);\r\n\r\n      // Rotate canvas by the element's rotation in radians\r\n      ctx.rotate((el.rotation || 0) * Math.PI / 180);\r\n\r\n      // Draw the element centered at (0,0) after translation\r\n      const w = el.w;\r\n      const h = el.h;\r\n\r\n      if (el.type === 'image') {\r\n        const img = imageCache[el.id];\r\n        if (img) {\r\n          ctx.drawImage(img, -w/2, -h/2, w, h);\r\n          if (idx === selectedIdx) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(-w/2 - 2, -h/2 - 2, w + 4, h + 4);\r\n            drawHandles(ctx, -w/2, -h/2, w, h);\r\n          }\r\n        }\r\n      } else if (el.type === 'text') {\r\n        ctx.font = `${el.fontSize || 24}px Arial`;\r\n        ctx.fillStyle = el.color;\r\n        ctx.textBaseline = 'top';\r\n        ctx.fillText(el.text, -w/2, -h/2);\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.strokeRect(-w/2 - 2, -h/2 - 2, w + 4, h + 4);\r\n          drawHandles(ctx, -w/2, -h/2, w, h);\r\n        }\r\n      } else {\r\n        ctx.fillStyle = el.color;\r\n        ctx.strokeStyle = el.color;\r\n        if (el.type === 'rectangle' || el.type === 'square') {\r\n          ctx.fillRect(-w/2, -h/2, w, h);\r\n        } else if (el.type === 'circle') {\r\n          ctx.beginPath();\r\n          ctx.arc(0, 0, w / 2, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n        } else if (el.type === 'oval') {\r\n          ctx.save();\r\n          ctx.scale(1.5, 1);\r\n          ctx.beginPath();\r\n          ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\r\n          ctx.restore();\r\n          ctx.fill();\r\n        } else if (el.type === 'triangle') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(-w/2, h/2);\r\n          ctx.lineTo(w/2, h/2);\r\n          ctx.lineTo(0, -h/2);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (el.type === 'parallelogram') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(-w/2 + 20, h/2);\r\n          ctx.lineTo(w/2 + 20, h/2);\r\n          ctx.lineTo(w/2, -h/2);\r\n          ctx.lineTo(-w/2, -h/2);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (el.type === 'rhombus') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, -h/2);\r\n          ctx.lineTo(w/2, 0);\r\n          ctx.lineTo(0, h/2);\r\n          ctx.lineTo(-w/2, 0);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        }\r\n        // ... add other shapes drawing similarly\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(-w/2 - 2, -h/2 - 2, w + 4, h + 4);\r\n          drawHandles(ctx, -w/2, -h/2, w, h);\r\n        }\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach((line) => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\r\n      line.points.forEach(([x, y], i) => {\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n    });\r\n  }, [elements, lines, imageCache, selectedIdx]);\r\n\r\n  function drawHandles(ctx, x, y, w, h) {\r\n    const handles = [\r\n      [x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2],\r\n      [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2],\r\n      [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2],\r\n      [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2],\r\n    ];\r\n    handles.forEach(([hx, hy]) => {\r\n      ctx.fillStyle = '#fff';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth = 1;\r\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n    });\r\n  }\r\n\r\n  function saveState(newElements, newLines) {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      elements: JSON.parse(JSON.stringify(newElements)),\r\n      lines: JSON.parse(JSON.stringify(newLines)),\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  }\r\n\r\n  // Add rotation control to the selected element\r\n  const rotateElement = (angleDelta) => {\r\n    if (selectedIdx === null) return;\r\n    const newElements = elements.map((el, idx) =>\r\n      idx === selectedIdx ? { ...el, rotation: ((el.rotation || 0) + angleDelta) % 360 } : el\r\n    );\r\n    saveState(newElements, lines);\r\n  };\r\n\r\n  // You can call rotateElement(15) or rotateElement(-15) for example to rotate 15 degrees CW or CCW\r\n\r\n  // Include rotate buttons in your UI\r\n  // Inside your return JSX, add buttons:\r\n\r\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(-15)}>Rotate Left</button>\r\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(15)}>Rotate Right</button>\r\n\r\n  // Add these buttons near Move Up/Down buttons or where appropriate\r\n\r\n  // ...rest of your existing handlers here including drag, resize, undo/redo...\r\n\r\n  // Other handlers remain mostly unchanged\r\n\r\n  // Canvas events for drag/resize remain the same; rotation manipulation only changes the rotation property\r\n\r\n  // Return JSX with rotate buttons (add inside controls div):\r\n\r\n  // Example modification in control buttons panel:\r\n  //\r\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(-15)}>Rotate Left</button>\r\n  // <button disabled={selectedIdx === null} onClick={() => rotateElement(15)}>Rotate Right</button>\r\n\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}