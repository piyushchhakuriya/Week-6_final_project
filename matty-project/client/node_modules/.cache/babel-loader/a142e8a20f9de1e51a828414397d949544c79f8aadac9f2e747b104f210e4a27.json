{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst HANDLE_SIZE = 16;\nlet nextId = 1;\nconst getDefaultSize = (type, text, ctx) => {\n  if (type === 'rectangle') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'square' || type === 'circle') return {\n    w: 100,\n    h: 100\n  };\n  if (type === 'oval') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'image') return {\n    w: 200,\n    h: 200\n  };\n  if (type === 'text') {\n    ctx.font = '24px Arial';\n    return {\n      w: ctx.measureText(text).width,\n      h: 32,\n      fontSize: 24\n    };\n  }\n  return {\n    w: 120,\n    h: 80\n  };\n};\nconst CanvasEditor = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // for editing existing design\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // State for initial data\n  const [initialData, setInitialData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Local states\n  const [designName, setDesignName] = useState('');\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedIdx, setSelectedIdx] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const drawingPointsRef = useRef([]);\n\n  // History for undo/redo\n  const [history, setHistory] = useState([{\n    elements: [],\n    lines: [],\n    title: ''\n  }]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const {\n    elements,\n    lines,\n    title\n  } = history[historyIndex];\n\n  // Load design by id if applicable\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      fetch(`http://localhost:5000/api/designs/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(res => res.json()).then(data => {\n        if (data) {\n          setInitialData(data);\n          setDesignName(data.title || '');\n          // set elements/lines from data\n          setHistory([{\n            elements: data.elements || [],\n            lines: data.lines || [],\n            title: data.title || ''\n          }]);\n          setHistoryIndex(0);\n        }\n        setLoading(false);\n      }).catch(() => setLoading(false));\n    }\n  }, [id]);\n\n  // Save title in history and local state\n  const saveTitle = title => {\n    const newHistory = [...history];\n    newHistory[historyIndex] = {\n      ...newHistory[historyIndex],\n      title\n    };\n    setHistory(newHistory);\n    setDesignName(title);\n  };\n\n  // Save state function\n  const saveState = (newElements, newLines, newTitle = designName) => {\n    const newHistory = [...history];\n    newHistory.push({\n      elements: newElements,\n      lines: newLines,\n      title: newTitle\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n\n  // Handle Design Name input change\n  const handleNameChange = e => {\n    const newTitle = e.target.value;\n    saveTitle(newTitle);\n  };\n\n  // Keyboard delete\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if ((e.key === 'Delete' || e.key === 'Backspace') && selectedIdx !== null) {\n        const newElements = elements.filter((_, idx) => idx !== selectedIdx);\n        saveState(newElements, lines, designName);\n        setSelectedIdx(null);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [elements, lines, selectedIdx, designName]);\n\n  // Load images\n  const [imageCache, setImageCache] = useState({});\n  useEffect(() => {\n    elements.forEach(el => {\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\n        const img = new window.Image();\n        img.src = el.src;\n        img.onload = () => setImageCache(c => ({\n          ...c,\n          [el.id]: img\n        }));\n      }\n    });\n  }, [elements, imageCache]);\n\n  // Canvas drawing data\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, 1000, 700);\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 2;\n\n    // Draw elements\n    elements.forEach((el, idx) => {\n      ctx.save();\n      const w = el.w,\n        h = el.h;\n      const cx = el.x + w / 2,\n        cy = el.y + h / 2;\n      ctx.translate(cx, cy);\n      ctx.rotate((el.rotation || 0) * Math.PI / 180);\n      ctx.translate(-cx, -cy);\n      // Draw based on type...\n      if (el.type === 'image' && imageCache[el.id]) {\n        ctx.drawImage(imageCache[el.id], el.x, el.y, w, h);\n      } else if (el.type === 'text') {\n        ctx.font = `${el.fontSize || 24}px Arial`;\n        ctx.fillStyle = el.color;\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\n      } else {\n        ctx.fillStyle = el.color;\n        ctx.strokeStyle = el.color;\n        // other shapes....\n        switch (el.type) {\n          case 'rectangle':\n            ctx.fillRect(el.x, el.y, w, h);\n            break;\n          case 'circle':\n            ctx.beginPath();\n            ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, Math.PI * 2);\n            ctx.fill();\n            break;\n          // add other shapes...\n        }\n      }\n      if (idx === selectedIdx) {\n        ctx.strokeStyle = '#f59e42';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n        drawHandles(ctx, el.x, el.y, w, h);\n      }\n      ctx.restore();\n    });\n    // Draw lines\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n  }, [elements, lines, imageCache, selectedIdx]);\n  const drawHandles = (ctx, x, y, w, h) => {\n    const handles = [[x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2]];\n    handles.forEach(([hx, hy]) => {\n      ctx.fillStyle = '#fff';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n    });\n  };\n\n  // Mouse handling for select/resize/move/draw\n  const handleCanvasMouseDown = e => {\n    const x = e.nativeEvent.offsetX,\n      y = e.nativeEvent.offsetY;\n    // check handles, select shape, start move...\n  };\n  const handleCanvasMouseMove = e => {\n    // moving/resize/draw logic...\n  };\n  const handleCanvasMouseUp = () => {\n    // end move/resize/draw...\n  };\n\n  // Actions: add shape, add text, upload image, save, delete\n  const handleAddShape = () => {\n    // add shape logic...\n  };\n  const handleAddText = () => {\n    // add text logic...\n  };\n  const handleUploadImage = () => {\n    // trigger file input\n  };\n  const handleFileChange = e => {\n    // load image into elements\n  };\n  const handleDownload = () => {/* save image locally */};\n  const handleSaveToCloud = async () => {/* save design to server */};\n  const handleDeleteSelected = () => {/* delete element */};\n  const handleMove = dir => {/* move element */};\n\n  // Render UI: Title input, controls, canvas...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-100 flex items-center gap-4 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border px-3 py-2 rounded font-medium text-lg flex-grow\",\n        placeholder: \"Enter design name\",\n        value: designName,\n        onChange: e => {\n          setDesignName(e.target.value);\n          saveState(elements, lines, e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), selectedIdx !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-3 py-1 bg-red-100 text-red-700 rounded border border-red-300\",\n        onClick: handleDeleteSelected,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1000,\n      height: 700,\n      style: {\n        background: '#fff',\n        border: '1px solid #eee',\n        marginTop: '-250px'\n      },\n      onMouseDown: handleCanvasMouseDown,\n      onMouseMove: handleCanvasMouseMove,\n      onMouseUp: handleCanvasMouseUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"ZFSHZTW2aV7QkGlZjNvjeJK6cm8=\", false, function () {\n  return [useParams];\n});\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useParams","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","HANDLE_SIZE","nextId","getDefaultSize","type","text","w","h","font","measureText","width","fontSize","CanvasEditor","_s","id","canvasRef","fileInputRef","initialData","setInitialData","loading","setLoading","designName","setDesignName","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedIdx","setSelectedIdx","isDragging","setIsDragging","isDrawing","setIsDrawing","resizingHandle","setResizingHandle","drawingPointsRef","history","setHistory","elements","lines","title","historyIndex","setHistoryIndex","fetch","headers","localStorage","getItem","then","res","json","data","catch","saveTitle","newHistory","saveState","newElements","newLines","newTitle","push","length","handleNameChange","e","target","value","handleKeyDown","key","filter","_","idx","window","addEventListener","removeEventListener","imageCache","setImageCache","forEach","el","src","img","Image","onload","c","current","getContext","clearRect","lineCap","lineWidth","save","cx","cy","translate","rotate","rotation","drawImage","fillText","strokeStyle","fillRect","arc","strokeRect","drawHandles","restore","line","mode","size","globalCompositeOperation","points","stroke","handles","hx","hy","handleCanvasMouseDown","nativeEvent","offsetX","offsetY","handleCanvasMouseMove","handleCanvasMouseUp","handleAddShape","handleAddText","handleUploadImage","handleFileChange","handleDownload","handleSaveToCloud","handleDeleteSelected","handleMove","dir","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","height","style","background","border","marginTop","onMouseDown","onMouseMove","onMouseUp","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst HANDLE_SIZE = 16;\r\nlet nextId = 1;\r\n\r\nconst getDefaultSize = (type, text, ctx) => {\r\n  if (type === 'rectangle') return { w: 120, h: 80 };\r\n  if (type === 'square' || type === 'circle') return { w: 100, h: 100 };\r\n  if (type === 'oval') return { w: 120, h: 80 };\r\n  if (type === 'image') return { w: 200, h: 200 };\r\n  if (type === 'text') {\r\n    ctx.font = '24px Arial';\r\n    return { w: ctx.measureText(text).width, h: 32, fontSize: 24 };\r\n  }\r\n  return { w: 120, h: 80 };\r\n};\r\n\r\nconst CanvasEditor = () => {\r\n  const { id } = useParams(); // for editing existing design\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // State for initial data\r\n  const [initialData, setInitialData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Local states\r\n  const [designName, setDesignName] = useState('');\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedIdx, setSelectedIdx] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const drawingPointsRef = useRef([]);\r\n\r\n  // History for undo/redo\r\n  const [history, setHistory] = useState([{\r\n    elements: [],\r\n    lines: [],\r\n    title: '',\r\n  }]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const { elements, lines, title } = history[historyIndex];\r\n\r\n  // Load design by id if applicable\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n      fetch(`http://localhost:5000/api/designs/${id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        }\r\n      }).then(res => res.json())\r\n        .then(data => {\r\n          if (data) {\r\n            setInitialData(data);\r\n            setDesignName(data.title || '');\r\n            // set elements/lines from data\r\n            setHistory([{\r\n              elements: data.elements || [],\r\n              lines: data.lines || [],\r\n              title: data.title || '',\r\n            }]);\r\n            setHistoryIndex(0);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch(() => setLoading(false));\r\n    }\r\n  }, [id]);\r\n\r\n  // Save title in history and local state\r\n  const saveTitle = (title) => {\r\n    const newHistory = [...history];\r\n    newHistory[historyIndex] = {\r\n      ...newHistory[historyIndex],\r\n      title,\r\n    };\r\n    setHistory(newHistory);\r\n    setDesignName(title);\r\n  };\r\n\r\n  // Save state function\r\n  const saveState = (newElements, newLines, newTitle = designName) => {\r\n    const newHistory = [...history];\r\n    newHistory.push({ elements: newElements, lines: newLines, title: newTitle });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  // Handle Design Name input change\r\n  const handleNameChange = (e) => {\r\n    const newTitle = e.target.value;\r\n    saveTitle(newTitle);\r\n  };\r\n\r\n  // Keyboard delete\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if ((e.key === 'Delete' || e.key === 'Backspace') && selectedIdx !== null) {\r\n        const newElements = elements.filter((_, idx) => idx !== selectedIdx);\r\n        saveState(newElements, lines, designName);\r\n        setSelectedIdx(null);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [elements, lines, selectedIdx, designName]);\r\n\r\n  // Load images\r\n  const [imageCache, setImageCache] = useState({});\r\n  useEffect(() => {\r\n    elements.forEach(el => {\r\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\r\n        const img = new window.Image();\r\n        img.src = el.src;\r\n        img.onload = () => setImageCache(c => ({ ...c, [el.id]: img }));\r\n      }\r\n    });\r\n  }, [elements, imageCache]);\r\n\r\n  // Canvas drawing data\r\n  useEffect(() => {\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, 1000, 700);\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    // Draw elements\r\n    elements.forEach((el, idx) => {\r\n      ctx.save();\r\n      const w = el.w, h = el.h;\r\n      const cx = el.x + w/2, cy = el.y + h/2;\r\n      ctx.translate(cx, cy);\r\n      ctx.rotate((el.rotation || 0) * Math.PI/180);\r\n      ctx.translate(-cx, -cy);\r\n      // Draw based on type...\r\n      if (el.type === 'image' && imageCache[el.id]) {\r\n        ctx.drawImage(imageCache[el.id], el.x, el.y, w, h);\r\n      } else if (el.type === 'text') {\r\n        ctx.font = `${el.fontSize || 24}px Arial`;\r\n        ctx.fillStyle = el.color;\r\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\r\n      } else {\r\n        ctx.fillStyle = el.color;\r\n        ctx.strokeStyle=el.color;\r\n        // other shapes....\r\n        switch (el.type) {\r\n          case 'rectangle': ctx.fillRect(el.x, el.y, w, h); break;\r\n          case 'circle': ctx.beginPath(); ctx.arc(el.x + w/2, el.y + h/2, w/2, 0, Math.PI*2); ctx.fill(); break;\r\n          // add other shapes...\r\n        }\r\n      }\r\n      if (idx===selectedIdx) {\r\n        ctx.strokeStyle='#f59e42'; ctx.lineWidth=2; ctx.strokeRect(el.x-2, el.y-2, w+4, h+4);\r\n        drawHandles(ctx, el.x, el.y, w, h);\r\n      }\r\n      ctx.restore();\r\n    });\r\n    // Draw lines\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode==='eraser' ? 'rgba(0,0,0,1)':line.color||'#333';\r\n      ctx.lineWidth = line.size||2;\r\n      ctx.globalCompositeOperation = line.mode==='eraser' ? 'destination-out':'source-over';\r\n      line.points.forEach(([x,y],i) => { if(i===0) ctx.moveTo(x,y); else ctx.lineTo(x,y); });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation='source-over';\r\n    });\r\n  }, [elements, lines, imageCache, selectedIdx]);\r\n\r\n  const drawHandles = (ctx, x, y, w, h) => {\r\n    const handles = [\r\n      [x - HANDLE_SIZE/2, y - HANDLE_SIZE/2],\r\n      [x + w - HANDLE_SIZE/2, y - HANDLE_SIZE/2],\r\n      [x - HANDLE_SIZE/2, y + h - HANDLE_SIZE/2],\r\n      [x + w - HANDLE_SIZE/2, y + h - HANDLE_SIZE/2],\r\n    ];\r\n    handles.forEach(([hx, hy]) => {\r\n      ctx.fillStyle='#fff'; ctx.strokeStyle='#333'; ctx.lineWidth=1;\r\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n    });\r\n  };\r\n\r\n  // Mouse handling for select/resize/move/draw\r\n  const handleCanvasMouseDown = (e) => {\r\n    const x=e.nativeEvent.offsetX, y=e.nativeEvent.offsetY;\r\n    // check handles, select shape, start move...\r\n  };\r\n  const handleCanvasMouseMove = (e) => {\r\n    // moving/resize/draw logic...\r\n  };\r\n  const handleCanvasMouseUp = () => {\r\n    // end move/resize/draw...\r\n  };\r\n\r\n  // Actions: add shape, add text, upload image, save, delete\r\n  const handleAddShape = () => {\r\n    // add shape logic...\r\n  };\r\n  const handleAddText = () => {\r\n    // add text logic...\r\n  };\r\n  const handleUploadImage = () => {\r\n    // trigger file input\r\n  };\r\n  const handleFileChange = (e) => {\r\n    // load image into elements\r\n  };\r\n  const handleDownload = ()=>{ /* save image locally */};\r\n  const handleSaveToCloud=async ()=>{ /* save design to server */};\r\n  const handleDeleteSelected=()=>{ /* delete element */ };\r\n  const handleMove=dir=>{ /* move element */};\r\n\r\n  // Render UI: Title input, controls, canvas...\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* title */}\r\n      <div className=\"p-2 bg-gray-100 flex items-center gap-4 border-b\">\r\n        <input className=\"border px-3 py-2 rounded font-medium text-lg flex-grow\" \r\n          placeholder='Enter design name' \r\n          value={designName} \r\n          onChange={(e)=>{ setDesignName(e.target.value); saveState(elements, lines, e.target.value); }} />\r\n        {selectedIdx!==null && <button className='px-3 py-1 bg-red-100 text-red-700 rounded border border-red-300' onClick={handleDeleteSelected}>Delete</button>}\r\n      </div>\r\n\r\n      {/* Rest of your UI with tabs, controls, preview, etc... */}\r\n      {/* Canvas */}\r\n      <canvas ref={canvasRef}\r\n        width={1000} height={700}\r\n        style={{ background:'#fff', border:'1px solid #eee', marginTop:'-250px' }}\r\n        onMouseDown={handleCanvasMouseDown}\r\n        onMouseMove={handleCanvasMouseMove}\r\n        onMouseUp={handleCanvasMouseUp} />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}