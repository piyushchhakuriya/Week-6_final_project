{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst HANDLE_SIZE = 16;\nlet nextId = 1;\nconst getDefaultSize = (type, text, ctx) => {\n  if (type === 'rectangle') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'square' || type === 'circle') return {\n    w: 100,\n    h: 100\n  };\n  if (type === 'oval') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'image') return {\n    w: 200,\n    h: 200\n  };\n  if (type === 'text') {\n    ctx.font = '24px Arial';\n    return {\n      w: ctx.measureText(text).width,\n      h: 32,\n      fontSize: 24\n    };\n  }\n  return {\n    w: 120,\n    h: 80\n  };\n};\nconst initialState = {\n  elements: [],\n  lines: []\n};\nconst CanvasEditor = ({\n  initialData\n}) => {\n  _s();\n  var _initialData$jsonData, _initialData$jsonData2;\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Load from initialData or use empty on first mount\n  const [history, setHistory] = useState([{\n    elements: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData = initialData.jsonData) === null || _initialData$jsonData === void 0 ? void 0 : _initialData$jsonData.elements) || [],\n    lines: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData2 = initialData.jsonData) === null || _initialData$jsonData2 === void 0 ? void 0 : _initialData$jsonData2.lines) || []\n  }]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedIdx, setSelectedIdx] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const drawingPointsRef = useRef([]);\n  const {\n    elements,\n    lines\n  } = history[historyIndex];\n  const [imageCache, setImageCache] = useState({});\n\n  // ... every handler, effect etc. from your working code remains the same below!\n  // Don't forget your UI return at the end.\n\n  // Preload images cache\n  useEffect(() => {\n    elements.forEach(el => {\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\n        const img = new window.Image();\n        img.src = el.src;\n        img.onload = () => {\n          setImageCache(cache => ({\n            ...cache,\n            [el.id]: img\n          }));\n        };\n      }\n    });\n    // eslint-disable-next-line\n  }, [elements]); // Prevent infinite re-run with imageCache as dep\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 2;\n    elements.forEach((el, idx) => {\n      ctx.save();\n      const w = el.w,\n        h = el.h;\n      const cx = el.x + w / 2;\n      const cy = el.y + h / 2;\n      const rotationRad = (el.rotation || 0) * Math.PI / 180;\n      ctx.translate(cx, cy);\n      ctx.rotate(rotationRad);\n      ctx.translate(-cx, -cy);\n      if (el.type === 'image') {\n        const img = imageCache[el.id];\n        if (img) {\n          ctx.drawImage(img, el.x, el.y, w, h);\n          if (idx === selectedIdx) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n            drawHandles(ctx, el.x, el.y, w, h);\n          }\n        }\n      } else if (el.type === 'text') {\n        ctx.font = `${el.fontSize || 24}px Arial`;\n        ctx.fillStyle = el.color;\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\n        const boxW = el.w;\n        const boxH = el.h || (el.fontSize || 24) + 8;\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\n        }\n      } else {\n        ctx.fillStyle = el.color;\n        ctx.strokeStyle = el.color;\n        // draw shapes similarly...\n        if (el.type === 'rectangle' || el.type === 'square') {\n          ctx.fillRect(el.x, el.y, w, h);\n        } else if (el.type === 'circle') {\n          ctx.beginPath();\n          ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, 2 * Math.PI);\n          ctx.fill();\n        } else if (el.type === 'oval') {\n          ctx.save();\n          ctx.translate(el.x + w / 2, el.y + h / 2);\n          ctx.scale(1.5, 1);\n          ctx.beginPath();\n          ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\n          ctx.restore();\n          ctx.fill();\n        } else if (el.type === 'triangle') {\n          ctx.beginPath();\n          ctx.moveTo(el.x, el.y + h);\n          ctx.lineTo(el.x + w, el.y + h);\n          ctx.lineTo(el.x + w / 2, el.y);\n          ctx.closePath();\n          ctx.fill();\n        } else if (el.type === 'parallelogram') {\n          ctx.beginPath();\n          ctx.moveTo(el.x + 20, el.y + h);\n          ctx.lineTo(el.x + w + 20, el.y + h);\n          ctx.lineTo(el.x + w, el.y);\n          ctx.lineTo(el.x, el.y);\n          ctx.closePath();\n          ctx.fill();\n        } else if (el.type === 'rhombus') {\n          ctx.beginPath();\n          ctx.moveTo(el.x + w / 2, el.y);\n          ctx.lineTo(el.x + w, el.y + h / 2);\n          ctx.lineTo(el.x + w / 2, el.y + h);\n          ctx.lineTo(el.x, el.y + h / 2);\n          ctx.closePath();\n          ctx.fill();\n        } else if (el.type === 'trapezoid') {\n          ctx.beginPath();\n          ctx.moveTo(el.x + 20, el.y + h);\n          ctx.lineTo(el.x + w - 20, el.y + h);\n          ctx.lineTo(el.x + w, el.y);\n          ctx.lineTo(el.x, el.y);\n          ctx.closePath();\n          ctx.fill();\n        } else if (el.type === 'kite') {\n          ctx.beginPath();\n          ctx.moveTo(el.x + w / 2, el.y);\n          ctx.lineTo(el.x + w, el.y + h / 2);\n          ctx.lineTo(el.x + w / 2, el.y + h);\n          ctx.lineTo(el.x, el.y + h / 2);\n          ctx.closePath();\n          ctx.fill();\n        } else if (['pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'].includes(el.type)) {\n          const sides = {\n            pentagon: 5,\n            hexagon: 6,\n            heptagon: 7,\n            octagon: 8,\n            nonagon: 9,\n            decagon: 10\n          }[el.type];\n          drawPolygon(ctx, el.x + w / 2, el.y + h / 2, Math.min(w, h) / 2, sides, el.color);\n        }\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.lineWidth = 2;\n          ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n          drawHandles(ctx, el.x, el.y, w, h);\n        }\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n  }, [elements, lines, imageCache, selectedIdx]);\n\n  // ... all handlers (undo/redo/addShape/etc.) unchanged from your last working version ...\n\n  // Add your clearCanvas, addShape, addText, handleShapeColorChange, etc. here, as before\n\n  // ... UI goes below ...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"FRzr4c9oyAp6XeFo/POf7Miz7Gg=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","HANDLE_SIZE","nextId","getDefaultSize","type","text","w","h","font","measureText","width","fontSize","initialState","elements","lines","CanvasEditor","initialData","_s","_initialData$jsonData","_initialData$jsonData2","canvasRef","fileInputRef","history","setHistory","jsonData","historyIndex","setHistoryIndex","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedIdx","setSelectedIdx","isDragging","setIsDragging","isDrawing","setIsDrawing","resizingHandle","setResizingHandle","drawingPointsRef","imageCache","setImageCache","forEach","el","src","id","img","window","Image","onload","cache","canvas","current","getContext","clearRect","height","lineCap","lineWidth","idx","save","cx","cy","rotationRad","rotation","translate","rotate","drawImage","strokeStyle","strokeRect","drawHandles","fillText","boxW","boxH","fillRect","arc","scale","restore","includes","pentagon","hexagon","heptagon","octagon","nonagon","decagon","min","line","mode","size","globalCompositeOperation","points","stroke","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst HANDLE_SIZE = 16;\r\nlet nextId = 1;\r\n\r\nconst getDefaultSize = (type, text, ctx) => {\r\n  if (type === 'rectangle') return { w: 120, h: 80 };\r\n  if (type === 'square' || type === 'circle') return { w: 100, h: 100 };\r\n  if (type === 'oval') return { w: 120, h: 80 };\r\n  if (type === 'image') return { w: 200, h: 200 };\r\n  if (type === 'text') {\r\n    ctx.font = '24px Arial';\r\n    return { w: ctx.measureText(text).width, h: 32, fontSize: 24 };\r\n  }\r\n  return { w: 120, h: 80 };\r\n};\r\n\r\nconst initialState = {\r\n  elements: [],\r\n  lines: []\r\n};\r\n\r\nconst CanvasEditor = ({ initialData }) => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Load from initialData or use empty on first mount\r\n  const [history, setHistory] = useState([\r\n    {\r\n      elements: initialData?.jsonData?.elements || [],\r\n      lines: initialData?.jsonData?.lines || [],\r\n    }\r\n  ]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedIdx, setSelectedIdx] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const drawingPointsRef = useRef([]);\r\n  const { elements, lines } = history[historyIndex];\r\n  const [imageCache, setImageCache] = useState({});\r\n\r\n  // ... every handler, effect etc. from your working code remains the same below!\r\n  // Don't forget your UI return at the end.\r\n\r\n  // Preload images cache\r\n  useEffect(() => {\r\n    elements.forEach((el) => {\r\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\r\n        const img = new window.Image();\r\n        img.src = el.src;\r\n        img.onload = () => {\r\n          setImageCache((cache) => ({ ...cache, [el.id]: img }));\r\n        };\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [elements]); // Prevent infinite re-run with imageCache as dep\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    elements.forEach((el, idx) => {\r\n      ctx.save();\r\n      const w = el.w, h = el.h;\r\n      const cx = el.x + w / 2;\r\n      const cy = el.y + h / 2;\r\n      const rotationRad = (el.rotation || 0) * Math.PI / 180;\r\n      ctx.translate(cx, cy);\r\n      ctx.rotate(rotationRad);\r\n      ctx.translate(-cx, -cy);\r\n\r\n      if (el.type === 'image') {\r\n        const img = imageCache[el.id];\r\n        if (img) {\r\n          ctx.drawImage(img, el.x, el.y, w, h);\r\n          if (idx === selectedIdx) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n            drawHandles(ctx, el.x, el.y, w, h);\r\n          }\r\n        }\r\n      } else if (el.type === 'text') {\r\n        ctx.font = `${el.fontSize || 24}px Arial`;\r\n        ctx.fillStyle = el.color;\r\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\r\n        const boxW = el.w;\r\n        const boxH = el.h || (el.fontSize || 24) + 8;\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\r\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\r\n        }\r\n      } else {\r\n        ctx.fillStyle = el.color;\r\n        ctx.strokeStyle = el.color;\r\n        // draw shapes similarly...\r\n        if (el.type === 'rectangle' || el.type === 'square') {\r\n          ctx.fillRect(el.x, el.y, w, h);\r\n        } else if (el.type === 'circle') {\r\n          ctx.beginPath();\r\n          ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n        } else if (el.type === 'oval') {\r\n          ctx.save();\r\n          ctx.translate(el.x + w / 2, el.y + h / 2);\r\n          ctx.scale(1.5, 1);\r\n          ctx.beginPath();\r\n          ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\r\n          ctx.restore();\r\n          ctx.fill();\r\n        } else if (el.type === 'triangle') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(el.x, el.y + h);\r\n          ctx.lineTo(el.x + w, el.y + h);\r\n          ctx.lineTo(el.x + w / 2, el.y);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (el.type === 'parallelogram') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(el.x + 20, el.y + h);\r\n          ctx.lineTo(el.x + w + 20, el.y + h);\r\n          ctx.lineTo(el.x + w, el.y);\r\n          ctx.lineTo(el.x, el.y);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (el.type === 'rhombus') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(el.x + w / 2, el.y);\r\n          ctx.lineTo(el.x + w, el.y + h / 2);\r\n          ctx.lineTo(el.x + w / 2, el.y + h);\r\n          ctx.lineTo(el.x, el.y + h / 2);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (el.type === 'trapezoid') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(el.x + 20, el.y + h);\r\n          ctx.lineTo(el.x + w - 20, el.y + h);\r\n          ctx.lineTo(el.x + w, el.y);\r\n          ctx.lineTo(el.x, el.y);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (el.type === 'kite') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(el.x + w / 2, el.y);\r\n          ctx.lineTo(el.x + w, el.y + h / 2);\r\n          ctx.lineTo(el.x + w / 2, el.y + h);\r\n          ctx.lineTo(el.x, el.y + h / 2);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (\r\n          ['pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'].includes(el.type)\r\n        ) {\r\n          const sides = {\r\n            pentagon: 5,\r\n            hexagon: 6,\r\n            heptagon: 7,\r\n            octagon: 8,\r\n            nonagon: 9,\r\n            decagon: 10,\r\n          }[el.type];\r\n          drawPolygon(ctx, el.x + w / 2, el.y + h / 2, Math.min(w, h) / 2, sides, el.color);\r\n        }\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n          drawHandles(ctx, el.x, el.y, w, h);\r\n        }\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach((line) => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\r\n      line.points.forEach(([x, y], i) => {\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n    });\r\n  }, [elements, lines, imageCache, selectedIdx]);\r\n\r\n  // ... all handlers (undo/redo/addShape/etc.) unchanged from your last working version ...\r\n\r\n  // Add your clearCanvas, addShape, addText, handleShapeColorChange, etc. here, as before\r\n\r\n  // ... UI goes below ...\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* header, shape tools, sidebar, and canvas as shown in your previous code */}\r\n      {/* ... unchanged ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}