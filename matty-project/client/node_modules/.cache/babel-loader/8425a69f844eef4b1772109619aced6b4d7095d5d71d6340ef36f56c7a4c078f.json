{"ast":null,"code":"import { Factory } from \"../Factory.js\";\nimport { Node } from \"../Node.js\";\nimport { getNumberValidator } from \"../Validators.js\";\nexport const Emboss = function (imageData) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n  const data = imageData.data;\n  const w = imageData.width;\n  const h = imageData.height;\n  const strength01 = Math.min(1, Math.max(0, (_b = (_a = this.embossStrength) === null || _a === void 0 ? void 0 : _a.call(this)) !== null && _b !== void 0 ? _b : 0.5));\n  const whiteLevel01 = Math.min(1, Math.max(0, (_d = (_c = this.embossWhiteLevel) === null || _c === void 0 ? void 0 : _c.call(this)) !== null && _d !== void 0 ? _d : 0.5));\n  const directionMap = {\n    'top-left': 315,\n    top: 270,\n    'top-right': 225,\n    right: 180,\n    'bottom-right': 135,\n    bottom: 90,\n    'bottom-left': 45,\n    left: 0\n  };\n  const directionDeg = (_g = directionMap[(_f = (_e = this.embossDirection) === null || _e === void 0 ? void 0 : _e.call(this)) !== null && _f !== void 0 ? _f : 'top-left']) !== null && _g !== void 0 ? _g : 315;\n  const blend = !!((_j = (_h = this.embossBlend) === null || _h === void 0 ? void 0 : _h.call(this)) !== null && _j !== void 0 ? _j : false);\n  const strength = strength01 * 10;\n  const bias = whiteLevel01 * 255;\n  const dirRad = directionDeg * Math.PI / 180;\n  const cx = Math.cos(dirRad);\n  const cy = Math.sin(dirRad);\n  const SCALE = 128 / 1020 * strength;\n  const src = new Uint8ClampedArray(data);\n  const lum = new Float32Array(w * h);\n  for (let p = 0, i = 0; i < data.length; i += 4, p++) {\n    lum[p] = 0.2126 * src[i] + 0.7152 * src[i + 1] + 0.0722 * src[i + 2];\n  }\n  const Gx = [-1, 0, 1, -2, 0, 2, -1, 0, 1];\n  const Gy = [-1, -2, -1, 0, 0, 0, 1, 2, 1];\n  const OFF = [-w - 1, -w, -w + 1, -1, 0, 1, w - 1, w, w + 1];\n  const clamp8 = v => v < 0 ? 0 : v > 255 ? 255 : v;\n  for (let y = 1; y < h - 1; y++) {\n    for (let x = 1; x < w - 1; x++) {\n      const p = y * w + x;\n      let sx = 0,\n        sy = 0;\n      sx += lum[p + OFF[0]] * Gx[0];\n      sy += lum[p + OFF[0]] * Gy[0];\n      sx += lum[p + OFF[1]] * Gx[1];\n      sy += lum[p + OFF[1]] * Gy[1];\n      sx += lum[p + OFF[2]] * Gx[2];\n      sy += lum[p + OFF[2]] * Gy[2];\n      sx += lum[p + OFF[3]] * Gx[3];\n      sy += lum[p + OFF[3]] * Gy[3];\n      sx += lum[p + OFF[5]] * Gx[5];\n      sy += lum[p + OFF[5]] * Gy[5];\n      sx += lum[p + OFF[6]] * Gx[6];\n      sy += lum[p + OFF[6]] * Gy[6];\n      sx += lum[p + OFF[7]] * Gx[7];\n      sy += lum[p + OFF[7]] * Gy[7];\n      sx += lum[p + OFF[8]] * Gx[8];\n      sy += lum[p + OFF[8]] * Gy[8];\n      const r = cx * sx + cy * sy;\n      const outGray = clamp8(bias + r * SCALE);\n      const o = p * 4;\n      if (blend) {\n        const delta = outGray - bias;\n        data[o] = clamp8(src[o] + delta);\n        data[o + 1] = clamp8(src[o + 1] + delta);\n        data[o + 2] = clamp8(src[o + 2] + delta);\n        data[o + 3] = src[o + 3];\n      } else {\n        data[o] = data[o + 1] = data[o + 2] = outGray;\n        data[o + 3] = src[o + 3];\n      }\n    }\n  }\n  for (let x = 0; x < w; x++) {\n    let oTop = x * 4,\n      oBot = ((h - 1) * w + x) * 4;\n    data[oTop] = src[oTop];\n    data[oTop + 1] = src[oTop + 1];\n    data[oTop + 2] = src[oTop + 2];\n    data[oTop + 3] = src[oTop + 3];\n    data[oBot] = src[oBot];\n    data[oBot + 1] = src[oBot + 1];\n    data[oBot + 2] = src[oBot + 2];\n    data[oBot + 3] = src[oBot + 3];\n  }\n  for (let y = 1; y < h - 1; y++) {\n    let oL = y * w * 4,\n      oR = (y * w + (w - 1)) * 4;\n    data[oL] = src[oL];\n    data[oL + 1] = src[oL + 1];\n    data[oL + 2] = src[oL + 2];\n    data[oL + 3] = src[oL + 3];\n    data[oR] = src[oR];\n    data[oR + 1] = src[oR + 1];\n    data[oR + 2] = src[oR + 2];\n    data[oR + 3] = src[oR + 3];\n  }\n  return imageData;\n};\nFactory.addGetterSetter(Node, 'embossStrength', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossWhiteLevel', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossDirection', 'top-left', undefined, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossBlend', false, undefined, Factory.afterSetFilter);","map":{"version":3,"names":["Factory","Node","getNumberValidator","Emboss","imageData","_a","_b","_c","_d","_e","_f","_g","_h","_j","data","w","width","h","height","strength01","Math","min","max","embossStrength","call","whiteLevel01","embossWhiteLevel","directionMap","top","right","bottom","left","directionDeg","embossDirection","blend","embossBlend","strength","bias","dirRad","PI","cx","cos","cy","sin","SCALE","src","Uint8ClampedArray","lum","Float32Array","p","i","length","Gx","Gy","OFF","clamp8","v","y","x","sx","sy","r","outGray","o","delta","oTop","oBot","oL","oR","addGetterSetter","afterSetFilter","undefined"],"sources":["C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/konva/lib/filters/Emboss.js"],"sourcesContent":["import { Factory } from \"../Factory.js\";\r\nimport { Node } from \"../Node.js\";\r\nimport { getNumberValidator } from \"../Validators.js\";\r\nexport const Emboss = function (imageData) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n    const data = imageData.data;\r\n    const w = imageData.width;\r\n    const h = imageData.height;\r\n    const strength01 = Math.min(1, Math.max(0, (_b = (_a = this.embossStrength) === null || _a === void 0 ? void 0 : _a.call(this)) !== null && _b !== void 0 ? _b : 0.5));\r\n    const whiteLevel01 = Math.min(1, Math.max(0, (_d = (_c = this.embossWhiteLevel) === null || _c === void 0 ? void 0 : _c.call(this)) !== null && _d !== void 0 ? _d : 0.5));\r\n    const directionMap = {\r\n        'top-left': 315,\r\n        top: 270,\r\n        'top-right': 225,\r\n        right: 180,\r\n        'bottom-right': 135,\r\n        bottom: 90,\r\n        'bottom-left': 45,\r\n        left: 0,\r\n    };\r\n    const directionDeg = (_g = directionMap[(_f = (_e = this.embossDirection) === null || _e === void 0 ? void 0 : _e.call(this)) !== null && _f !== void 0 ? _f : 'top-left']) !== null && _g !== void 0 ? _g : 315;\r\n    const blend = !!((_j = (_h = this.embossBlend) === null || _h === void 0 ? void 0 : _h.call(this)) !== null && _j !== void 0 ? _j : false);\r\n    const strength = strength01 * 10;\r\n    const bias = whiteLevel01 * 255;\r\n    const dirRad = (directionDeg * Math.PI) / 180;\r\n    const cx = Math.cos(dirRad);\r\n    const cy = Math.sin(dirRad);\r\n    const SCALE = (128 / 1020) * strength;\r\n    const src = new Uint8ClampedArray(data);\r\n    const lum = new Float32Array(w * h);\r\n    for (let p = 0, i = 0; i < data.length; i += 4, p++) {\r\n        lum[p] = 0.2126 * src[i] + 0.7152 * src[i + 1] + 0.0722 * src[i + 2];\r\n    }\r\n    const Gx = [-1, 0, 1, -2, 0, 2, -1, 0, 1];\r\n    const Gy = [-1, -2, -1, 0, 0, 0, 1, 2, 1];\r\n    const OFF = [-w - 1, -w, -w + 1, -1, 0, 1, w - 1, w, w + 1];\r\n    const clamp8 = (v) => (v < 0 ? 0 : v > 255 ? 255 : v);\r\n    for (let y = 1; y < h - 1; y++) {\r\n        for (let x = 1; x < w - 1; x++) {\r\n            const p = y * w + x;\r\n            let sx = 0, sy = 0;\r\n            sx += lum[p + OFF[0]] * Gx[0];\r\n            sy += lum[p + OFF[0]] * Gy[0];\r\n            sx += lum[p + OFF[1]] * Gx[1];\r\n            sy += lum[p + OFF[1]] * Gy[1];\r\n            sx += lum[p + OFF[2]] * Gx[2];\r\n            sy += lum[p + OFF[2]] * Gy[2];\r\n            sx += lum[p + OFF[3]] * Gx[3];\r\n            sy += lum[p + OFF[3]] * Gy[3];\r\n            sx += lum[p + OFF[5]] * Gx[5];\r\n            sy += lum[p + OFF[5]] * Gy[5];\r\n            sx += lum[p + OFF[6]] * Gx[6];\r\n            sy += lum[p + OFF[6]] * Gy[6];\r\n            sx += lum[p + OFF[7]] * Gx[7];\r\n            sy += lum[p + OFF[7]] * Gy[7];\r\n            sx += lum[p + OFF[8]] * Gx[8];\r\n            sy += lum[p + OFF[8]] * Gy[8];\r\n            const r = cx * sx + cy * sy;\r\n            const outGray = clamp8(bias + r * SCALE);\r\n            const o = p * 4;\r\n            if (blend) {\r\n                const delta = outGray - bias;\r\n                data[o] = clamp8(src[o] + delta);\r\n                data[o + 1] = clamp8(src[o + 1] + delta);\r\n                data[o + 2] = clamp8(src[o + 2] + delta);\r\n                data[o + 3] = src[o + 3];\r\n            }\r\n            else {\r\n                data[o] = data[o + 1] = data[o + 2] = outGray;\r\n                data[o + 3] = src[o + 3];\r\n            }\r\n        }\r\n    }\r\n    for (let x = 0; x < w; x++) {\r\n        let oTop = x * 4, oBot = ((h - 1) * w + x) * 4;\r\n        data[oTop] = src[oTop];\r\n        data[oTop + 1] = src[oTop + 1];\r\n        data[oTop + 2] = src[oTop + 2];\r\n        data[oTop + 3] = src[oTop + 3];\r\n        data[oBot] = src[oBot];\r\n        data[oBot + 1] = src[oBot + 1];\r\n        data[oBot + 2] = src[oBot + 2];\r\n        data[oBot + 3] = src[oBot + 3];\r\n    }\r\n    for (let y = 1; y < h - 1; y++) {\r\n        let oL = y * w * 4, oR = (y * w + (w - 1)) * 4;\r\n        data[oL] = src[oL];\r\n        data[oL + 1] = src[oL + 1];\r\n        data[oL + 2] = src[oL + 2];\r\n        data[oL + 3] = src[oL + 3];\r\n        data[oR] = src[oR];\r\n        data[oR + 1] = src[oR + 1];\r\n        data[oR + 2] = src[oR + 2];\r\n        data[oR + 3] = src[oR + 3];\r\n    }\r\n    return imageData;\r\n};\r\nFactory.addGetterSetter(Node, 'embossStrength', 0.5, getNumberValidator(), Factory.afterSetFilter);\r\nFactory.addGetterSetter(Node, 'embossWhiteLevel', 0.5, getNumberValidator(), Factory.afterSetFilter);\r\nFactory.addGetterSetter(Node, 'embossDirection', 'top-left', undefined, Factory.afterSetFilter);\r\nFactory.addGetterSetter(Node, 'embossBlend', false, undefined, Factory.afterSetFilter);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}