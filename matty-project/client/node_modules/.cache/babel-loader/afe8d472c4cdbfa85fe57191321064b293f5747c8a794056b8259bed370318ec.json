{"ast":null,"code":"import { Util } from \"./Util.js\";\nimport { SceneContext, HitContext } from \"./Context.js\";\nimport { Konva } from \"./Global.js\";\nlet _pixelRatio;\nfunction getDevicePixelRatio() {\n  if (_pixelRatio) {\n    return _pixelRatio;\n  }\n  const canvas = Util.createCanvasElement();\n  const context = canvas.getContext('2d');\n  _pixelRatio = function () {\n    const devicePixelRatio = Konva._global.devicePixelRatio || 1,\n      backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n    return devicePixelRatio / backingStoreRatio;\n  }();\n  Util.releaseCanvas(canvas);\n  return _pixelRatio;\n}\nexport class Canvas {\n  constructor(config) {\n    this.pixelRatio = 1;\n    this.width = 0;\n    this.height = 0;\n    this.isCache = false;\n    const conf = config || {};\n    const pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n    this.pixelRatio = pixelRatio;\n    this._canvas = Util.createCanvasElement();\n    this._canvas.style.padding = '0';\n    this._canvas.style.margin = '0';\n    this._canvas.style.border = '0';\n    this._canvas.style.background = 'transparent';\n    this._canvas.style.position = 'absolute';\n    this._canvas.style.top = '0';\n    this._canvas.style.left = '0';\n  }\n  getContext() {\n    return this.context;\n  }\n  getPixelRatio() {\n    return this.pixelRatio;\n  }\n  setPixelRatio(pixelRatio) {\n    const previousRatio = this.pixelRatio;\n    this.pixelRatio = pixelRatio;\n    this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n  }\n  setWidth(width) {\n    this.width = this._canvas.width = width * this.pixelRatio;\n    this._canvas.style.width = width + 'px';\n    const pixelRatio = this.pixelRatio,\n      _context = this.getContext()._context;\n    _context.scale(pixelRatio, pixelRatio);\n  }\n  setHeight(height) {\n    this.height = this._canvas.height = height * this.pixelRatio;\n    this._canvas.style.height = height + 'px';\n    const pixelRatio = this.pixelRatio,\n      _context = this.getContext()._context;\n    _context.scale(pixelRatio, pixelRatio);\n  }\n  getWidth() {\n    return this.width;\n  }\n  getHeight() {\n    return this.height;\n  }\n  setSize(width, height) {\n    this.setWidth(width || 0);\n    this.setHeight(height || 0);\n  }\n  toDataURL(mimeType, quality) {\n    try {\n      return this._canvas.toDataURL(mimeType, quality);\n    } catch (e) {\n      try {\n        return this._canvas.toDataURL();\n      } catch (err) {\n        Util.error('Unable to get data URL. ' + err.message + ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        return '';\n      }\n    }\n  }\n}\nexport class SceneCanvas extends Canvas {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0,\n      willReadFrequently: false\n    };\n    super(config);\n    this.context = new SceneContext(this, {\n      willReadFrequently: config.willReadFrequently\n    });\n    this.setSize(config.width, config.height);\n  }\n}\nfunction isCanvasFarblingActive() {\n  const c = Util.createCanvasElement();\n  c.width = 1;\n  c.height = 1;\n  const ctx = c.getContext('2d', {\n    willReadFrequently: true\n  });\n  ctx.clearRect(0, 0, 1, 1);\n  ctx.fillStyle = 'rgba(255,0,255,1)';\n  ctx.fillRect(0, 0, 1, 1);\n  const d = ctx.getImageData(0, 0, 1, 1).data;\n  const exact = d[0] === 255 && d[1] === 0 && d[2] === 255 && d[3] === 255;\n  return !exact;\n}\nfunction isBraveBrowser() {\n  var _a, _b;\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n  return (_b = (_a = navigator.brave) === null || _a === void 0 ? void 0 : _a.isBrave()) !== null && _b !== void 0 ? _b : false;\n}\nlet warned = false;\nfunction checkHitCanvasSupport() {\n  if (isBraveBrowser() && isCanvasFarblingActive() && !warned) {\n    warned = true;\n    Util.error('Looks like you have \"Brave shield\" enabled in your browser. It breaks KonvaJS internals. Please disable it. You may need to ask your users to do the same.');\n  }\n  return isBraveBrowser() && isCanvasFarblingActive();\n}\nexport class HitCanvas extends Canvas {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0\n    };\n    super(config);\n    this.hitCanvas = true;\n    this.context = new HitContext(this);\n    this.setSize(config.width, config.height);\n    checkHitCanvasSupport();\n  }\n}","map":{"version":3,"names":["Util","SceneContext","HitContext","Konva","_pixelRatio","getDevicePixelRatio","canvas","createCanvasElement","context","getContext","devicePixelRatio","_global","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","releaseCanvas","Canvas","constructor","config","pixelRatio","width","height","isCache","conf","_canvas","style","padding","margin","border","background","position","top","left","getPixelRatio","setPixelRatio","previousRatio","setSize","getWidth","getHeight","setWidth","_context","scale","setHeight","toDataURL","mimeType","quality","e","err","error","message","SceneCanvas","arguments","length","undefined","willReadFrequently","isCanvasFarblingActive","c","ctx","clearRect","fillStyle","fillRect","d","getImageData","data","exact","isBraveBrowser","_a","_b","navigator","brave","isBrave","warned","checkHitCanvasSupport","HitCanvas","hitCanvas"],"sources":["C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/konva/lib/Canvas.js"],"sourcesContent":["import { Util } from \"./Util.js\";\r\nimport { SceneContext, HitContext } from \"./Context.js\";\r\nimport { Konva } from \"./Global.js\";\r\nlet _pixelRatio;\r\nfunction getDevicePixelRatio() {\r\n    if (_pixelRatio) {\r\n        return _pixelRatio;\r\n    }\r\n    const canvas = Util.createCanvasElement();\r\n    const context = canvas.getContext('2d');\r\n    _pixelRatio = (function () {\r\n        const devicePixelRatio = Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\r\n            context.mozBackingStorePixelRatio ||\r\n            context.msBackingStorePixelRatio ||\r\n            context.oBackingStorePixelRatio ||\r\n            context.backingStorePixelRatio ||\r\n            1;\r\n        return devicePixelRatio / backingStoreRatio;\r\n    })();\r\n    Util.releaseCanvas(canvas);\r\n    return _pixelRatio;\r\n}\r\nexport class Canvas {\r\n    constructor(config) {\r\n        this.pixelRatio = 1;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.isCache = false;\r\n        const conf = config || {};\r\n        const pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\r\n        this.pixelRatio = pixelRatio;\r\n        this._canvas = Util.createCanvasElement();\r\n        this._canvas.style.padding = '0';\r\n        this._canvas.style.margin = '0';\r\n        this._canvas.style.border = '0';\r\n        this._canvas.style.background = 'transparent';\r\n        this._canvas.style.position = 'absolute';\r\n        this._canvas.style.top = '0';\r\n        this._canvas.style.left = '0';\r\n    }\r\n    getContext() {\r\n        return this.context;\r\n    }\r\n    getPixelRatio() {\r\n        return this.pixelRatio;\r\n    }\r\n    setPixelRatio(pixelRatio) {\r\n        const previousRatio = this.pixelRatio;\r\n        this.pixelRatio = pixelRatio;\r\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\r\n    }\r\n    setWidth(width) {\r\n        this.width = this._canvas.width = width * this.pixelRatio;\r\n        this._canvas.style.width = width + 'px';\r\n        const pixelRatio = this.pixelRatio, _context = this.getContext()._context;\r\n        _context.scale(pixelRatio, pixelRatio);\r\n    }\r\n    setHeight(height) {\r\n        this.height = this._canvas.height = height * this.pixelRatio;\r\n        this._canvas.style.height = height + 'px';\r\n        const pixelRatio = this.pixelRatio, _context = this.getContext()._context;\r\n        _context.scale(pixelRatio, pixelRatio);\r\n    }\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    setSize(width, height) {\r\n        this.setWidth(width || 0);\r\n        this.setHeight(height || 0);\r\n    }\r\n    toDataURL(mimeType, quality) {\r\n        try {\r\n            return this._canvas.toDataURL(mimeType, quality);\r\n        }\r\n        catch (e) {\r\n            try {\r\n                return this._canvas.toDataURL();\r\n            }\r\n            catch (err) {\r\n                Util.error('Unable to get data URL. ' +\r\n                    err.message +\r\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class SceneCanvas extends Canvas {\r\n    constructor(config = { width: 0, height: 0, willReadFrequently: false }) {\r\n        super(config);\r\n        this.context = new SceneContext(this, {\r\n            willReadFrequently: config.willReadFrequently,\r\n        });\r\n        this.setSize(config.width, config.height);\r\n    }\r\n}\r\nfunction isCanvasFarblingActive() {\r\n    const c = Util.createCanvasElement();\r\n    c.width = 1;\r\n    c.height = 1;\r\n    const ctx = c.getContext('2d', {\r\n        willReadFrequently: true,\r\n    });\r\n    ctx.clearRect(0, 0, 1, 1);\r\n    ctx.fillStyle = 'rgba(255,0,255,1)';\r\n    ctx.fillRect(0, 0, 1, 1);\r\n    const d = ctx.getImageData(0, 0, 1, 1).data;\r\n    const exact = d[0] === 255 && d[1] === 0 && d[2] === 255 && d[3] === 255;\r\n    return !exact;\r\n}\r\nfunction isBraveBrowser() {\r\n    var _a, _b;\r\n    if (typeof navigator === 'undefined') {\r\n        return false;\r\n    }\r\n    return (_b = (_a = navigator.brave) === null || _a === void 0 ? void 0 : _a.isBrave()) !== null && _b !== void 0 ? _b : false;\r\n}\r\nlet warned = false;\r\nfunction checkHitCanvasSupport() {\r\n    if (isBraveBrowser() && isCanvasFarblingActive() && !warned) {\r\n        warned = true;\r\n        Util.error('Looks like you have \"Brave shield\" enabled in your browser. It breaks KonvaJS internals. Please disable it. You may need to ask your users to do the same.');\r\n    }\r\n    return isBraveBrowser() && isCanvasFarblingActive();\r\n}\r\nexport class HitCanvas extends Canvas {\r\n    constructor(config = { width: 0, height: 0 }) {\r\n        super(config);\r\n        this.hitCanvas = true;\r\n        this.context = new HitContext(this);\r\n        this.setSize(config.width, config.height);\r\n        checkHitCanvasSupport();\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}