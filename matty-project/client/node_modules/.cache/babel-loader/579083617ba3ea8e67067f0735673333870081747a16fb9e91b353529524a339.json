{"ast":null,"code":"import { Factory } from \"./Factory.js\";\nimport { Node } from \"./Node.js\";\nimport { getNumberValidator } from \"./Validators.js\";\nexport class Container extends Node {\n  constructor() {\n    super(...arguments);\n    this.children = [];\n  }\n  getChildren(filterFunc) {\n    const children = this.children || [];\n    if (filterFunc) {\n      return children.filter(filterFunc);\n    }\n    return children;\n  }\n  hasChildren() {\n    return this.getChildren().length > 0;\n  }\n  removeChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.remove();\n    });\n    this.children = [];\n    this._requestDraw();\n    return this;\n  }\n  destroyChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.destroy();\n    });\n    this.children = [];\n    this._requestDraw();\n    return this;\n  }\n  add() {\n    if (arguments.length === 0) {\n      return this;\n    }\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.add(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n      }\n      return this;\n    }\n    const child = arguments.length <= 0 ? undefined : arguments[0];\n    if (child.getParent()) {\n      child.moveTo(this);\n      return this;\n    }\n    this._validateAdd(child);\n    child.index = this.getChildren().length;\n    child.parent = this;\n    child._clearCaches();\n    this.getChildren().push(child);\n    this._fire('add', {\n      child: child\n    });\n    this._requestDraw();\n    return this;\n  }\n  destroy() {\n    if (this.hasChildren()) {\n      this.destroyChildren();\n    }\n    super.destroy();\n    return this;\n  }\n  find(selector) {\n    return this._generalFind(selector, false);\n  }\n  findOne(selector) {\n    const result = this._generalFind(selector, true);\n    return result.length > 0 ? result[0] : undefined;\n  }\n  _generalFind(selector, findOne) {\n    const retArr = [];\n    this._descendants(node => {\n      const valid = node._isMatch(selector);\n      if (valid) {\n        retArr.push(node);\n      }\n      if (valid && findOne) {\n        return true;\n      }\n      return false;\n    });\n    return retArr;\n  }\n  _descendants(fn) {\n    let shouldStop = false;\n    const children = this.getChildren();\n    for (const child of children) {\n      shouldStop = fn(child);\n      if (shouldStop) {\n        return true;\n      }\n      if (!child.hasChildren()) {\n        continue;\n      }\n      shouldStop = child._descendants(fn);\n      if (shouldStop) {\n        return true;\n      }\n    }\n    return false;\n  }\n  toObject() {\n    const obj = Node.prototype.toObject.call(this);\n    obj.children = [];\n    this.getChildren().forEach(child => {\n      obj.children.push(child.toObject());\n    });\n    return obj;\n  }\n  isAncestorOf(node) {\n    let parent = node.getParent();\n    while (parent) {\n      if (parent._id === this._id) {\n        return true;\n      }\n      parent = parent.getParent();\n    }\n    return false;\n  }\n  clone(obj) {\n    const node = Node.prototype.clone.call(this, obj);\n    this.getChildren().forEach(function (no) {\n      node.add(no.clone());\n    });\n    return node;\n  }\n  getAllIntersections(pos) {\n    const arr = [];\n    this.find('Shape').forEach(shape => {\n      if (shape.isVisible() && shape.intersects(pos)) {\n        arr.push(shape);\n      }\n    });\n    return arr;\n  }\n  _clearSelfAndDescendantCache(attr) {\n    var _a;\n    super._clearSelfAndDescendantCache(attr);\n    if (this.isCached()) {\n      return;\n    }\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n      node._clearSelfAndDescendantCache(attr);\n    });\n  }\n  _setChildrenIndices() {\n    var _a;\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n      child.index = n;\n    });\n    this._requestDraw();\n  }\n  drawScene(can, top, bufferCanvas) {\n    const layer = this.getLayer(),\n      canvas = can || layer && layer.getCanvas(),\n      context = canvas && canvas.getContext(),\n      cachedCanvas = this._getCanvasCache(),\n      cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n    const caching = canvas && canvas.isCache;\n    if (!this.isVisible() && !caching) {\n      return this;\n    }\n    if (cachedSceneCanvas) {\n      context.save();\n      const m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      this._drawCachedSceneCanvas(context);\n      context.restore();\n    } else {\n      this._drawChildren('drawScene', canvas, top, bufferCanvas);\n    }\n    return this;\n  }\n  drawHit(can, top) {\n    if (!this.shouldDrawHit(top)) {\n      return this;\n    }\n    const layer = this.getLayer(),\n      canvas = can || layer && layer.hitCanvas,\n      context = canvas && canvas.getContext(),\n      cachedCanvas = this._getCanvasCache(),\n      cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n    if (cachedHitCanvas) {\n      context.save();\n      const m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      this._drawCachedHitCanvas(context);\n      context.restore();\n    } else {\n      this._drawChildren('drawHit', canvas, top);\n    }\n    return this;\n  }\n  _drawChildren(drawMethod, canvas, top, bufferCanvas) {\n    var _a;\n    const context = canvas && canvas.getContext(),\n      clipWidth = this.clipWidth(),\n      clipHeight = this.clipHeight(),\n      clipFunc = this.clipFunc(),\n      hasClip = typeof clipWidth === 'number' && typeof clipHeight === 'number' || clipFunc;\n    const selfCache = top === this;\n    if (hasClip) {\n      context.save();\n      const transform = this.getAbsoluteTransform(top);\n      let m = transform.getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      context.beginPath();\n      let clipArgs;\n      if (clipFunc) {\n        clipArgs = clipFunc.call(this, context, this);\n      } else {\n        const clipX = this.clipX();\n        const clipY = this.clipY();\n        context.rect(clipX || 0, clipY || 0, clipWidth, clipHeight);\n      }\n      context.clip.apply(context, clipArgs);\n      m = transform.copy().invert().getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    const hasComposition = !selfCache && this.globalCompositeOperation() !== 'source-over' && drawMethod === 'drawScene';\n    if (hasComposition) {\n      context.save();\n      context._applyGlobalCompositeOperation(this);\n    }\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      child[drawMethod](canvas, top, bufferCanvas);\n    });\n    if (hasComposition) {\n      context.restore();\n    }\n    if (hasClip) {\n      context.restore();\n    }\n  }\n  getClientRect() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _a;\n    const skipTransform = config.skipTransform;\n    const relativeTo = config.relativeTo;\n    let minX, minY, maxX, maxY;\n    let selfRect = {\n      x: Infinity,\n      y: Infinity,\n      width: 0,\n      height: 0\n    };\n    const that = this;\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      if (!child.visible()) {\n        return;\n      }\n      const rect = child.getClientRect({\n        relativeTo: that,\n        skipShadow: config.skipShadow,\n        skipStroke: config.skipStroke\n      });\n      if (rect.width === 0 && rect.height === 0) {\n        return;\n      }\n      if (minX === undefined) {\n        minX = rect.x;\n        minY = rect.y;\n        maxX = rect.x + rect.width;\n        maxY = rect.y + rect.height;\n      } else {\n        minX = Math.min(minX, rect.x);\n        minY = Math.min(minY, rect.y);\n        maxX = Math.max(maxX, rect.x + rect.width);\n        maxY = Math.max(maxY, rect.y + rect.height);\n      }\n    });\n    const shapes = this.find('Shape');\n    let hasVisible = false;\n    for (let i = 0; i < shapes.length; i++) {\n      const shape = shapes[i];\n      if (shape._isVisible(this)) {\n        hasVisible = true;\n        break;\n      }\n    }\n    if (hasVisible && minX !== undefined) {\n      selfRect = {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    } else {\n      selfRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    if (!skipTransform) {\n      return this._transformedRect(selfRect, relativeTo);\n    }\n    return selfRect;\n  }\n}\nFactory.addComponentsGetterSetter(Container, 'clip', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');","map":{"version":3,"names":["Factory","Node","getNumberValidator","Container","constructor","arguments","children","getChildren","filterFunc","filter","hasChildren","length","removeChildren","forEach","child","parent","index","remove","_requestDraw","destroyChildren","destroy","add","i","undefined","getParent","moveTo","_validateAdd","_clearCaches","push","_fire","find","selector","_generalFind","findOne","result","retArr","_descendants","node","valid","_isMatch","fn","shouldStop","toObject","obj","prototype","call","isAncestorOf","_id","clone","no","getAllIntersections","pos","arr","shape","isVisible","intersects","_clearSelfAndDescendantCache","attr","_a","isCached","_setChildrenIndices","n","drawScene","can","top","bufferCanvas","layer","getLayer","canvas","getCanvas","context","getContext","cachedCanvas","_getCanvasCache","cachedSceneCanvas","scene","caching","isCache","save","m","getAbsoluteTransform","getMatrix","transform","_drawCachedSceneCanvas","restore","_drawChildren","drawHit","shouldDrawHit","hitCanvas","cachedHitCanvas","hit","_drawCachedHitCanvas","drawMethod","clipWidth","clipHeight","clipFunc","hasClip","selfCache","beginPath","clipArgs","clipX","clipY","rect","clip","apply","copy","invert","hasComposition","globalCompositeOperation","_applyGlobalCompositeOperation","getClientRect","config","skipTransform","relativeTo","minX","minY","maxX","maxY","selfRect","x","Infinity","y","width","height","that","visible","skipShadow","skipStroke","Math","min","max","shapes","hasVisible","_isVisible","_transformedRect","addComponentsGetterSetter","addGetterSetter"],"sources":["C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/konva/lib/Container.js"],"sourcesContent":["import { Factory } from \"./Factory.js\";\r\nimport { Node } from \"./Node.js\";\r\nimport { getNumberValidator } from \"./Validators.js\";\r\nexport class Container extends Node {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.children = [];\r\n    }\r\n    getChildren(filterFunc) {\r\n        const children = this.children || [];\r\n        if (filterFunc) {\r\n            return children.filter(filterFunc);\r\n        }\r\n        return children;\r\n    }\r\n    hasChildren() {\r\n        return this.getChildren().length > 0;\r\n    }\r\n    removeChildren() {\r\n        this.getChildren().forEach((child) => {\r\n            child.parent = null;\r\n            child.index = 0;\r\n            child.remove();\r\n        });\r\n        this.children = [];\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    destroyChildren() {\r\n        this.getChildren().forEach((child) => {\r\n            child.parent = null;\r\n            child.index = 0;\r\n            child.destroy();\r\n        });\r\n        this.children = [];\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    add(...children) {\r\n        if (children.length === 0) {\r\n            return this;\r\n        }\r\n        if (children.length > 1) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                this.add(children[i]);\r\n            }\r\n            return this;\r\n        }\r\n        const child = children[0];\r\n        if (child.getParent()) {\r\n            child.moveTo(this);\r\n            return this;\r\n        }\r\n        this._validateAdd(child);\r\n        child.index = this.getChildren().length;\r\n        child.parent = this;\r\n        child._clearCaches();\r\n        this.getChildren().push(child);\r\n        this._fire('add', {\r\n            child: child,\r\n        });\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    destroy() {\r\n        if (this.hasChildren()) {\r\n            this.destroyChildren();\r\n        }\r\n        super.destroy();\r\n        return this;\r\n    }\r\n    find(selector) {\r\n        return this._generalFind(selector, false);\r\n    }\r\n    findOne(selector) {\r\n        const result = this._generalFind(selector, true);\r\n        return result.length > 0 ? result[0] : undefined;\r\n    }\r\n    _generalFind(selector, findOne) {\r\n        const retArr = [];\r\n        this._descendants((node) => {\r\n            const valid = node._isMatch(selector);\r\n            if (valid) {\r\n                retArr.push(node);\r\n            }\r\n            if (valid && findOne) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return retArr;\r\n    }\r\n    _descendants(fn) {\r\n        let shouldStop = false;\r\n        const children = this.getChildren();\r\n        for (const child of children) {\r\n            shouldStop = fn(child);\r\n            if (shouldStop) {\r\n                return true;\r\n            }\r\n            if (!child.hasChildren()) {\r\n                continue;\r\n            }\r\n            shouldStop = child._descendants(fn);\r\n            if (shouldStop) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    toObject() {\r\n        const obj = Node.prototype.toObject.call(this);\r\n        obj.children = [];\r\n        this.getChildren().forEach((child) => {\r\n            obj.children.push(child.toObject());\r\n        });\r\n        return obj;\r\n    }\r\n    isAncestorOf(node) {\r\n        let parent = node.getParent();\r\n        while (parent) {\r\n            if (parent._id === this._id) {\r\n                return true;\r\n            }\r\n            parent = parent.getParent();\r\n        }\r\n        return false;\r\n    }\r\n    clone(obj) {\r\n        const node = Node.prototype.clone.call(this, obj);\r\n        this.getChildren().forEach(function (no) {\r\n            node.add(no.clone());\r\n        });\r\n        return node;\r\n    }\r\n    getAllIntersections(pos) {\r\n        const arr = [];\r\n        this.find('Shape').forEach((shape) => {\r\n            if (shape.isVisible() && shape.intersects(pos)) {\r\n                arr.push(shape);\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n    _clearSelfAndDescendantCache(attr) {\r\n        var _a;\r\n        super._clearSelfAndDescendantCache(attr);\r\n        if (this.isCached()) {\r\n            return;\r\n        }\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\r\n            node._clearSelfAndDescendantCache(attr);\r\n        });\r\n    }\r\n    _setChildrenIndices() {\r\n        var _a;\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\r\n            child.index = n;\r\n        });\r\n        this._requestDraw();\r\n    }\r\n    drawScene(can, top, bufferCanvas) {\r\n        const layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\r\n        const caching = canvas && canvas.isCache;\r\n        if (!this.isVisible() && !caching) {\r\n            return this;\r\n        }\r\n        if (cachedSceneCanvas) {\r\n            context.save();\r\n            const m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedSceneCanvas(context);\r\n            context.restore();\r\n        }\r\n        else {\r\n            this._drawChildren('drawScene', canvas, top, bufferCanvas);\r\n        }\r\n        return this;\r\n    }\r\n    drawHit(can, top) {\r\n        if (!this.shouldDrawHit(top)) {\r\n            return this;\r\n        }\r\n        const layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\r\n        if (cachedHitCanvas) {\r\n            context.save();\r\n            const m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedHitCanvas(context);\r\n            context.restore();\r\n        }\r\n        else {\r\n            this._drawChildren('drawHit', canvas, top);\r\n        }\r\n        return this;\r\n    }\r\n    _drawChildren(drawMethod, canvas, top, bufferCanvas) {\r\n        var _a;\r\n        const context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (typeof clipWidth === 'number' && typeof clipHeight === 'number') ||\r\n            clipFunc;\r\n        const selfCache = top === this;\r\n        if (hasClip) {\r\n            context.save();\r\n            const transform = this.getAbsoluteTransform(top);\r\n            let m = transform.getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            context.beginPath();\r\n            let clipArgs;\r\n            if (clipFunc) {\r\n                clipArgs = clipFunc.call(this, context, this);\r\n            }\r\n            else {\r\n                const clipX = this.clipX();\r\n                const clipY = this.clipY();\r\n                context.rect(clipX || 0, clipY || 0, clipWidth, clipHeight);\r\n            }\r\n            context.clip.apply(context, clipArgs);\r\n            m = transform.copy().invert().getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n        }\r\n        const hasComposition = !selfCache &&\r\n            this.globalCompositeOperation() !== 'source-over' &&\r\n            drawMethod === 'drawScene';\r\n        if (hasComposition) {\r\n            context.save();\r\n            context._applyGlobalCompositeOperation(this);\r\n        }\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\r\n            child[drawMethod](canvas, top, bufferCanvas);\r\n        });\r\n        if (hasComposition) {\r\n            context.restore();\r\n        }\r\n        if (hasClip) {\r\n            context.restore();\r\n        }\r\n    }\r\n    getClientRect(config = {}) {\r\n        var _a;\r\n        const skipTransform = config.skipTransform;\r\n        const relativeTo = config.relativeTo;\r\n        let minX, minY, maxX, maxY;\r\n        let selfRect = {\r\n            x: Infinity,\r\n            y: Infinity,\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n        const that = this;\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\r\n            if (!child.visible()) {\r\n                return;\r\n            }\r\n            const rect = child.getClientRect({\r\n                relativeTo: that,\r\n                skipShadow: config.skipShadow,\r\n                skipStroke: config.skipStroke,\r\n            });\r\n            if (rect.width === 0 && rect.height === 0) {\r\n                return;\r\n            }\r\n            if (minX === undefined) {\r\n                minX = rect.x;\r\n                minY = rect.y;\r\n                maxX = rect.x + rect.width;\r\n                maxY = rect.y + rect.height;\r\n            }\r\n            else {\r\n                minX = Math.min(minX, rect.x);\r\n                minY = Math.min(minY, rect.y);\r\n                maxX = Math.max(maxX, rect.x + rect.width);\r\n                maxY = Math.max(maxY, rect.y + rect.height);\r\n            }\r\n        });\r\n        const shapes = this.find('Shape');\r\n        let hasVisible = false;\r\n        for (let i = 0; i < shapes.length; i++) {\r\n            const shape = shapes[i];\r\n            if (shape._isVisible(this)) {\r\n                hasVisible = true;\r\n                break;\r\n            }\r\n        }\r\n        if (hasVisible && minX !== undefined) {\r\n            selfRect = {\r\n                x: minX,\r\n                y: minY,\r\n                width: maxX - minX,\r\n                height: maxY - minY,\r\n            };\r\n        }\r\n        else {\r\n            selfRect = {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        }\r\n        if (!skipTransform) {\r\n            return this._transformedRect(selfRect, relativeTo);\r\n        }\r\n        return selfRect;\r\n    }\r\n}\r\nFactory.addComponentsGetterSetter(Container, 'clip', [\r\n    'x',\r\n    'y',\r\n    'width',\r\n    'height',\r\n]);\r\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\r\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\r\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\r\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\r\nFactory.addGetterSetter(Container, 'clipFunc');\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}