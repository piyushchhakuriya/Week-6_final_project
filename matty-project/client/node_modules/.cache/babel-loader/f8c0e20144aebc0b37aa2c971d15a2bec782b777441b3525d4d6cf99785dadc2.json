{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/<your-cloud-name>/upload';\nconst UPLOAD_PRESET = '<your-upload-preset>';\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  // your polygon drawing function unchanged\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\n// other constants and functions unchanged...\n\nconst CanvasEditor = ({\n  initialData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // all your previous states unchanged...\n  const [file, setFile] = useState(null);\n  const [thumbnailUrl, setThumbnailUrl] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n  // existing states...\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  // ... rest of states\n\n  // existing effects unchanged...\n\n  const handleFileChange = e => {\n    const uploadFile = e.target.files[0];\n    if (!uploadFile) return;\n    setFile(uploadFile);\n  };\n\n  // Upload to Cloudinary method\n  const handleUploadImage = async () => {\n    if (!file) {\n      alert('Please select a file first');\n      return;\n    }\n    setUploading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', UPLOAD_PRESET);\n    try {\n      const res = await fetch(CLOUDINARY_URL, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      setThumbnailUrl(data.secure_url);\n      alert('Image uploaded successfully');\n      // Optionally, add the image element to canvas here if needed\n      // e.g. addImageElement(data.secure_url);\n    } catch (err) {\n      console.error('Upload Error:', err);\n      alert('Image upload failed');\n    } finally {\n      setUploading(false);\n      setFile(null);\n      if (fileInputRef.current) fileInputRef.current.value = '';\n    }\n  };\n\n  // Include rest of your existing functions here unchanged like drawing, moveElement, etc.\n\n  // Add your file input, Upload and Download button inside the left panel <aside>\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mb-2 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: () => fileInputRef.current.click(),\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleUploadImage,\n            disabled: !file || uploading,\n            children: uploading ? 'Uploading...' : 'Upload to Cloudinary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), thumbnailUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: thumbnailUrl,\n            alt: \"Uploaded thumbnail\",\n            className: \"mt-2 max-w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4 mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: () => {\n              const canvas = canvasRef.current;\n              const link = document.createElement('a');\n              link.download = 'canvas.png';\n              link.href = canvas.toDataURL();\n              link.click();\n            },\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 1000,\n          height: 700,\n          style: {\n            background: '#fff',\n            border: '1px solid #eee',\n            marginTop: '-250px'\n          },\n          onMouseDown: handleCanvasMouseDown,\n          onMouseMove: handleCanvasMouseMove,\n          onMouseUp: handleCanvasMouseUp,\n          onMouseLeave: handleCanvasMouseUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"vQtebmoBi9oX/+nI6MX7dZrraNQ=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","CLOUDINARY_URL","UPLOAD_PRESET","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","CanvasEditor","initialData","_s","canvasRef","fileInputRef","file","setFile","thumbnailUrl","setThumbnailUrl","uploading","setUploading","selectedShape","setSelectedShape","shapeColor","setShapeColor","handleFileChange","e","uploadFile","target","files","handleUploadImage","alert","formData","FormData","append","res","fetch","method","body","data","json","secure_url","err","console","error","current","value","className","children","onClick","click","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","ref","style","display","onChange","disabled","src","alt","canvas","link","document","createElement","download","href","toDataURL","width","height","background","border","marginTop","onMouseDown","handleCanvasMouseDown","onMouseMove","handleCanvasMouseMove","onMouseUp","handleCanvasMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/<your-cloud-name>/upload';\r\nconst UPLOAD_PRESET = '<your-upload-preset>';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  // your polygon drawing function unchanged\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\n// other constants and functions unchanged...\r\n\r\nconst CanvasEditor = ({ initialData }) => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // all your previous states unchanged...\r\n  const [file, setFile] = useState(null);\r\n  const [thumbnailUrl, setThumbnailUrl] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  // existing states...\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  // ... rest of states\r\n\r\n  // existing effects unchanged...\r\n\r\n  const handleFileChange = e => {\r\n    const uploadFile = e.target.files[0];\r\n    if (!uploadFile) return;\r\n    setFile(uploadFile);\r\n  };\r\n\r\n  // Upload to Cloudinary method\r\n  const handleUploadImage = async () => {\r\n    if (!file) {\r\n      alert('Please select a file first');\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', UPLOAD_PRESET);\r\n\r\n    try {\r\n      const res = await fetch(CLOUDINARY_URL, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      setThumbnailUrl(data.secure_url);\r\n      alert('Image uploaded successfully');\r\n      // Optionally, add the image element to canvas here if needed\r\n      // e.g. addImageElement(data.secure_url);\r\n    } catch (err) {\r\n      console.error('Upload Error:', err);\r\n      alert('Image upload failed');\r\n    } finally {\r\n      setUploading(false);\r\n      setFile(null);\r\n      if (fileInputRef.current) fileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Include rest of your existing functions here unchanged like drawing, moveElement, etc.\r\n\r\n  // Add your file input, Upload and Download button inside the left panel <aside>\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Your existing header and toolbar here unchanged */}\r\n\r\n      <div className=\"flex flex-1\">\r\n        <aside className=\"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\">\r\n          {/* Your existing Drawing Tools, Shapes and Text sections unchanged */}\r\n\r\n          {/* New Upload Image Section */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n            <button className=\"w-full mb-2 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={() => fileInputRef.current.click()}>\r\n              Upload Image\r\n            </button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              ref={fileInputRef}\r\n              style={{ display: 'none' }}\r\n              onChange={handleFileChange}\r\n            />\r\n            <button\r\n              className=\"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\"\r\n              onClick={handleUploadImage}\r\n              disabled={!file || uploading}\r\n            >\r\n              {uploading ? 'Uploading...' : 'Upload to Cloudinary'}\r\n            </button>\r\n            {thumbnailUrl && (\r\n              <img src={thumbnailUrl} alt=\"Uploaded thumbnail\" className=\"mt-2 max-w-full\" />\r\n            )}\r\n          </div>\r\n\r\n          {/* Your existing Download button */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mt-6\">\r\n            <button className=\"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={() => {\r\n              const canvas = canvasRef.current;\r\n              const link = document.createElement('a');\r\n              link.download = 'canvas.png';\r\n              link.href = canvas.toDataURL();\r\n              link.click();\r\n            }}>\r\n              Download\r\n            </button>\r\n          </div>\r\n        </aside>\r\n\r\n        {/* Your existing canvas rendering area unchanged */}\r\n        <main className=\"flex-1 flex items-center justify-center\">\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={1000}\r\n            height={700}\r\n            style={{ background: '#fff', border: '1px solid #eee', marginTop: '-250px' }}\r\n            onMouseDown={handleCanvasMouseDown}\r\n            onMouseMove={handleCanvasMouseMove}\r\n            onMouseUp={handleCanvasMouseUp}\r\n            onMouseLeave={handleCanvasMouseUp}\r\n          />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}