{"ast":null,"code":"import axios from 'axios';\n\n// Optional helper for fetch-based calls\nexport function getAuthHeaders() {\n  const token = localStorage.getItem('token');\n  if (!token) return {};\n  return {\n    Authorization: `Bearer ${token}`\n  };\n}\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api' // change to your backend URL if deployed\n});\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const tokenManager = {\n  setToken: token => localStorage.setItem('token', token),\n  getToken: () => localStorage.getItem('token'),\n  clearToken: () => localStorage.removeItem('token'),\n  clearAuth: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // remove any other auth-related keys here if needed\n  }\n};\nexport default API;","map":{"version":3,"names":["axios","getAuthHeaders","token","localStorage","getItem","Authorization","API","create","baseURL","interceptors","request","use","config","headers","tokenManager","setToken","setItem","getToken","clearToken","removeItem","clearAuth"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Optional helper for fetch-based calls\r\nexport function getAuthHeaders() {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) return {};\r\n  return { Authorization: `Bearer ${token}` };\r\n}\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000/api', // change to your backend URL if deployed\r\n});\r\n\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const tokenManager = {\r\n  setToken: (token) => localStorage.setItem('token', token),\r\n  getToken: () => localStorage.getItem('token'),\r\n  clearToken: () => localStorage.removeItem('token'),\r\n  clearAuth: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    // remove any other auth-related keys here if needed\r\n  }\r\n};\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,CAAC,CAAC;EACrB,OAAO;IAAEG,aAAa,EAAE,UAAUH,KAAK;EAAG,CAAC;AAC7C;AAEA,MAAMI,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTU,MAAM,CAACC,OAAO,CAACR,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOU,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAME,YAAY,GAAG;EAC1BC,QAAQ,EAAGb,KAAK,IAAKC,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;EACzDe,QAAQ,EAAEA,CAAA,KAAMd,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7Cc,UAAU,EAAEA,CAAA,KAAMf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;EAClDC,SAAS,EAAEA,CAAA,KAAM;IACfjB,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChChB,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;IAC/B;EACF;AACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}