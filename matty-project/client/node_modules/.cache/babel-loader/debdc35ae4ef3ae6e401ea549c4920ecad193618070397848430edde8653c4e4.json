{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst initialState = {\n  shapes: [],\n  texts: [],\n  lines: []\n};\nconst CanvasEditor = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const [history, setHistory] = useState([initialState]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const drawingPointsRef = useRef([]);\n  const {\n    shapes,\n    texts,\n    lines\n  } = history[historyIndex];\n\n  // Helper for default shape sizes\n  const getDefaultSize = type => {\n    if (type === 'rectangle') return {\n      w: 120,\n      h: 80\n    };\n    if (type === 'square' || type === 'circle') return {\n      w: 100,\n      h: 100\n    };\n    if (type === 'oval') return {\n      w: 120,\n      h: 80\n    };\n    if (type === 'image') return {\n      w: 200,\n      h: 200\n    };\n    return {\n      w: 120,\n      h: 80\n    };\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 2;\n    ctx.lineCap = 'round';\n    shapes.forEach((shape, idx) => {\n      var _shape$w, _shape$h;\n      ctx.save();\n      // Ensure all shapes have w/h\n      const w = (_shape$w = shape.w) !== null && _shape$w !== void 0 ? _shape$w : getDefaultSize(shape.type).w;\n      const h = (_shape$h = shape.h) !== null && _shape$h !== void 0 ? _shape$h : getDefaultSize(shape.type).h;\n      if (shape.type === 'image') {\n        const img = new window.Image();\n        img.src = shape.src;\n        img.onload = () => {\n          ctx.drawImage(img, shape.x, shape.y, w, h);\n          if (idx === selectedShapeIndex) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(shape.x - 2, shape.y - 2, w + 4, h + 4);\n          }\n        };\n        if (img.complete) {\n          ctx.drawImage(img, shape.x, shape.y, w, h);\n          if (idx === selectedShapeIndex) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(shape.x - 2, shape.y - 2, w + 4, h + 4);\n          }\n        }\n      } else {\n        ctx.fillStyle = shape.color;\n        ctx.strokeStyle = shape.color;\n        if (shape.type === 'rectangle' || shape.type === 'square') {\n          ctx.fillRect(shape.x, shape.y, w, h);\n        } else if (shape.type === 'circle') {\n          ctx.beginPath();\n          ctx.arc(shape.x + w / 2, shape.y + h / 2, w / 2, 0, 2 * Math.PI);\n          ctx.fill();\n        } else if (shape.type === 'oval') {\n          ctx.save();\n          ctx.translate(shape.x + w / 2, shape.y + h / 2);\n          ctx.scale(1.5, 1);\n          ctx.beginPath();\n          ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\n          ctx.restore();\n          ctx.fill();\n        } else if (shape.type === 'triangle') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x, shape.y + h); // left-bottom\n          ctx.lineTo(shape.x + w, shape.y + h); // right-bottom\n          ctx.lineTo(shape.x + w / 2, shape.y); // middle-top\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'parallelogram') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + 20, shape.y + h);\n          ctx.lineTo(shape.x + w + 20, shape.y + h);\n          ctx.lineTo(shape.x + w, shape.y);\n          ctx.lineTo(shape.x, shape.y);\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'rhombus') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + w / 2, shape.y);\n          ctx.lineTo(shape.x + w, shape.y + h / 2);\n          ctx.lineTo(shape.x + w / 2, shape.y + h);\n          ctx.lineTo(shape.x, shape.y + h / 2);\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'trapezoid') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + 20, shape.y + h);\n          ctx.lineTo(shape.x + w - 20, shape.y + h);\n          ctx.lineTo(shape.x + w, shape.y);\n          ctx.lineTo(shape.x, shape.y);\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'kite') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + w / 2, shape.y);\n          ctx.lineTo(shape.x + w, shape.y + h / 2);\n          ctx.lineTo(shape.x + w / 2, shape.y + h);\n          ctx.lineTo(shape.x, shape.y + h / 2);\n          ctx.closePath();\n          ctx.fill();\n        } else if (['pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'].includes(shape.type)) {\n          const sides = {\n            pentagon: 5,\n            hexagon: 6,\n            heptagon: 7,\n            octagon: 8,\n            nonagon: 9,\n            decagon: 10\n          }[shape.type];\n          drawPolygon(ctx, shape.x + w / 2, shape.y + h / 2, Math.min(w, h) / 2, sides, shape.color);\n        }\n        if (idx === selectedShapeIndex) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.lineWidth = 2;\n          ctx.strokeRect(shape.x - 2, shape.y - 2, w + 4, h + 4);\n          // Draw resize handles\n          const handles = [[shape.x - 6, shape.y - 6],\n          // top-left\n          [shape.x + w + 2, shape.y - 6],\n          // top-right\n          [shape.x - 6, shape.y + h + 2],\n          // bottom-left\n          [shape.x + w + 2, shape.y + h + 2] // bottom-right\n          ];\n          handles.forEach(([hx, hy]) => {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = '#333';\n            ctx.lineWidth = 1;\n            ctx.fillRect(hx, hy, 8, 8);\n            ctx.strokeRect(hx, hy, 8, 8);\n          });\n        }\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n    texts.forEach(({\n      text,\n      x,\n      y,\n      color\n    }, idx) => {\n      ctx.font = '24px Arial';\n      ctx.fillStyle = color;\n      ctx.fillText(text, x, y);\n      if (idx === selectedTextIndex) {\n        const width = ctx.measureText(text).width;\n        ctx.strokeStyle = '#f59e42';\n        ctx.strokeRect(x - 2, y - 24, width + 4, 28);\n      }\n    });\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex]);\n  const saveState = (newShapes, newTexts, newLines) => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      shapes: JSON.parse(JSON.stringify(newShapes)),\n      texts: JSON.parse(JSON.stringify(newTexts)),\n      lines: JSON.parse(JSON.stringify(newLines))\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n    }\n  };\n  const handleRedo = () => {\n    if (historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n    }\n  };\n\n  // Helper to check if mouse is over a resize handle\n  const getHandleAt = (shape, mouseX, mouseY) => {\n    var _shape$w2, _shape$h2;\n    const w = (_shape$w2 = shape.w) !== null && _shape$w2 !== void 0 ? _shape$w2 : getDefaultSize(shape.type).w;\n    const h = (_shape$h2 = shape.h) !== null && _shape$h2 !== void 0 ? _shape$h2 : getDefaultSize(shape.type).h;\n    const handles = [[shape.x - 6, shape.y - 6],\n    // top-left\n    [shape.x + w + 2, shape.y - 6],\n    // top-right\n    [shape.x - 6, shape.y + h + 2],\n    // bottom-left\n    [shape.x + w + 2, shape.y + h + 2] // bottom-right\n    ];\n    for (let i = 0; i < handles.length; i++) {\n      const [hx, hy] = handles[i];\n      if (mouseX >= hx && mouseX <= hx + 8 && mouseY >= hy && mouseY <= hy + 8) {\n        return i;\n      }\n    }\n    return null;\n  };\n  const handleCanvasMouseDown = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    for (let i = texts.length - 1; i >= 0; i--) {\n      const {\n        text,\n        x,\n        y\n      } = texts[i];\n      ctx.font = '24px Arial';\n      const width = ctx.measureText(text).width;\n      if (mouseX >= x - 2 && mouseX <= x + width + 2 && mouseY >= y - 24 && mouseY <= y + 4) {\n        setSelectedTextIndex(i);\n        setSelectedShapeIndex(null);\n        setDragOffset({\n          x: mouseX - x,\n          y: mouseY - y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      var _shape$w3, _shape$h3;\n      const shape = shapes[i];\n      const w = (_shape$w3 = shape.w) !== null && _shape$w3 !== void 0 ? _shape$w3 : getDefaultSize(shape.type).w;\n      const h = (_shape$h3 = shape.h) !== null && _shape$h3 !== void 0 ? _shape$h3 : getDefaultSize(shape.type).h;\n      // Check resize handles first\n      const handleIdx = getHandleAt(shape, mouseX, mouseY);\n      if (i === selectedShapeIndex && handleIdx !== null) {\n        setResizingHandle(handleIdx);\n        return;\n      }\n      if (mouseX >= shape.x && mouseX <= shape.x + w && mouseY >= shape.y && mouseY <= shape.y + h) {\n        setSelectedShapeIndex(i);\n        setSelectedTextIndex(null);\n        setDragOffset({\n          x: mouseX - shape.x,\n          y: mouseY - shape.y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    if (drawMode || eraserMode) {\n      setIsDrawing(true);\n      drawingPointsRef.current = [[mouseX, mouseY]];\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    if (resizingHandle !== null && selectedShapeIndex !== null) {\n      var _shape$w4, _shape$h4;\n      // Resize logic\n      const shape = shapes[selectedShapeIndex];\n      const w = (_shape$w4 = shape.w) !== null && _shape$w4 !== void 0 ? _shape$w4 : getDefaultSize(shape.type).w;\n      const h = (_shape$h4 = shape.h) !== null && _shape$h4 !== void 0 ? _shape$h4 : getDefaultSize(shape.type).h;\n      let newShape = {\n        ...shape\n      };\n      if (resizingHandle === 0) {\n        // top-left\n        newShape.x = mouseX;\n        newShape.y = mouseY;\n        newShape.w = w + (shape.x - mouseX);\n        newShape.h = h + (shape.y - mouseY);\n      } else if (resizingHandle === 1) {\n        // top-right\n        newShape.y = mouseY;\n        newShape.w = mouseX - shape.x;\n        newShape.h = h + (shape.y - mouseY);\n      } else if (resizingHandle === 2) {\n        // bottom-left\n        newShape.x = mouseX;\n        newShape.w = w + (shape.x - mouseX);\n        newShape.h = mouseY - shape.y;\n      } else if (resizingHandle === 3) {\n        // bottom-right\n        newShape.w = mouseX - shape.x;\n        newShape.h = mouseY - shape.y;\n      }\n      // Prevent negative width/height\n      newShape.w = Math.max(20, newShape.w);\n      newShape.h = Math.max(20, newShape.h);\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? newShape : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes: newShapes,\n          texts,\n          lines\n        };\n        return newHistory;\n      });\n      return;\n    }\n    if (isDrawing && (drawMode || eraserMode)) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const points = drawingPointsRef.current;\n      points.push([mouseX, mouseY]);\n      ctx.beginPath();\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\n      ctx.lineTo(mouseX, mouseY);\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\n      ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\n      ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n      return;\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : t);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes,\n          texts: newTexts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      var _shape$w5, _shape$h5;\n      const shape = shapes[selectedShapeIndex];\n      const w = (_shape$w5 = shape.w) !== null && _shape$w5 !== void 0 ? _shape$w5 : getDefaultSize(shape.type).w;\n      const h = (_shape$h5 = shape.h) !== null && _shape$h5 !== void 0 ? _shape$h5 : getDefaultSize(shape.type).h;\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y,\n        w,\n        h\n      } : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes: newShapes,\n          texts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    if (resizingHandle !== null) {\n      setResizingHandle(null);\n      saveState(shapes, texts, lines);\n      return;\n    }\n    if (isDrawing && (drawMode || eraserMode)) {\n      setIsDrawing(false);\n      const newLine = {\n        points: drawingPointsRef.current,\n        color: eraserMode ? 'eraser' : pencilColor,\n        size: eraserMode ? eraserSize : brushSize,\n        mode: eraserMode ? 'eraser' : 'draw'\n      };\n      saveState(shapes, texts, [...lines, newLine]);\n      drawingPointsRef.current = [];\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n  };\n  const handleAddShape = () => {\n    const {\n      w,\n      h\n    } = getDefaultSize(selectedShape);\n    let newShape = {\n      type: selectedShape,\n      x: 300,\n      y: 100,\n      color: shapeColor,\n      w,\n      h\n    };\n    if (selectedShape === 'image') return;\n    saveState([...shapes, newShape], texts, lines);\n  };\n  const handleAddText = () => {\n    const text = prompt('Enter text to add:');\n    if (!text) return;\n    saveState(shapes, [...texts, {\n      text,\n      x: 100,\n      y: 400,\n      color: textColor\n    }], lines);\n  };\n  const handleTextColorChange = e => {\n    setTextColor(e.target.value);\n    if (selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        color: e.target.value\n      } : t);\n      saveState(shapes, newTexts, lines);\n    }\n  };\n  const handleShapeColorChange = e => {\n    setShapeColor(e.target.value);\n    if (selectedShapeIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        color: e.target.value\n      } : s);\n      saveState(newShapes, texts, lines);\n    }\n  };\n  const handleUploadImage = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      const newShape = {\n        type: 'image',\n        x: 50,\n        y: 50,\n        w: 200,\n        h: 200,\n        src: event.target.result\n      };\n      saveState([...shapes, newShape], texts, lines);\n    };\n    reader.readAsDataURL(file);\n    e.target.value = '';\n  };\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const link = document.createElement('a');\n    link.download = 'canvas.png';\n    link.href = canvas.toDataURL();\n    link.click();\n  };\n  const clearCanvas = () => {\n    saveState([], [], []);\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center p-4 bg-gray-100 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-bold\",\n        children: \"MATTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2\",\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        disabled: historyIndex === 0,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedo,\n        disabled: historyIndex === history.length - 1,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-3 border-b pb-2\",\n            children: \"Drawing Tools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `w-full py-2 rounded ${drawMode && !eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`,\n              onClick: () => {\n                setDrawMode(true);\n                setEraserMode(false);\n              },\n              children: \"Pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `w-full py-2 rounded ${eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`,\n              onClick: () => {\n                setEraserMode(true);\n                setDrawMode(false);\n              },\n              children: \"Eraser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm mb-1\",\n              children: \"Pencil Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: pencilColor,\n              onChange: e => setPencilColor(e.target.value),\n              className: \"w-8 h-8 p-0 border-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm mb-1\",\n              children: \"Brush Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: 1,\n              max: 30,\n              value: brushSize,\n              onChange: e => setBrushSize(Number(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs\",\n              children: [brushSize, \"px\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm mb-1\",\n              children: \"Eraser Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: 5,\n              max: 50,\n              value: eraserSize,\n              onChange: e => setEraserSize(Number(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs\",\n              children: [eraserSize, \"px\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-3 border-b pb-2\",\n            children: \"Shapes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Shape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedShape,\n            onChange: e => {\n              setSelectedShape(e.target.value);\n              setDrawMode(false);\n              setEraserMode(false);\n            },\n            className: \"mb-3 p-1 border rounded w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rectangle\",\n              children: \"Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"square\",\n              children: \"Square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"circle\",\n              children: \"Circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"oval\",\n              children: \"Oval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"triangle\",\n              children: \"Triangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"parallelogram\",\n              children: \"Parallelogram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rhombus\",\n              children: \"Rhombus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"trapezoid\",\n              children: \"Trapezoid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"kite\",\n              children: \"Kite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pentagon\",\n              children: \"Pentagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hexagon\",\n              children: \"Hexagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"heptagon\",\n              children: \"Heptagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"octagon\",\n              children: \"Octagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nonagon\",\n              children: \"Nonagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"decagon\",\n              children: \"Decagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Shape Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: shapeColor,\n            onChange: handleShapeColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleAddShape,\n            children: \"Add Shape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-3 border-b pb-2\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Text Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: textColor,\n            onChange: handleTextColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleAddText,\n            children: \"Add Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mb-2 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleUploadImage,\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleDownload,\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 1000,\n          height: 700,\n          style: {\n            background: '#fff',\n            border: '1px solid #eee',\n            marginTop: '-250px'\n          },\n          onMouseDown: handleCanvasMouseDown,\n          onMouseMove: handleCanvasMouseMove,\n          onMouseUp: handleCanvasMouseUp,\n          onMouseLeave: handleCanvasMouseUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 472,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"0Ln5iqHDRo7B1YU36Oj6ILyp82Y=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","initialState","shapes","texts","lines","CanvasEditor","_s","canvasRef","fileInputRef","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedTextIndex","setSelectedTextIndex","selectedShapeIndex","setSelectedShapeIndex","isDragging","setIsDragging","isDrawing","setIsDrawing","resizingHandle","setResizingHandle","history","setHistory","historyIndex","setHistoryIndex","drawingPointsRef","getDefaultSize","type","w","h","canvas","current","getContext","clearRect","width","height","lineWidth","lineCap","forEach","shape","idx","_shape$w","_shape$h","save","img","window","Image","src","onload","drawImage","strokeStyle","strokeRect","complete","fillRect","arc","translate","scale","restore","includes","pentagon","hexagon","heptagon","octagon","nonagon","decagon","min","handles","hx","hy","line","mode","size","globalCompositeOperation","points","stroke","text","font","fillText","measureText","saveState","newShapes","newTexts","newLines","newHistory","slice","push","JSON","parse","stringify","length","handleUndo","handleRedo","getHandleAt","mouseX","mouseY","_shape$w2","_shape$h2","handleCanvasMouseDown","e","nativeEvent","offsetX","offsetY","_shape$w3","_shape$h3","handleIdx","handleCanvasMouseMove","_shape$w4","_shape$h4","newShape","max","map","s","t","_shape$w5","_shape$h5","handleCanvasMouseUp","newLine","handleAddShape","handleAddText","prompt","handleTextColorChange","target","value","handleShapeColorChange","handleUploadImage","click","handleFileChange","file","files","reader","FileReader","event","result","readAsDataURL","handleDownload","link","document","createElement","download","href","toDataURL","clearCanvas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","Number","accept","ref","style","display","background","border","marginTop","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst initialState = {\r\n  shapes: [],\r\n  texts: [],\r\n  lines: []\r\n};\r\n\r\nconst CanvasEditor = () => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\r\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const [history, setHistory] = useState([initialState]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const drawingPointsRef = useRef([]);\r\n\r\n  const { shapes, texts, lines } = history[historyIndex];\r\n\r\n  // Helper for default shape sizes\r\n  const getDefaultSize = (type) => {\r\n    if (type === 'rectangle') return { w: 120, h: 80 };\r\n    if (type === 'square' || type === 'circle') return { w: 100, h: 100 };\r\n    if (type === 'oval') return { w: 120, h: 80 };\r\n    if (type === 'image') return { w: 200, h: 200 };\r\n    return { w: 120, h: 80 };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineWidth = 2;\r\n    ctx.lineCap = 'round';\r\n    shapes.forEach((shape, idx) => {\r\n      ctx.save();\r\n      // Ensure all shapes have w/h\r\n      const w = shape.w ?? getDefaultSize(shape.type).w;\r\n      const h = shape.h ?? getDefaultSize(shape.type).h;\r\n      if (shape.type === 'image') {\r\n        const img = new window.Image();\r\n        img.src = shape.src;\r\n        img.onload = () => {\r\n          ctx.drawImage(img, shape.x, shape.y, w, h);\r\n          if (idx === selectedShapeIndex) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(shape.x - 2, shape.y - 2, w + 4, h + 4);\r\n          }\r\n        };\r\n        if (img.complete) {\r\n          ctx.drawImage(img, shape.x, shape.y, w, h);\r\n          if (idx === selectedShapeIndex) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(shape.x - 2, shape.y - 2, w + 4, h + 4);\r\n          }\r\n        }\r\n      } else {\r\n        ctx.fillStyle = shape.color;\r\n        ctx.strokeStyle = shape.color;\r\n        if (shape.type === 'rectangle' || shape.type === 'square') {\r\n          ctx.fillRect(shape.x, shape.y, w, h);\r\n        } else if (shape.type === 'circle') {\r\n          ctx.beginPath();\r\n          ctx.arc(shape.x + w / 2, shape.y + h / 2, w / 2, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n        } else if (shape.type === 'oval') {\r\n          ctx.save();\r\n          ctx.translate(shape.x + w / 2, shape.y + h / 2);\r\n          ctx.scale(1.5, 1);\r\n          ctx.beginPath();\r\n          ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\r\n          ctx.restore();\r\n          ctx.fill();\r\n        } else if (shape.type === 'triangle') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x, shape.y + h); // left-bottom\r\n          ctx.lineTo(shape.x + w, shape.y + h); // right-bottom\r\n          ctx.lineTo(shape.x + w / 2, shape.y); // middle-top\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'parallelogram') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + 20, shape.y + h);\r\n          ctx.lineTo(shape.x + w + 20, shape.y + h);\r\n          ctx.lineTo(shape.x + w, shape.y);\r\n          ctx.lineTo(shape.x, shape.y);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'rhombus') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + w / 2, shape.y);\r\n          ctx.lineTo(shape.x + w, shape.y + h / 2);\r\n          ctx.lineTo(shape.x + w / 2, shape.y + h);\r\n          ctx.lineTo(shape.x, shape.y + h / 2);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'trapezoid') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + 20, shape.y + h);\r\n          ctx.lineTo(shape.x + w - 20, shape.y + h);\r\n          ctx.lineTo(shape.x + w, shape.y);\r\n          ctx.lineTo(shape.x, shape.y);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'kite') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + w / 2, shape.y);\r\n          ctx.lineTo(shape.x + w, shape.y + h / 2);\r\n          ctx.lineTo(shape.x + w / 2, shape.y + h);\r\n          ctx.lineTo(shape.x, shape.y + h / 2);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if ([\r\n          'pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'\r\n        ].includes(shape.type)) {\r\n          const sides = {\r\n            pentagon: 5, hexagon: 6, heptagon: 7, octagon: 8, nonagon: 9, decagon: 10\r\n          }[shape.type];\r\n          drawPolygon(ctx, shape.x + w / 2, shape.y + h / 2, Math.min(w, h) / 2, sides, shape.color);\r\n        }\r\n        if (idx === selectedShapeIndex) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(shape.x - 2, shape.y - 2, w + 4, h + 4);\r\n          // Draw resize handles\r\n          const handles = [\r\n            [shape.x - 6, shape.y - 6], // top-left\r\n            [shape.x + w + 2, shape.y - 6], // top-right\r\n            [shape.x - 6, shape.y + h + 2], // bottom-left\r\n            [shape.x + w + 2, shape.y + h + 2] // bottom-right\r\n          ];\r\n          handles.forEach(([hx, hy]) => {\r\n            ctx.fillStyle = '#fff';\r\n            ctx.strokeStyle = '#333';\r\n            ctx.lineWidth = 1;\r\n            ctx.fillRect(hx, hy, 8, 8);\r\n            ctx.strokeRect(hx, hy, 8, 8);\r\n          });\r\n        }\r\n      }\r\n      ctx.restore();\r\n    });\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\r\n      line.points.forEach(([x, y], i) => {\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n    });\r\n    texts.forEach(({ text, x, y, color }, idx) => {\r\n      ctx.font = '24px Arial';\r\n      ctx.fillStyle = color;\r\n      ctx.fillText(text, x, y);\r\n      if (idx === selectedTextIndex) {\r\n        const width = ctx.measureText(text).width;\r\n        ctx.strokeStyle = '#f59e42';\r\n        ctx.strokeRect(x - 2, y - 24, width + 4, 28);\r\n      }\r\n    });\r\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex]);\r\n\r\n  const saveState = (newShapes, newTexts, newLines) => {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      shapes: JSON.parse(JSON.stringify(newShapes)),\r\n      texts: JSON.parse(JSON.stringify(newTexts)),\r\n      lines: JSON.parse(JSON.stringify(newLines))\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (historyIndex > 0) {\r\n      setHistoryIndex(historyIndex - 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n    }\r\n  };\r\n  const handleRedo = () => {\r\n    if (historyIndex < history.length - 1) {\r\n      setHistoryIndex(historyIndex + 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n    }\r\n  };\r\n\r\n  // Helper to check if mouse is over a resize handle\r\n  const getHandleAt = (shape, mouseX, mouseY) => {\r\n    const w = shape.w ?? getDefaultSize(shape.type).w;\r\n    const h = shape.h ?? getDefaultSize(shape.type).h;\r\n    const handles = [\r\n      [shape.x - 6, shape.y - 6], // top-left\r\n      [shape.x + w + 2, shape.y - 6], // top-right\r\n      [shape.x - 6, shape.y + h + 2], // bottom-left\r\n      [shape.x + w + 2, shape.y + h + 2] // bottom-right\r\n    ];\r\n    for (let i = 0; i < handles.length; i++) {\r\n      const [hx, hy] = handles[i];\r\n      if (\r\n        mouseX >= hx && mouseX <= hx + 8 &&\r\n        mouseY >= hy && mouseY <= hy + 8\r\n      ) {\r\n        return i;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleCanvasMouseDown = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    for (let i = texts.length - 1; i >= 0; i--) {\r\n      const { text, x, y } = texts[i];\r\n      ctx.font = '24px Arial';\r\n      const width = ctx.measureText(text).width;\r\n      if (\r\n        mouseX >= x - 2 &&\r\n        mouseX <= x + width + 2 &&\r\n        mouseY >= y - 24 &&\r\n        mouseY <= y + 4\r\n      ) {\r\n        setSelectedTextIndex(i);\r\n        setSelectedShapeIndex(null);\r\n        setDragOffset({ x: mouseX - x, y: mouseY - y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    for (let i = shapes.length - 1; i >= 0; i--) {\r\n      const shape = shapes[i];\r\n      const w = shape.w ?? getDefaultSize(shape.type).w;\r\n      const h = shape.h ?? getDefaultSize(shape.type).h;\r\n      // Check resize handles first\r\n      const handleIdx = getHandleAt(shape, mouseX, mouseY);\r\n      if (i === selectedShapeIndex && handleIdx !== null) {\r\n        setResizingHandle(handleIdx);\r\n        return;\r\n      }\r\n      if (\r\n        mouseX >= shape.x &&\r\n        mouseX <= shape.x + w &&\r\n        mouseY >= shape.y &&\r\n        mouseY <= shape.y + h\r\n      ) {\r\n        setSelectedShapeIndex(i);\r\n        setSelectedTextIndex(null);\r\n        setDragOffset({ x: mouseX - shape.x, y: mouseY - shape.y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    if (drawMode || eraserMode) {\r\n      setIsDrawing(true);\r\n      drawingPointsRef.current = [[mouseX, mouseY]];\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    if (resizingHandle !== null && selectedShapeIndex !== null) {\r\n      // Resize logic\r\n      const shape = shapes[selectedShapeIndex];\r\n      const w = shape.w ?? getDefaultSize(shape.type).w;\r\n      const h = shape.h ?? getDefaultSize(shape.type).h;\r\n      let newShape = { ...shape };\r\n      if (resizingHandle === 0) { // top-left\r\n        newShape.x = mouseX;\r\n        newShape.y = mouseY;\r\n        newShape.w = w + (shape.x - mouseX);\r\n        newShape.h = h + (shape.y - mouseY);\r\n      } else if (resizingHandle === 1) { // top-right\r\n        newShape.y = mouseY;\r\n        newShape.w = mouseX - shape.x;\r\n        newShape.h = h + (shape.y - mouseY);\r\n      } else if (resizingHandle === 2) { // bottom-left\r\n        newShape.x = mouseX;\r\n        newShape.w = w + (shape.x - mouseX);\r\n        newShape.h = mouseY - shape.y;\r\n      } else if (resizingHandle === 3) { // bottom-right\r\n        newShape.w = mouseX - shape.x;\r\n        newShape.h = mouseY - shape.y;\r\n      }\r\n      // Prevent negative width/height\r\n      newShape.w = Math.max(20, newShape.w);\r\n      newShape.h = Math.max(20, newShape.h);\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? newShape : s\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n        return newHistory;\r\n      });\r\n      return;\r\n    }\r\n    if (isDrawing && (drawMode || eraserMode)) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      const points = drawingPointsRef.current;\r\n      points.push([mouseX, mouseY]);\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\r\n      ctx.lineTo(mouseX, mouseY);\r\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\r\n      ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\r\n      ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n      return;\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : t\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes, texts: newTexts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      const shape = shapes[selectedShapeIndex];\r\n      const w = shape.w ?? getDefaultSize(shape.type).w;\r\n      const h = shape.h ?? getDefaultSize(shape.type).h;\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y, w, h } : s\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseUp = () => {\r\n    if (resizingHandle !== null) {\r\n      setResizingHandle(null);\r\n      saveState(shapes, texts, lines);\r\n      return;\r\n    }\r\n    if (isDrawing && (drawMode || eraserMode)) {\r\n      setIsDrawing(false);\r\n      const newLine = {\r\n        points: drawingPointsRef.current,\r\n        color: eraserMode ? 'eraser' : pencilColor,\r\n        size: eraserMode ? eraserSize : brushSize,\r\n        mode: eraserMode ? 'eraser' : 'draw'\r\n      };\r\n      saveState(shapes, texts, [...lines, newLine]);\r\n      drawingPointsRef.current = [];\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n  };\r\n\r\n  const handleAddShape = () => {\r\n    const { w, h } = getDefaultSize(selectedShape);\r\n    let newShape = { type: selectedShape, x: 300, y: 100, color: shapeColor, w, h };\r\n    if (selectedShape === 'image') return;\r\n    saveState([...shapes, newShape], texts, lines);\r\n  };\r\n\r\n  const handleAddText = () => {\r\n    const text = prompt('Enter text to add:');\r\n    if (!text) return;\r\n    saveState(shapes, [...texts, { text, x: 100, y: 400, color: textColor }], lines);\r\n  };\r\n\r\n  const handleTextColorChange = (e) => {\r\n    setTextColor(e.target.value);\r\n    if (selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, color: e.target.value } : t\r\n      );\r\n      saveState(shapes, newTexts, lines);\r\n    }\r\n  };\r\n\r\n  const handleShapeColorChange = (e) => {\r\n    setShapeColor(e.target.value);\r\n    if (selectedShapeIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, color: e.target.value } : s\r\n      );\r\n      saveState(newShapes, texts, lines);\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      const newShape = {\r\n        type: 'image',\r\n        x: 50,\r\n        y: 50,\r\n        w: 200,\r\n        h: 200,\r\n        src: event.target.result\r\n      };\r\n      saveState([...shapes, newShape], texts, lines);\r\n    };\r\n    reader.readAsDataURL(file);\r\n    e.target.value = '';\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const canvas = canvasRef.current;\r\n    const link = document.createElement('a');\r\n    link.download = 'canvas.png';\r\n    link.href = canvas.toDataURL();\r\n    link.click();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    saveState([], [], []);\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <header className=\"flex justify-between items-center p-4 bg-gray-100 border-b\">\r\n        <div className=\"text-xl font-bold\">MATTY</div>\r\n        <div className=\"flex gap-2\">{/* Social media icons */}</div>\r\n        <button className=\"px-4 py-2\">About Us</button>\r\n      </header>\r\n      <div className=\"flex gap-4 p-2 bg-gray-50 border-b\">\r\n        <button onClick={clearCanvas}>Clear All</button>\r\n        <button onClick={handleUndo} disabled={historyIndex === 0}>Undo</button>\r\n        <button onClick={handleRedo} disabled={historyIndex === history.length - 1}>Redo</button>\r\n      </div>\r\n      <div className=\"flex flex-1\">\r\n        <aside className=\"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\">\r\n          {/* Drawing Tools */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-2\">\r\n            <h3 className=\"font-semibold text-lg mb-3 border-b pb-2\">Drawing Tools</h3>\r\n            <div className=\"flex gap-2 mb-3\">\r\n              <button className={`w-full py-2 rounded ${drawMode && !eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`} onClick={() => { setDrawMode(true); setEraserMode(false); }}>Pencil</button>\r\n              <button className={`w-full py-2 rounded ${eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`} onClick={() => { setEraserMode(true); setDrawMode(false); }}>Eraser</button>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"block text-sm mb-1\">Pencil Color</label>\r\n              <input type=\"color\" value={pencilColor} onChange={e => setPencilColor(e.target.value)} className=\"w-8 h-8 p-0 border-0\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"block text-sm mb-1\">Brush Size</label>\r\n              <input type=\"range\" min={1} max={30} value={brushSize} onChange={e => setBrushSize(Number(e.target.value))} className=\"w-full\" />\r\n              <span className=\"text-xs\">{brushSize}px</span>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Eraser Size</label>\r\n              <input type=\"range\" min={5} max={50} value={eraserSize} onChange={e => setEraserSize(Number(e.target.value))} className=\"w-full\" />\r\n              <span className=\"text-xs\">{eraserSize}px</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Shape Tools */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-2\">\r\n            <h3 className=\"font-semibold text-lg mb-3 border-b pb-2\">Shapes</h3>\r\n            <label className=\"block text-sm mb-1\">Shape</label>\r\n            <select value={selectedShape} onChange={e => { setSelectedShape(e.target.value); setDrawMode(false); setEraserMode(false); }} className=\"mb-3 p-1 border rounded w-full\">\r\n              <option value=\"rectangle\">Rectangle</option>\r\n              <option value=\"square\">Square</option>\r\n              <option value=\"circle\">Circle</option>\r\n              <option value=\"oval\">Oval</option>\r\n              <option value=\"triangle\">Triangle</option>\r\n              <option value=\"parallelogram\">Parallelogram</option>\r\n              <option value=\"rhombus\">Rhombus</option>\r\n              <option value=\"trapezoid\">Trapezoid</option>\r\n              <option value=\"kite\">Kite</option>\r\n              <option value=\"pentagon\">Pentagon</option>\r\n              <option value=\"hexagon\">Hexagon</option>\r\n              <option value=\"heptagon\">Heptagon</option>\r\n              <option value=\"octagon\">Octagon</option>\r\n              <option value=\"nonagon\">Nonagon</option>\r\n              <option value=\"decagon\">Decagon</option>\r\n            </select>\r\n            <label className=\"block text-sm mb-1\">Shape Color</label>\r\n            <input type=\"color\" value={shapeColor} onChange={handleShapeColorChange} className=\"w-8 h-8 p-0 border-0\" />\r\n            <button className=\"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleAddShape}>Add Shape</button>\r\n          </div>\r\n\r\n          {/* Text Tools */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-2\">\r\n            <h3 className=\"font-semibold text-lg mb-3 border-b pb-2\">Text</h3>\r\n            <label className=\"block text-sm mb-1\">Text Color</label>\r\n            <input type=\"color\" value={textColor} onChange={handleTextColorChange} className=\"w-8 h-8 p-0 border-0\" />\r\n            <button className=\"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleAddText}>Add Text</button>\r\n          </div>\r\n\r\n          {/* Image & Download */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n            <button className=\"w-full mb-2 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleUploadImage}>Upload Image</button>\r\n            <button className=\"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleDownload}>Download</button>\r\n            <input type=\"file\" accept=\"image/*\" ref={fileInputRef} style={{ display: 'none' }} onChange={handleFileChange} />\r\n          </div>\r\n        </aside>\r\n        <main className=\"flex-1 flex items-center justify-center\">\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={1000}\r\n            height={700}\r\n            style={{ background: '#fff', border: '1px solid #eee', marginTop: '-250px' }}\r\n            onMouseDown={handleCanvasMouseDown}\r\n            onMouseMove={handleCanvasMouseMove}\r\n            onMouseUp={handleCanvasMouseUp}\r\n            onMouseLeave={handleCanvasMouseUp}\r\n          />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}