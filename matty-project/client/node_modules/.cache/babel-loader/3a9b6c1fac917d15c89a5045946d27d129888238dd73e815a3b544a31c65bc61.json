{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst initialState = {\n  shapes: [],\n  texts: [],\n  lines: []\n};\nconst defaultShapeProps = {\n  rotation: 0,\n  scale: 1,\n  width: 120,\n  height: 80\n};\nconst defaultTextProps = {\n  rotation: 0,\n  scale: 1,\n  fontSize: 24\n};\nconst defaultImageProps = {\n  rotation: 0,\n  scale: 1,\n  w: 200,\n  h: 200\n};\nconst CanvasEditor = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n  const [isRotating, setIsRotating] = useState(false);\n  const [history, setHistory] = useState([initialState]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const drawingPointsRef = useRef([]);\n  const rotateStartAngleRef = useRef(0);\n  const rotateStartMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const resizeStartMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const resizeStartPropsRef = useRef(null);\n  const {\n    shapes,\n    texts,\n    lines\n  } = history[historyIndex];\n\n  // Helper: get center of object\n  function getCenter(obj) {\n    if (obj.type === 'image') {\n      return {\n        x: obj.x + obj.w / 2,\n        y: obj.y + obj.h / 2\n      };\n    } else if (obj.text) {\n      return {\n        x: obj.x,\n        y: obj.y\n      };\n    } else {\n      return {\n        x: obj.x + (obj.width || 120) / 2,\n        y: obj.y + (obj.height || 80) / 2\n      };\n    }\n  }\n\n  // Draw handles for resize/rotate\n  function drawHandles(ctx, obj) {\n    const center = getCenter(obj);\n    ctx.save();\n    ctx.translate(center.x, center.y);\n    ctx.rotate(obj.rotation || 0);\n    ctx.scale(obj.scale || 1, obj.scale || 1);\n\n    // Resize handle (bottom right)\n    ctx.beginPath();\n    ctx.arc((obj.width || obj.w || 120) / 2, (obj.height || obj.h || 80) / 2, 8, 0, 2 * Math.PI);\n    ctx.fillStyle = '#4f46e5';\n    ctx.fill();\n\n    // Rotate handle (top center, offset)\n    ctx.beginPath();\n    ctx.arc(0, -((obj.height || obj.h || 80) / 2) - 30, 8, 0, 2 * Math.PI);\n    ctx.fillStyle = '#f59e42';\n    ctx.fill();\n    ctx.restore();\n  }\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 2;\n    ctx.lineCap = 'round';\n    shapes.forEach((shape, idx) => {\n      ctx.save();\n      const center = getCenter(shape);\n      ctx.translate(center.x, center.y);\n      ctx.rotate(shape.rotation || 0);\n      ctx.scale(shape.scale || 1, shape.scale || 1);\n      ctx.fillStyle = shape.color;\n      ctx.strokeStyle = shape.color;\n      if (shape.type === 'rectangle') {\n        ctx.fillRect(-(shape.width || 120) / 2, -(shape.height || 80) / 2, shape.width || 120, shape.height || 80);\n      } else if (shape.type === 'square') {\n        ctx.fillRect(-50, -50, 100, 100);\n      } else if (shape.type === 'circle') {\n        ctx.beginPath();\n        ctx.arc(0, 0, 50, 0, 2 * Math.PI);\n        ctx.fill();\n      } else if (shape.type === 'oval') {\n        ctx.save();\n        ctx.scale(1.5, 1);\n        ctx.beginPath();\n        ctx.arc(0, 0, 40, 0, 2 * Math.PI);\n        ctx.restore();\n        ctx.fill();\n      } else if (shape.type === 'triangle') {\n        ctx.beginPath();\n        ctx.moveTo(-60, 40);\n        ctx.lineTo(60, 40);\n        ctx.lineTo(0, -40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'parallelogram') {\n        ctx.beginPath();\n        ctx.moveTo(-40, 40);\n        ctx.lineTo(80, 40);\n        ctx.lineTo(60, -40);\n        ctx.lineTo(-60, -40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'rhombus') {\n        ctx.beginPath();\n        ctx.moveTo(0, -40);\n        ctx.lineTo(60, 0);\n        ctx.lineTo(0, 40);\n        ctx.lineTo(-60, 0);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'trapezoid') {\n        ctx.beginPath();\n        ctx.moveTo(-40, 40);\n        ctx.lineTo(40, 40);\n        ctx.lineTo(20, -40);\n        ctx.lineTo(-20, -40);\n        ctx.closePath();\n        ctx.fill();\n      } else if (shape.type === 'kite') {\n        ctx.beginPath();\n        ctx.moveTo(0, -40);\n        ctx.lineTo(40, 0);\n        ctx.lineTo(0, 40);\n        ctx.lineTo(-40, 0);\n        ctx.closePath();\n        ctx.fill();\n      } else if (['pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'].includes(shape.type)) {\n        const sides = {\n          pentagon: 5,\n          hexagon: 6,\n          heptagon: 7,\n          octagon: 8,\n          nonagon: 9,\n          decagon: 10\n        }[shape.type];\n        drawPolygon(ctx, 0, 0, 50, sides, shape.color);\n      }\n      if (idx === selectedShapeIndex) {\n        drawHandles(ctx, shape);\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n    texts.forEach((t, idx) => {\n      ctx.save();\n      ctx.translate(t.x, t.y);\n      ctx.rotate(t.rotation || 0);\n      ctx.scale(t.scale || 1, t.scale || 1);\n      ctx.font = `${t.fontSize || 24}px Arial`;\n      ctx.fillStyle = t.color;\n      ctx.fillText(t.text, 0, 0);\n      if (idx === selectedTextIndex) {\n        drawHandles(ctx, {\n          ...t,\n          width: ctx.measureText(t.text).width,\n          height: t.fontSize || 24\n        });\n      }\n      ctx.restore();\n    });\n    shapes.forEach((shape, idx) => {\n      if (shape.type === 'image') {\n        ctx.save();\n        const center = getCenter(shape);\n        ctx.translate(center.x, center.y);\n        ctx.rotate(shape.rotation || 0);\n        ctx.scale(shape.scale || 1, shape.scale || 1);\n        const img = new window.Image();\n        img.src = shape.src;\n        img.onload = () => {\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\n          if (idx === selectedImageIndex) {\n            drawHandles(ctx, shape);\n          }\n        };\n        if (img.complete) {\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\n          if (idx === selectedImageIndex) {\n            drawHandles(ctx, shape);\n          }\n        }\n        ctx.restore();\n      }\n    });\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex, selectedImageIndex]);\n\n  // Mouse logic for selecting, dragging, resizing, rotating\n  const handleCanvasMouseDown = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    // Check for text handles\n    for (let i = texts.length - 1; i >= 0; i--) {\n      const t = texts[i];\n      const center = getCenter(t);\n      const dx = mouseX - center.x;\n      const dy = mouseY - center.y;\n      // Rotate handle\n      if (Math.abs(dx) < 20 && Math.abs(dy + (t.fontSize || 24) / 2 + 30) < 10) {\n        setSelectedTextIndex(i);\n        setIsRotating(true);\n        rotateStartAngleRef.current = t.rotation || 0;\n        rotateStartMouseRef.current = {\n          x: mouseX,\n          y: mouseY\n        };\n        return;\n      }\n      // Resize handle\n      if (Math.abs(dx - ctx.measureText(t.text).width / 2) < 10 && Math.abs(dy - (t.fontSize || 24) / 2) < 10) {\n        setSelectedTextIndex(i);\n        setIsResizing(true);\n        resizeStartMouseRef.current = {\n          x: mouseX,\n          y: mouseY\n        };\n        resizeStartPropsRef.current = {\n          ...t\n        };\n        return;\n      }\n      // Text selection\n      ctx.font = `${t.fontSize || 24}px Arial`;\n      const width = ctx.measureText(t.text).width;\n      if (mouseX >= t.x - 2 && mouseX <= t.x + width + 2 && mouseY >= t.y - (t.fontSize || 24) && mouseY <= t.y + 4) {\n        setSelectedTextIndex(i);\n        setSelectedShapeIndex(null);\n        setSelectedImageIndex(null);\n        setDragOffset({\n          x: mouseX - t.x,\n          y: mouseY - t.y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    // Check for shape handles\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      const shape = shapes[i];\n      const center = getCenter(shape);\n      const dx = mouseX - center.x;\n      const dy = mouseY - center.y;\n      // Rotate handle\n      if (Math.abs(dx) < 20 && Math.abs(dy + (shape.height || shape.h || 80) / 2 + 30) < 10) {\n        setSelectedShapeIndex(i);\n        setIsRotating(true);\n        rotateStartAngleRef.current = shape.rotation || 0;\n        rotateStartMouseRef.current = {\n          x: mouseX,\n          y: mouseY\n        };\n        return;\n      }\n      // Resize handle\n      if (Math.abs(dx - (shape.width || shape.w || 120) / 2) < 10 && Math.abs(dy - (shape.height || shape.h || 80) / 2) < 10) {\n        setSelectedShapeIndex(i);\n        setIsResizing(true);\n        resizeStartMouseRef.current = {\n          x: mouseX,\n          y: mouseY\n        };\n        resizeStartPropsRef.current = {\n          ...shape\n        };\n        return;\n      }\n      // Shape selection\n      let w = shape.width || shape.w || 120,\n        h = shape.height || shape.h || 80;\n      if (mouseX >= shape.x && mouseX <= shape.x + w && mouseY >= shape.y && mouseY <= shape.y + h) {\n        setSelectedShapeIndex(i);\n        setSelectedTextIndex(null);\n        setSelectedImageIndex(null);\n        setDragOffset({\n          x: mouseX - shape.x,\n          y: mouseY - shape.y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    // Check for image handles\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      const shape = shapes[i];\n      if (shape.type !== 'image') continue;\n      const center = getCenter(shape);\n      const dx = mouseX - center.x;\n      const dy = mouseY - center.y;\n      // Rotate handle\n      if (Math.abs(dx) < 20 && Math.abs(dy + (shape.h || 200) / 2 + 30) < 10) {\n        setSelectedImageIndex(i);\n        setIsRotating(true);\n        rotateStartAngleRef.current = shape.rotation || 0;\n        rotateStartMouseRef.current = {\n          x: mouseX,\n          y: mouseY\n        };\n        return;\n      }\n      // Resize handle\n      if (Math.abs(dx - (shape.w || 200) / 2) < 10 && Math.abs(dy - (shape.h || 200) / 2) < 10) {\n        setSelectedImageIndex(i);\n        setIsResizing(true);\n        resizeStartMouseRef.current = {\n          x: mouseX,\n          y: mouseY\n        };\n        resizeStartPropsRef.current = {\n          ...shape\n        };\n        return;\n      }\n      // Image selection\n      let w = shape.w || 200,\n        h = shape.h || 200;\n      if (mouseX >= shape.x && mouseX <= shape.x + w && mouseY >= shape.y && mouseY <= shape.y + h) {\n        setSelectedImageIndex(i);\n        setSelectedShapeIndex(null);\n        setSelectedTextIndex(null);\n        setDragOffset({\n          x: mouseX - shape.x,\n          y: mouseY - shape.y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    if (drawMode || eraserMode) {\n      setIsDrawing(true);\n      drawingPointsRef.current = [[mouseX, mouseY]];\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    const update = (arr, idx, props) => arr.map((o, i) => i === idx ? {\n      ...o,\n      ...props\n    } : o);\n    if (isRotating) {\n      if (selectedShapeIndex !== null) {\n        const shape = shapes[selectedShapeIndex];\n        const center = getCenter(shape);\n        const angle = Math.atan2(mouseY - center.y, mouseX - center.x);\n        const newShapes = update(shapes, selectedShapeIndex, {\n          rotation: angle\n        });\n        setHistory(h => {\n          const newHistory = h.slice(0, historyIndex + 1);\n          newHistory[historyIndex] = {\n            shapes: newShapes,\n            texts,\n            lines\n          };\n          return newHistory;\n        });\n      }\n      if (selectedTextIndex !== null) {\n        const t = texts[selectedTextIndex];\n        const center = getCenter(t);\n        const angle = Math.atan2(mouseY - center.y, mouseX - center.x);\n        const newTexts = update(texts, selectedTextIndex, {\n          rotation: angle\n        });\n        setHistory(h => {\n          const newHistory = h.slice(0, historyIndex + 1);\n          newHistory[historyIndex] = {\n            shapes,\n            texts: newTexts,\n            lines\n          };\n          return newHistory;\n        });\n      }\n      if (selectedImageIndex !== null) {\n        const shape = shapes[selectedImageIndex];\n        const center = getCenter(shape);\n        const angle = Math.atan2(mouseY - center.y, mouseX - center.x);\n        const newShapes = update(shapes, selectedImageIndex, {\n          rotation: angle\n        });\n        setHistory(h => {\n          const newHistory = h.slice(0, historyIndex + 1);\n          newHistory[historyIndex] = {\n            shapes: newShapes,\n            texts,\n            lines\n          };\n          return newHistory;\n        });\n      }\n      return;\n    }\n    if (isResizing) {\n      if (selectedShapeIndex !== null) {\n        const shape = shapes[selectedShapeIndex];\n        const center = getCenter(shape);\n        const dx = mouseX - center.x;\n        const dy = mouseY - center.y;\n        const scale = Math.max(0.2, Math.sqrt(dx * dx + dy * dy) / 60);\n        const newShapes = update(shapes, selectedShapeIndex, {\n          scale\n        });\n        setHistory(h => {\n          const newHistory = h.slice(0, historyIndex + 1);\n          newHistory[historyIndex] = {\n            shapes: newShapes,\n            texts,\n            lines\n          };\n          return newHistory;\n        });\n      }\n      if (selectedTextIndex !== null) {\n        const t = texts[selectedTextIndex];\n        const center = getCenter(t);\n        const dx = mouseX - center.x;\n        const dy = mouseY - center.y;\n        const scale = Math.max(0.2, Math.sqrt(dx * dx + dy * dy) / 60);\n        const newTexts = update(texts, selectedTextIndex, {\n          scale\n        });\n        setHistory(h => {\n          const newHistory = h.slice(0, historyIndex + 1);\n          newHistory[historyIndex] = {\n            shapes,\n            texts: newTexts,\n            lines\n          };\n          return newHistory;\n        });\n      }\n      if (selectedImageIndex !== null) {\n        const shape = shapes[selectedImageIndex];\n        const center = getCenter(shape);\n        const dx = mouseX - center.x;\n        const dy = mouseY - center.y;\n        const scale = Math.max(0.2, Math.sqrt(dx * dx + dy * dy) / 60);\n        const newShapes = update(shapes, selectedImageIndex, {\n          scale\n        });\n        setHistory(h => {\n          const newHistory = h.slice(0, historyIndex + 1);\n          newHistory[historyIndex] = {\n            shapes: newShapes,\n            texts,\n            lines\n          };\n          return newHistory;\n        });\n      }\n      return;\n    }\n    if (isDrawing && (drawMode || eraserMode)) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const points = drawingPointsRef.current;\n      points.push([mouseX, mouseY]);\n      ctx.beginPath();\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\n      ctx.lineTo(mouseX, mouseY);\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\n      ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\n      ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n      return;\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : t);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes,\n          texts: newTexts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes: newShapes,\n          texts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n    if (isDragging && selectedImageIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedImageIndex ? {\n        ...s,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes: newShapes,\n          texts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    if (isDrawing && (drawMode || eraserMode)) {\n      setIsDrawing(false);\n      const newLine = {\n        points: drawingPointsRef.current,\n        color: eraserMode ? 'eraser' : pencilColor,\n        size: eraserMode ? eraserSize : brushSize,\n        mode: eraserMode ? 'eraser' : 'draw'\n      };\n      saveState(shapes, texts, [...lines, newLine]);\n      drawingPointsRef.current = [];\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    if (isDragging && selectedImageIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    setIsDragging(false);\n    setIsRotating(false);\n    setIsResizing(false);\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n    setSelectedImageIndex(null);\n  };\n  const saveState = (newShapes, newTexts, newLines) => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      shapes: JSON.parse(JSON.stringify(newShapes)),\n      texts: JSON.parse(JSON.stringify(newTexts)),\n      lines: JSON.parse(JSON.stringify(newLines))\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n      setSelectedImageIndex(null);\n    }\n  };\n  const handleRedo = () => {\n    if (historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n      setSelectedImageIndex(null);\n    }\n  };\n  const handleAddShape = () => {\n    let newShape = {\n      type: selectedShape,\n      x: 300,\n      y: 100,\n      color: shapeColor,\n      ...defaultShapeProps\n    };\n    saveState([...shapes, newShape], texts, lines);\n  };\n  const handleAddText = () => {\n    const text = prompt('Enter text to add:');\n    if (!text) return;\n    saveState(shapes, [...texts, {\n      text,\n      x: 100,\n      y: 400,\n      color: textColor,\n      ...defaultTextProps\n    }], lines);\n  };\n  const handleTextColorChange = e => {\n    setTextColor(e.target.value);\n    if (selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        color: e.target.value\n      } : t);\n      saveState(shapes, newTexts, lines);\n    }\n  };\n  const handleShapeColorChange = e => {\n    setShapeColor(e.target.value);\n    if (selectedShapeIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        color: e.target.value\n      } : s);\n      saveState(newShapes, texts, lines);\n    }\n  };\n  const handleUploadImage = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      const newShape = {\n        type: 'image',\n        x: 50,\n        y: 50,\n        src: event.target.result,\n        ...defaultImageProps\n      };\n      saveState([...shapes, newShape], texts, lines);\n    };\n    reader.readAsDataURL(file);\n    e.target.value = '';\n  };\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const link = document.createElement('a');\n    link.download = 'canvas.png';\n    link.href = canvas.toDataURL();\n    link.click();\n  };\n  const clearCanvas = () => {\n    saveState([], [], []);\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n    setSelectedImageIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center p-4 bg-gray-100 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-bold\",\n        children: \"MATTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2\",\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        disabled: historyIndex === 0,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedo,\n        disabled: historyIndex === history.length - 1,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-3 border-b pb-2\",\n            children: \"Drawing Tools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `w-full py-2 rounded ${drawMode && !eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`,\n              onClick: () => {\n                setDrawMode(true);\n                setEraserMode(false);\n              },\n              children: \"Pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `w-full py-2 rounded ${eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`,\n              onClick: () => {\n                setEraserMode(true);\n                setDrawMode(false);\n              },\n              children: \"Eraser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm mb-1\",\n              children: \"Pencil Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: pencilColor,\n              onChange: e => setPencilColor(e.target.value),\n              className: \"w-8 h-8 p-0 border-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm mb-1\",\n              children: \"Brush Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: 1,\n              max: 30,\n              value: brushSize,\n              onChange: e => setBrushSize(Number(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs\",\n              children: [brushSize, \"px\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm mb-1\",\n              children: \"Eraser Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: 5,\n              max: 50,\n              value: eraserSize,\n              onChange: e => setEraserSize(Number(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs\",\n              children: [eraserSize, \"px\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-3 border-b pb-2\",\n            children: \"Shapes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Shape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedShape,\n            onChange: e => {\n              setSelectedShape(e.target.value);\n              setDrawMode(false);\n              setEraserMode(false);\n            },\n            className: \"mb-3 p-1 border rounded w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rectangle\",\n              children: \"Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"square\",\n              children: \"Square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"circle\",\n              children: \"Circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"oval\",\n              children: \"Oval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"triangle\",\n              children: \"Triangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"parallelogram\",\n              children: \"Parallelogram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rhombus\",\n              children: \"Rhombus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"trapezoid\",\n              children: \"Trapezoid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"kite\",\n              children: \"Kite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pentagon\",\n              children: \"Pentagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hexagon\",\n              children: \"Hexagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"heptagon\",\n              children: \"Heptagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"octagon\",\n              children: \"Octagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nonagon\",\n              children: \"Nonagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"decagon\",\n              children: \"Decagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Shape Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: shapeColor,\n            onChange: handleShapeColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleAddShape,\n            children: \"Add Shape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-3 border-b pb-2\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Text Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: textColor,\n            onChange: handleTextColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleAddText,\n            children: \"Add Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mb-2 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleUploadImage,\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\",\n            onClick: handleDownload,\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 1000,\n          height: 700,\n          style: {\n            background: '#fff',\n            border: '1px solid #eee',\n            marginTop: '-250px'\n          },\n          onMouseDown: handleCanvasMouseDown,\n          onMouseMove: handleCanvasMouseMove,\n          onMouseUp: handleCanvasMouseUp,\n          onMouseLeave: handleCanvasMouseUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 633,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"n/yzPXaY2ZhbZfbXNAQbUxPD0CA=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","initialState","shapes","texts","lines","defaultShapeProps","rotation","scale","width","height","defaultTextProps","fontSize","defaultImageProps","w","h","CanvasEditor","_s","canvasRef","fileInputRef","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedTextIndex","setSelectedTextIndex","selectedShapeIndex","setSelectedShapeIndex","selectedImageIndex","setSelectedImageIndex","isDragging","setIsDragging","isDrawing","setIsDrawing","isResizing","setIsResizing","isRotating","setIsRotating","history","setHistory","historyIndex","setHistoryIndex","drawingPointsRef","rotateStartAngleRef","rotateStartMouseRef","resizeStartMouseRef","resizeStartPropsRef","getCenter","obj","type","text","drawHandles","center","save","translate","rotate","arc","restore","canvas","current","getContext","clearRect","lineWidth","lineCap","forEach","shape","idx","strokeStyle","fillRect","includes","pentagon","hexagon","heptagon","octagon","nonagon","decagon","line","mode","size","globalCompositeOperation","points","stroke","t","font","fillText","measureText","img","window","Image","src","onload","drawImage","complete","handleCanvasMouseDown","e","mouseX","nativeEvent","offsetX","mouseY","offsetY","length","abs","handleCanvasMouseMove","update","arr","props","map","o","atan2","newShapes","newHistory","slice","newTexts","max","sqrt","push","s","handleCanvasMouseUp","newLine","saveState","newLines","JSON","parse","stringify","handleUndo","handleRedo","handleAddShape","newShape","handleAddText","prompt","handleTextColorChange","target","value","handleShapeColorChange","handleUploadImage","click","handleFileChange","file","files","reader","FileReader","event","result","readAsDataURL","handleDownload","link","document","createElement","download","href","toDataURL","clearCanvas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","min","Number","accept","ref","style","display","background","border","marginTop","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst initialState = {\r\n  shapes: [],\r\n  texts: [],\r\n  lines: []\r\n};\r\n\r\nconst defaultShapeProps = {\r\n  rotation: 0,\r\n  scale: 1,\r\n  width: 120,\r\n  height: 80\r\n};\r\n\r\nconst defaultTextProps = {\r\n  rotation: 0,\r\n  scale: 1,\r\n  fontSize: 24\r\n};\r\n\r\nconst defaultImageProps = {\r\n  rotation: 0,\r\n  scale: 1,\r\n  w: 200,\r\n  h: 200\r\n};\r\n\r\nconst CanvasEditor = () => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\r\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\r\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [history, setHistory] = useState([initialState]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const drawingPointsRef = useRef([]);\r\n  const rotateStartAngleRef = useRef(0);\r\n  const rotateStartMouseRef = useRef({ x: 0, y: 0 });\r\n  const resizeStartMouseRef = useRef({ x: 0, y: 0 });\r\n  const resizeStartPropsRef = useRef(null);\r\n\r\n  const { shapes, texts, lines } = history[historyIndex];\r\n\r\n  // Helper: get center of object\r\n  function getCenter(obj) {\r\n    if (obj.type === 'image') {\r\n      return { x: obj.x + obj.w / 2, y: obj.y + obj.h / 2 };\r\n    } else if (obj.text) {\r\n      return { x: obj.x, y: obj.y };\r\n    } else {\r\n      return { x: obj.x + (obj.width || 120) / 2, y: obj.y + (obj.height || 80) / 2 };\r\n    }\r\n  }\r\n\r\n  // Draw handles for resize/rotate\r\n  function drawHandles(ctx, obj) {\r\n    const center = getCenter(obj);\r\n    ctx.save();\r\n    ctx.translate(center.x, center.y);\r\n    ctx.rotate(obj.rotation || 0);\r\n    ctx.scale(obj.scale || 1, obj.scale || 1);\r\n\r\n    // Resize handle (bottom right)\r\n    ctx.beginPath();\r\n    ctx.arc((obj.width || obj.w || 120) / 2, (obj.height || obj.h || 80) / 2, 8, 0, 2 * Math.PI);\r\n    ctx.fillStyle = '#4f46e5';\r\n    ctx.fill();\r\n\r\n    // Rotate handle (top center, offset)\r\n    ctx.beginPath();\r\n    ctx.arc(0, -((obj.height || obj.h || 80) / 2) - 30, 8, 0, 2 * Math.PI);\r\n    ctx.fillStyle = '#f59e42';\r\n    ctx.fill();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineWidth = 2;\r\n    ctx.lineCap = 'round';\r\n\r\n    shapes.forEach((shape, idx) => {\r\n      ctx.save();\r\n      const center = getCenter(shape);\r\n      ctx.translate(center.x, center.y);\r\n      ctx.rotate(shape.rotation || 0);\r\n      ctx.scale(shape.scale || 1, shape.scale || 1);\r\n\r\n      ctx.fillStyle = shape.color;\r\n      ctx.strokeStyle = shape.color;\r\n      if (shape.type === 'rectangle') {\r\n        ctx.fillRect(-(shape.width || 120) / 2, -(shape.height || 80) / 2, shape.width || 120, shape.height || 80);\r\n      } else if (shape.type === 'square') {\r\n        ctx.fillRect(-50, -50, 100, 100);\r\n      } else if (shape.type === 'circle') {\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 50, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      } else if (shape.type === 'oval') {\r\n        ctx.save();\r\n        ctx.scale(1.5, 1);\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 40, 0, 2 * Math.PI);\r\n        ctx.restore();\r\n        ctx.fill();\r\n      } else if (shape.type === 'triangle') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(-60, 40);\r\n        ctx.lineTo(60, 40);\r\n        ctx.lineTo(0, -40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'parallelogram') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(-40, 40);\r\n        ctx.lineTo(80, 40);\r\n        ctx.lineTo(60, -40);\r\n        ctx.lineTo(-60, -40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'rhombus') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, -40);\r\n        ctx.lineTo(60, 0);\r\n        ctx.lineTo(0, 40);\r\n        ctx.lineTo(-60, 0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'trapezoid') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(-40, 40);\r\n        ctx.lineTo(40, 40);\r\n        ctx.lineTo(20, -40);\r\n        ctx.lineTo(-20, -40);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if (shape.type === 'kite') {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, -40);\r\n        ctx.lineTo(40, 0);\r\n        ctx.lineTo(0, 40);\r\n        ctx.lineTo(-40, 0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      } else if ([\r\n        'pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'\r\n      ].includes(shape.type)) {\r\n        const sides = {\r\n          pentagon: 5, hexagon: 6, heptagon: 7, octagon: 8, nonagon: 9, decagon: 10\r\n        }[shape.type];\r\n        drawPolygon(ctx, 0, 0, 50, sides, shape.color);\r\n      }\r\n      if (idx === selectedShapeIndex) {\r\n        drawHandles(ctx, shape);\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || '#333';\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : 'source-over';\r\n      line.points.forEach(([x, y], i) => {\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n    });\r\n\r\n    texts.forEach((t, idx) => {\r\n      ctx.save();\r\n      ctx.translate(t.x, t.y);\r\n      ctx.rotate(t.rotation || 0);\r\n      ctx.scale(t.scale || 1, t.scale || 1);\r\n      ctx.font = `${t.fontSize || 24}px Arial`;\r\n      ctx.fillStyle = t.color;\r\n      ctx.fillText(t.text, 0, 0);\r\n      if (idx === selectedTextIndex) {\r\n        drawHandles(ctx, { ...t, width: ctx.measureText(t.text).width, height: t.fontSize || 24 });\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    shapes.forEach((shape, idx) => {\r\n      if (shape.type === 'image') {\r\n        ctx.save();\r\n        const center = getCenter(shape);\r\n        ctx.translate(center.x, center.y);\r\n        ctx.rotate(shape.rotation || 0);\r\n        ctx.scale(shape.scale || 1, shape.scale || 1);\r\n        const img = new window.Image();\r\n        img.src = shape.src;\r\n        img.onload = () => {\r\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\r\n          if (idx === selectedImageIndex) {\r\n            drawHandles(ctx, shape);\r\n          }\r\n        };\r\n        if (img.complete) {\r\n          ctx.drawImage(img, -(shape.w || 200) / 2, -(shape.h || 200) / 2, shape.w || 200, shape.h || 200);\r\n          if (idx === selectedImageIndex) {\r\n            drawHandles(ctx, shape);\r\n          }\r\n        }\r\n        ctx.restore();\r\n      }\r\n    });\r\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex, selectedImageIndex]);\r\n\r\n  // Mouse logic for selecting, dragging, resizing, rotating\r\n  const handleCanvasMouseDown = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    // Check for text handles\r\n    for (let i = texts.length - 1; i >= 0; i--) {\r\n      const t = texts[i];\r\n      const center = getCenter(t);\r\n      const dx = mouseX - center.x;\r\n      const dy = mouseY - center.y;\r\n      // Rotate handle\r\n      if (Math.abs(dx) < 20 && Math.abs(dy + ((t.fontSize || 24) / 2) + 30) < 10) {\r\n        setSelectedTextIndex(i);\r\n        setIsRotating(true);\r\n        rotateStartAngleRef.current = t.rotation || 0;\r\n        rotateStartMouseRef.current = { x: mouseX, y: mouseY };\r\n        return;\r\n      }\r\n      // Resize handle\r\n      if (Math.abs(dx - (ctx.measureText(t.text).width / 2)) < 10 && Math.abs(dy - ((t.fontSize || 24) / 2)) < 10) {\r\n        setSelectedTextIndex(i);\r\n        setIsResizing(true);\r\n        resizeStartMouseRef.current = { x: mouseX, y: mouseY };\r\n        resizeStartPropsRef.current = { ...t };\r\n        return;\r\n      }\r\n      // Text selection\r\n      ctx.font = `${t.fontSize || 24}px Arial`;\r\n      const width = ctx.measureText(t.text).width;\r\n      if (\r\n        mouseX >= t.x - 2 &&\r\n        mouseX <= t.x + width + 2 &&\r\n        mouseY >= t.y - (t.fontSize || 24) &&\r\n        mouseY <= t.y + 4\r\n      ) {\r\n        setSelectedTextIndex(i);\r\n        setSelectedShapeIndex(null);\r\n        setSelectedImageIndex(null);\r\n        setDragOffset({ x: mouseX - t.x, y: mouseY - t.y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    // Check for shape handles\r\n    for (let i = shapes.length - 1; i >= 0; i--) {\r\n      const shape = shapes[i];\r\n      const center = getCenter(shape);\r\n      const dx = mouseX - center.x;\r\n      const dy = mouseY - center.y;\r\n      // Rotate handle\r\n      if (Math.abs(dx) < 20 && Math.abs(dy + ((shape.height || shape.h || 80) / 2) + 30) < 10) {\r\n        setSelectedShapeIndex(i);\r\n        setIsRotating(true);\r\n        rotateStartAngleRef.current = shape.rotation || 0;\r\n        rotateStartMouseRef.current = { x: mouseX, y: mouseY };\r\n        return;\r\n      }\r\n      // Resize handle\r\n      if (Math.abs(dx - ((shape.width || shape.w || 120) / 2)) < 10 && Math.abs(dy - ((shape.height || shape.h || 80) / 2)) < 10) {\r\n        setSelectedShapeIndex(i);\r\n        setIsResizing(true);\r\n        resizeStartMouseRef.current = { x: mouseX, y: mouseY };\r\n        resizeStartPropsRef.current = { ...shape };\r\n        return;\r\n      }\r\n      // Shape selection\r\n      let w = shape.width || shape.w || 120, h = shape.height || shape.h || 80;\r\n      if (\r\n        mouseX >= shape.x &&\r\n        mouseX <= shape.x + w &&\r\n        mouseY >= shape.y &&\r\n        mouseY <= shape.y + h\r\n      ) {\r\n        setSelectedShapeIndex(i);\r\n        setSelectedTextIndex(null);\r\n        setSelectedImageIndex(null);\r\n        setDragOffset({ x: mouseX - shape.x, y: mouseY - shape.y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    // Check for image handles\r\n    for (let i = shapes.length - 1; i >= 0; i--) {\r\n      const shape = shapes[i];\r\n      if (shape.type !== 'image') continue;\r\n      const center = getCenter(shape);\r\n      const dx = mouseX - center.x;\r\n      const dy = mouseY - center.y;\r\n      // Rotate handle\r\n      if (Math.abs(dx) < 20 && Math.abs(dy + ((shape.h || 200) / 2) + 30) < 10) {\r\n        setSelectedImageIndex(i);\r\n        setIsRotating(true);\r\n        rotateStartAngleRef.current = shape.rotation || 0;\r\n        rotateStartMouseRef.current = { x: mouseX, y: mouseY };\r\n        return;\r\n      }\r\n      // Resize handle\r\n      if (Math.abs(dx - ((shape.w || 200) / 2)) < 10 && Math.abs(dy - ((shape.h || 200) / 2)) < 10) {\r\n        setSelectedImageIndex(i);\r\n        setIsResizing(true);\r\n        resizeStartMouseRef.current = { x: mouseX, y: mouseY };\r\n        resizeStartPropsRef.current = { ...shape };\r\n        return;\r\n      }\r\n      // Image selection\r\n      let w = shape.w || 200, h = shape.h || 200;\r\n      if (\r\n        mouseX >= shape.x &&\r\n        mouseX <= shape.x + w &&\r\n        mouseY >= shape.y &&\r\n        mouseY <= shape.y + h\r\n      ) {\r\n        setSelectedImageIndex(i);\r\n        setSelectedShapeIndex(null);\r\n        setSelectedTextIndex(null);\r\n        setDragOffset({ x: mouseX - shape.x, y: mouseY - shape.y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    if (drawMode || eraserMode) {\r\n      setIsDrawing(true);\r\n      drawingPointsRef.current = [[mouseX, mouseY]];\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    const update = (arr, idx, props) => arr.map((o, i) => i === idx ? { ...o, ...props } : o);\r\n\r\n    if (isRotating) {\r\n      if (selectedShapeIndex !== null) {\r\n        const shape = shapes[selectedShapeIndex];\r\n        const center = getCenter(shape);\r\n        const angle = Math.atan2(mouseY - center.y, mouseX - center.x);\r\n        const newShapes = update(shapes, selectedShapeIndex, { rotation: angle });\r\n        setHistory(h => {\r\n          const newHistory = h.slice(0, historyIndex + 1);\r\n          newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n          return newHistory;\r\n        });\r\n      }\r\n      if (selectedTextIndex !== null) {\r\n        const t = texts[selectedTextIndex];\r\n        const center = getCenter(t);\r\n        const angle = Math.atan2(mouseY - center.y, mouseX - center.x);\r\n        const newTexts = update(texts, selectedTextIndex, { rotation: angle });\r\n        setHistory(h => {\r\n          const newHistory = h.slice(0, historyIndex + 1);\r\n          newHistory[historyIndex] = { shapes, texts: newTexts, lines };\r\n          return newHistory;\r\n        });\r\n      }\r\n      if (selectedImageIndex !== null) {\r\n        const shape = shapes[selectedImageIndex];\r\n        const center = getCenter(shape);\r\n        const angle = Math.atan2(mouseY - center.y, mouseX - center.x);\r\n        const newShapes = update(shapes, selectedImageIndex, { rotation: angle });\r\n        setHistory(h => {\r\n          const newHistory = h.slice(0, historyIndex + 1);\r\n          newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n          return newHistory;\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    if (isResizing) {\r\n      if (selectedShapeIndex !== null) {\r\n        const shape = shapes[selectedShapeIndex];\r\n        const center = getCenter(shape);\r\n        const dx = mouseX - center.x;\r\n        const dy = mouseY - center.y;\r\n        const scale = Math.max(0.2, Math.sqrt(dx * dx + dy * dy) / 60);\r\n        const newShapes = update(shapes, selectedShapeIndex, { scale });\r\n        setHistory(h => {\r\n          const newHistory = h.slice(0, historyIndex + 1);\r\n          newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n          return newHistory;\r\n        });\r\n      }\r\n      if (selectedTextIndex !== null) {\r\n        const t = texts[selectedTextIndex];\r\n        const center = getCenter(t);\r\n        const dx = mouseX - center.x;\r\n        const dy = mouseY - center.y;\r\n        const scale = Math.max(0.2, Math.sqrt(dx * dx + dy * dy) / 60);\r\n        const newTexts = update(texts, selectedTextIndex, { scale });\r\n        setHistory(h => {\r\n          const newHistory = h.slice(0, historyIndex + 1);\r\n          newHistory[historyIndex] = { shapes, texts: newTexts, lines };\r\n          return newHistory;\r\n        });\r\n      }\r\n      if (selectedImageIndex !== null) {\r\n        const shape = shapes[selectedImageIndex];\r\n        const center = getCenter(shape);\r\n        const dx = mouseX - center.x;\r\n        const dy = mouseY - center.y;\r\n        const scale = Math.max(0.2, Math.sqrt(dx * dx + dy * dy) / 60);\r\n        const newShapes = update(shapes, selectedImageIndex, { scale });\r\n        setHistory(h => {\r\n          const newHistory = h.slice(0, historyIndex + 1);\r\n          newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n          return newHistory;\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    if (isDrawing && (drawMode || eraserMode)) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      const points = drawingPointsRef.current;\r\n      points.push([mouseX, mouseY]);\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\r\n      ctx.lineTo(mouseX, mouseY);\r\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\r\n      ctx.strokeStyle = eraserMode ? 'rgba(0,0,0,1)' : pencilColor;\r\n      ctx.globalCompositeOperation = eraserMode ? 'destination-out' : 'source-over';\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n      return;\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : t\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes, texts: newTexts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : s\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n    if (isDragging && selectedImageIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedImageIndex ? { ...s, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : s\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseUp = () => {\r\n    if (isDrawing && (drawMode || eraserMode)) {\r\n      setIsDrawing(false);\r\n      const newLine = {\r\n        points: drawingPointsRef.current,\r\n        color: eraserMode ? 'eraser' : pencilColor,\r\n        size: eraserMode ? eraserSize : brushSize,\r\n        mode: eraserMode ? 'eraser' : 'draw'\r\n      };\r\n      saveState(shapes, texts, [...lines, newLine]);\r\n      drawingPointsRef.current = [];\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    if (isDragging && selectedImageIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    setIsDragging(false);\r\n    setIsRotating(false);\r\n    setIsResizing(false);\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n    setSelectedImageIndex(null);\r\n  };\r\n\r\n  const saveState = (newShapes, newTexts, newLines) => {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      shapes: JSON.parse(JSON.stringify(newShapes)),\r\n      texts: JSON.parse(JSON.stringify(newTexts)),\r\n      lines: JSON.parse(JSON.stringify(newLines))\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (historyIndex > 0) {\r\n      setHistoryIndex(historyIndex - 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n      setSelectedImageIndex(null);\r\n    }\r\n  };\r\n  const handleRedo = () => {\r\n    if (historyIndex < history.length - 1) {\r\n      setHistoryIndex(historyIndex + 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n      setSelectedImageIndex(null);\r\n    }\r\n  };\r\n\r\n  const handleAddShape = () => {\r\n    let newShape = {\r\n      type: selectedShape,\r\n      x: 300,\r\n      y: 100,\r\n      color: shapeColor,\r\n      ...defaultShapeProps\r\n    };\r\n    saveState([...shapes, newShape], texts, lines);\r\n  };\r\n\r\n  const handleAddText = () => {\r\n    const text = prompt('Enter text to add:');\r\n    if (!text) return;\r\n    saveState(shapes, [...texts, { text, x: 100, y: 400, color: textColor, ...defaultTextProps }], lines);\r\n  };\r\n\r\n  const handleTextColorChange = (e) => {\r\n    setTextColor(e.target.value);\r\n    if (selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, color: e.target.value } : t\r\n      );\r\n      saveState(shapes, newTexts, lines);\r\n    }\r\n  };\r\n\r\n  const handleShapeColorChange = (e) => {\r\n    setShapeColor(e.target.value);\r\n    if (selectedShapeIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, color: e.target.value } : s\r\n      );\r\n      saveState(newShapes, texts, lines);\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      const newShape = {\r\n        type: 'image',\r\n        x: 50,\r\n        y: 50,\r\n        src: event.target.result,\r\n        ...defaultImageProps\r\n      };\r\n      saveState([...shapes, newShape], texts, lines);\r\n    };\r\n    reader.readAsDataURL(file);\r\n    e.target.value = '';\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const canvas = canvasRef.current;\r\n    const link = document.createElement('a');\r\n    link.download = 'canvas.png';\r\n    link.href = canvas.toDataURL();\r\n    link.click();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    saveState([], [], []);\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n    setSelectedImageIndex(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <header className=\"flex justify-between items-center p-4 bg-gray-100 border-b\">\r\n        <div className=\"text-xl font-bold\">MATTY</div>\r\n        <div className=\"flex gap-2\">{/* Social media icons */}</div>\r\n        <button className=\"px-4 py-2\">About Us</button>\r\n      </header>\r\n      <div className=\"flex gap-4 p-2 bg-gray-50 border-b\">\r\n        <button onClick={clearCanvas}>Clear All</button>\r\n        <button onClick={handleUndo} disabled={historyIndex === 0}>Undo</button>\r\n        <button onClick={handleRedo} disabled={historyIndex === history.length - 1}>Redo</button>\r\n      </div>\r\n      <div className=\"flex flex-1\">\r\n        <aside className=\"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\">\r\n          {/* Drawing Tools */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-2\">\r\n            <h3 className=\"font-semibold text-lg mb-3 border-b pb-2\">Drawing Tools</h3>\r\n            <div className=\"flex gap-2 mb-3\">\r\n              <button className={`w-full py-2 rounded ${drawMode && !eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`} onClick={() => { setDrawMode(true); setEraserMode(false); }}>Pencil</button>\r\n              <button className={`w-full py-2 rounded ${eraserMode ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`} onClick={() => { setEraserMode(true); setDrawMode(false); }}>Eraser</button>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"block text-sm mb-1\">Pencil Color</label>\r\n              <input type=\"color\" value={pencilColor} onChange={e => setPencilColor(e.target.value)} className=\"w-8 h-8 p-0 border-0\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"block text-sm mb-1\">Brush Size</label>\r\n              <input type=\"range\" min={1} max={30} value={brushSize} onChange={e => setBrushSize(Number(e.target.value))} className=\"w-full\" />\r\n              <span className=\"text-xs\">{brushSize}px</span>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Eraser Size</label>\r\n              <input type=\"range\" min={5} max={50} value={eraserSize} onChange={e => setEraserSize(Number(e.target.value))} className=\"w-full\" />\r\n              <span className=\"text-xs\">{eraserSize}px</span>\r\n            </div>\r\n          </div>\r\n          {/* Shape Tools */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-2\">\r\n            <h3 className=\"font-semibold text-lg mb-3 border-b pb-2\">Shapes</h3>\r\n            <label className=\"block text-sm mb-1\">Shape</label>\r\n            <select value={selectedShape} onChange={e => { setSelectedShape(e.target.value); setDrawMode(false); setEraserMode(false); }} className=\"mb-3 p-1 border rounded w-full\">\r\n              <option value=\"rectangle\">Rectangle</option>\r\n              <option value=\"square\">Square</option>\r\n              <option value=\"circle\">Circle</option>\r\n              <option value=\"oval\">Oval</option>\r\n              <option value=\"triangle\">Triangle</option>\r\n              <option value=\"parallelogram\">Parallelogram</option>\r\n              <option value=\"rhombus\">Rhombus</option>\r\n              <option value=\"trapezoid\">Trapezoid</option>\r\n              <option value=\"kite\">Kite</option>\r\n              <option value=\"pentagon\">Pentagon</option>\r\n              <option value=\"hexagon\">Hexagon</option>\r\n              <option value=\"heptagon\">Heptagon</option>\r\n              <option value=\"octagon\">Octagon</option>\r\n              <option value=\"nonagon\">Nonagon</option>\r\n              <option value=\"decagon\">Decagon</option>\r\n            </select>\r\n            <label className=\"block text-sm mb-1\">Shape Color</label>\r\n            <input type=\"color\" value={shapeColor} onChange={handleShapeColorChange} className=\"w-8 h-8 p-0 border-0\" />\r\n            <button className=\"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleAddShape}>Add Shape</button>\r\n          </div>\r\n          {/* Text Tools */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-2\">\r\n            <h3 className=\"font-semibold text-lg mb-3 border-b pb-2\">Text</h3>\r\n            <label className=\"block text-sm mb-1\">Text Color</label>\r\n            <input type=\"color\" value={textColor} onChange={handleTextColorChange} className=\"w-8 h-8 p-0 border-0\" />\r\n            <button className=\"w-full mt-3 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleAddText}>Add Text</button>\r\n          </div>\r\n          {/* Image & Download */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n            <button className=\"w-full mb-2 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleUploadImage}>Upload Image</button>\r\n            <button className=\"w-full py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={handleDownload}>Download</button>\r\n            <input type=\"file\" accept=\"image/*\" ref={fileInputRef} style={{ display: 'none' }} onChange={handleFileChange} />\r\n          </div>\r\n        </aside>\r\n        <main className=\"flex-1 flex items-center justify-center\">\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={1000}\r\n            height={700}\r\n            style={{ background: '#fff', border: '1px solid #eee', marginTop: '-250px' }}\r\n            onMouseDown={handleCanvasMouseDown}\r\n            onMouseMove={handleCanvasMouseMove}\r\n            onMouseUp={handleCanvasMouseUp}\r\n            onMouseLeave={handleCanvasMouseUp}\r\n          />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}