{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst HANDLE_SIZE = 16;\nlet nextId = 1;\nconst getDefaultSize = (type, text, ctx) => {\n  if (type === \"rectangle\") return {\n    w: 120,\n    h: 80\n  };\n  if (type === \"square\" || type === \"circle\") return {\n    w: 100,\n    h: 100\n  };\n  if (type === \"oval\") return {\n    w: 120,\n    h: 80\n  };\n  if (type === \"image\") return {\n    w: 200,\n    h: 200\n  };\n  if (type === \"text\") {\n    ctx.font = \"24px Arial\";\n    return {\n      w: ctx.measureText(text).width,\n      h: 32,\n      fontSize: 24\n    };\n  }\n  return {\n    w: 120,\n    h: 80\n  };\n};\nconst CanvasEditor = ({\n  initialData\n}) => {\n  _s();\n  var _initialData$jsonData, _initialData$jsonData2;\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [designName, setDesignName] = useState((initialData === null || initialData === void 0 ? void 0 : initialData.title) || \"\");\n  const [selectedShape, setSelectedShape] = useState(\"rectangle\");\n  const [shapeColor, setShapeColor] = useState(\"#4f46e5\");\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState(\"#111827\");\n  const [pencilColor, setPencilColor] = useState(\"#333\");\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedIdx, setSelectedIdx] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const drawingPointsRef = useRef([]);\n  const [history, setHistory] = useState([{\n    elements: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData = initialData.jsonData) === null || _initialData$jsonData === void 0 ? void 0 : _initialData$jsonData.elements) || [],\n    lines: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData2 = initialData.jsonData) === null || _initialData$jsonData2 === void 0 ? void 0 : _initialData$jsonData2.lines) || [],\n    title: (initialData === null || initialData === void 0 ? void 0 : initialData.title) || \"\"\n  }]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const [imageCache, setImageCache] = useState({});\n  const {\n    elements,\n    lines,\n    title\n  } = history[historyIndex];\n  useEffect(() => {\n    setDesignName(title || \"\");\n  }, [title]);\n  useEffect(() => {\n    elements.forEach(el => {\n      if (el.type === \"image\" && el.src && !imageCache[el.id]) {\n        const img = new Image();\n        img.src = el.src;\n        img.onload = () => setImageCache(c => ({\n          ...c,\n          [el.id]: img\n        }));\n      }\n    });\n  }, [elements, imageCache]);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = \"round\";\n    ctx.lineWidth = 2;\n    elements.forEach((el, idx) => {\n      ctx.save();\n      const w = el.w,\n        h = el.h;\n      const cx = el.x + w / 2,\n        cy = el.y + h / 2;\n      ctx.translate(cx, cy);\n      ctx.rotate((el.rotation || 0) * Math.PI / 180);\n      ctx.translate(-cx, -cy);\n      if (el.type === \"image\") {\n        const img = imageCache[el.id];\n        if (img) {\n          ctx.drawImage(img, el.x, el.y, w, h);\n          if (idx === selectedIdx) {\n            ctx.strokeStyle = \"#f59e42\";\n            ctx.lineWidth = 2;\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n            drawHandles(ctx, el.x, el.y, w, h);\n          }\n        }\n      } else if (el.type === \"text\") {\n        ctx.font = `${el.fontSize || 24}px Arial`;\n        ctx.fillStyle = el.color;\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\n        const boxW = el.w;\n        const boxH = el.h || (el.fontSize || 24) + 8;\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = \"#f59e42\";\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\n        }\n      } else {\n        ctx.fillStyle = el.color;\n        ctx.strokeStyle = el.color;\n        switch (el.type) {\n          case \"rectangle\":\n          case \"square\":\n            ctx.fillRect(el.x, el.y, w, h);\n            break;\n          case \"circle\":\n            ctx.beginPath();\n            ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, 2 * Math.PI);\n            ctx.fill();\n            break;\n          // ... other shapes as in your code ...\n          default:\n            break;\n        }\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = \"#f59e42\";\n          ctx.lineWidth = 2;\n          ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n          drawHandles(ctx, el.x, el.y, w, h);\n        }\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === \"eraser\" ? \"rgba(0,0,0,1)\" : line.color || \"#333\";\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === \"eraser\" ? \"destination-out\" : \"source-over\";\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = \"source-over\";\n    });\n  }, [elements, lines, imageCache, selectedIdx]);\n  function drawHandles(ctx, x, y, w, h) {\n    const handles = [[x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2]];\n    handles.forEach(([hx, hy]) => {\n      ctx.fillStyle = \"#fff\";\n      ctx.strokeStyle = \"#333\";\n      ctx.lineWidth = 1;\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n    });\n  }\n  const saveState = (newElements, newLines, newTitle = designName) => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      elements: JSON.parse(JSON.stringify(newElements)),\n      lines: JSON.parse(JSON.stringify(newLines)),\n      title: newTitle\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n    setDesignName(newTitle);\n  };\n\n  // Mouse event handlers from your original code:\n  const handleCanvasMouseDown = e => {\n    if (!canvasRef.current) return;\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    let clicked = false;\n    for (let i = elements.length - 1; i >= 0; i--) {\n      const el = elements[i];\n      const handleIdx = getHandleAt(el, mouseX, mouseY);\n      if (i === selectedIdx && handleIdx !== null) {\n        setResizingHandle(handleIdx);\n        clicked = true;\n        break;\n      }\n      if (mouseX >= el.x && mouseX <= el.x + el.w && mouseY >= el.y && mouseY <= el.y + el.h) {\n        setSelectedIdx(i);\n        setDragOffset({\n          x: mouseX - el.x,\n          y: mouseY - el.y\n        });\n        setIsDragging(true);\n        clicked = true;\n        break;\n      }\n    }\n    if (!clicked) setSelectedIdx(null);\n    if (drawMode || eraserMode) {\n      setIsDrawing(true);\n      drawingPointsRef.current = [[mouseX, mouseY]];\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    if (!canvasRef.current) return;\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    if (resizingHandle !== null && selectedIdx !== null) {\n      const el = elements[selectedIdx];\n      const newEl = {\n        ...el\n      };\n      // resizing logic (bounds checking not shown for brevity)\n      // ...\n      const newElements = elements.map((s, idx) => idx === selectedIdx ? newEl : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          elements: newElements,\n          lines\n        };\n        return newHistory;\n      });\n      return;\n    }\n    if (isDragging && selectedIdx !== null) {\n      const newElements = elements.map((s, idx) => idx === selectedIdx ? {\n        ...s,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          elements: newElements,\n          lines\n        };\n        return newHistory;\n      });\n    }\n    if (isDrawing && (drawMode || eraserMode)) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      const points = drawingPointsRef.current;\n      points.push([mouseX, mouseY]);\n      ctx.beginPath();\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\n      ctx.lineTo(mouseX, mouseY);\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\n      ctx.strokeStyle = eraserMode ? \"rgba(0,0,0,1)\" : pencilColor;\n      ctx.globalCompositeOperation = eraserMode ? \"destination-out\" : \"source-over\";\n      ctx.stroke();\n      ctx.globalCompositeOperation = \"source-over\";\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    if (isDrawing) {\n      if (!canvasRef.current) return;\n      const newLine = {\n        id: nextId++,\n        points: drawingPointsRef.current,\n        color: pencilColor,\n        size: brushSize,\n        mode: eraserMode ? \"eraser\" : \"draw\"\n      };\n      saveState(elements, [...lines, newLine], designName);\n    }\n    if (resizingHandle !== null) setResizingHandle(null);\n    if (isDragging) setIsDragging(false);\n    setIsDrawing(false);\n  };\n\n  // Save to cloud with safe toDataURL call\n  const handleSaveToCloud = async () => {\n    if (!canvasRef.current) {\n      alert(\"Canvas is not ready yet!\");\n      return;\n    }\n    try {\n      const imageDataURL = canvasRef.current.toDataURL(\"image/png\");\n      const response = await fetch(\"http://localhost:5000/api/designs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          image: imageDataURL,\n          title: designName.trim() || \"Untitled Design\",\n          jsonData: {\n            elements,\n            lines\n          }\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Design saved and uploaded successfully!\");\n      } else {\n        alert(\"Failed to upload design: \" + (data.message || \"Unknown error\"));\n      }\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Upload failed, please try again.\");\n    }\n  };\n\n  // Other event handlers (handleAddShape, handleAddText, handleShapeColorChange, etc.)\n  // should be copied from your existing code.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1000,\n        height: 700,\n        style: {\n          background: \"#fff\",\n          border: \"1px solid #eee\",\n          marginTop: \"-250px\"\n        },\n        onMouseDown: handleCanvasMouseDown,\n        onMouseMove: handleCanvasMouseMove,\n        onMouseUp: handleCanvasMouseUp,\n        onMouseLeave: handleCanvasMouseUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"MDRMyRyC6CqHsCS1FQX+pIUmS7o=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","HANDLE_SIZE","nextId","getDefaultSize","type","text","w","h","font","measureText","width","fontSize","CanvasEditor","initialData","_s","_initialData$jsonData","_initialData$jsonData2","canvasRef","fileInputRef","designName","setDesignName","title","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedIdx","setSelectedIdx","isDragging","setIsDragging","isDrawing","setIsDrawing","resizingHandle","setResizingHandle","drawingPointsRef","history","setHistory","elements","jsonData","lines","historyIndex","setHistoryIndex","imageCache","setImageCache","forEach","el","src","id","img","Image","onload","c","current","canvas","getContext","clearRect","height","lineCap","lineWidth","idx","save","cx","cy","translate","rotate","rotation","drawImage","strokeStyle","strokeRect","drawHandles","fillText","boxW","boxH","fillRect","arc","restore","line","mode","size","globalCompositeOperation","points","stroke","handles","hx","hy","saveState","newElements","newLines","newTitle","newHistory","slice","push","JSON","parse","stringify","length","handleCanvasMouseDown","e","mouseX","nativeEvent","offsetX","mouseY","offsetY","clicked","handleIdx","getHandleAt","handleCanvasMouseMove","newEl","map","s","handleCanvasMouseUp","newLine","handleSaveToCloud","alert","imageDataURL","toDataURL","response","fetch","method","headers","Authorization","localStorage","getItem","body","image","trim","data","json","ok","message","error","console","className","children","ref","style","background","border","marginTop","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst HANDLE_SIZE = 16;\r\nlet nextId = 1;\r\n\r\nconst getDefaultSize = (type, text, ctx) => {\r\n  if (type === \"rectangle\") return { w: 120, h: 80 };\r\n  if (type === \"square\" || type === \"circle\") return { w: 100, h: 100 };\r\n  if (type === \"oval\") return { w: 120, h: 80 };\r\n  if (type === \"image\") return { w: 200, h: 200 };\r\n  if (type === \"text\") {\r\n    ctx.font = \"24px Arial\";\r\n    return { w: ctx.measureText(text).width, h: 32, fontSize: 24 };\r\n  }\r\n  return { w: 120, h: 80 };\r\n};\r\n\r\nconst CanvasEditor = ({ initialData }) => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [designName, setDesignName] = useState(initialData?.title || \"\");\r\n  const [selectedShape, setSelectedShape] = useState(\"rectangle\");\r\n  const [shapeColor, setShapeColor] = useState(\"#4f46e5\");\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState(\"#111827\");\r\n  const [pencilColor, setPencilColor] = useState(\"#333\");\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedIdx, setSelectedIdx] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const drawingPointsRef = useRef([]);\r\n\r\n  const [history, setHistory] = useState([\r\n    {\r\n      elements: initialData?.jsonData?.elements || [],\r\n      lines: initialData?.jsonData?.lines || [],\r\n      title: initialData?.title || \"\",\r\n    },\r\n  ]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const [imageCache, setImageCache] = useState({});\r\n\r\n  const { elements, lines, title } = history[historyIndex];\r\n\r\n  useEffect(() => {\r\n    setDesignName(title || \"\");\r\n  }, [title]);\r\n\r\n  useEffect(() => {\r\n    elements.forEach(el => {\r\n      if (el.type === \"image\" && el.src && !imageCache[el.id]) {\r\n        const img = new Image();\r\n        img.src = el.src;\r\n        img.onload = () => setImageCache(c => ({ ...c, [el.id]: img }));\r\n      }\r\n    });\r\n  }, [elements, imageCache]);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineWidth = 2;\r\n\r\n    elements.forEach((el, idx) => {\r\n      ctx.save();\r\n      const w = el.w, h = el.h;\r\n      const cx = el.x + w / 2, cy = el.y + h / 2;\r\n      ctx.translate(cx, cy);\r\n      ctx.rotate(((el.rotation || 0) * Math.PI) / 180);\r\n      ctx.translate(-cx, -cy);\r\n\r\n      if (el.type === \"image\") {\r\n        const img = imageCache[el.id];\r\n        if (img) {\r\n          ctx.drawImage(img, el.x, el.y, w, h);\r\n          if (idx === selectedIdx) {\r\n            ctx.strokeStyle = \"#f59e42\";\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n            drawHandles(ctx, el.x, el.y, w, h);\r\n          }\r\n        }\r\n      } else if (el.type === \"text\") {\r\n        ctx.font = `${el.fontSize || 24}px Arial`;\r\n        ctx.fillStyle = el.color;\r\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\r\n        const boxW = el.w;\r\n        const boxH = el.h || (el.fontSize || 24) + 8;\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = \"#f59e42\";\r\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\r\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\r\n        }\r\n      } else {\r\n        ctx.fillStyle = el.color;\r\n        ctx.strokeStyle = el.color;\r\n\r\n        switch (el.type) {\r\n          case \"rectangle\":\r\n          case \"square\":\r\n            ctx.fillRect(el.x, el.y, w, h);\r\n            break;\r\n          case \"circle\":\r\n            ctx.beginPath();\r\n            ctx.arc(el.x + w/2, el.y + h/2, w/2, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n            break;\r\n          // ... other shapes as in your code ...\r\n          default:\r\n            break;\r\n        }\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = \"#f59e42\";\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(el.x - 2, el.y - 2, w +4 , h + 4);\r\n          drawHandles(ctx, el.x, el.y, w, h);\r\n        }\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === \"eraser\" ? \"rgba(0,0,0,1)\" : line.color || \"#333\";\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === \"eraser\" ? \"destination-out\" : \"source-over\";\r\n      line.points.forEach(([x,y], i) => {\r\n        if(i === 0) ctx.moveTo(x,y);\r\n        else ctx.lineTo(x,y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = \"source-over\";\r\n    });\r\n\r\n  }, [elements, lines, imageCache, selectedIdx]);\r\n\r\n  function drawHandles(ctx, x, y, w, h) {\r\n    const handles = [\r\n      [x - HANDLE_SIZE/2, y - HANDLE_SIZE/2],\r\n      [x + w - HANDLE_SIZE/2, y - HANDLE_SIZE/2],\r\n      [x - HANDLE_SIZE/2, y + h - HANDLE_SIZE/2],\r\n      [x + w - HANDLE_SIZE/2, y + h - HANDLE_SIZE/2],\r\n    ];\r\n    handles.forEach(([hx, hy]) => {\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.strokeStyle = \"#333\";\r\n      ctx.lineWidth = 1;\r\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n    });\r\n  }\r\n\r\n  const saveState = (newElements, newLines, newTitle = designName) => {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      elements: JSON.parse(JSON.stringify(newElements)),\r\n      lines: JSON.parse(JSON.stringify(newLines)),\r\n      title: newTitle\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n    setDesignName(newTitle);\r\n  };\r\n\r\n  // Mouse event handlers from your original code:\r\n  const handleCanvasMouseDown = (e) => {\r\n    if (!canvasRef.current) return;\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    let clicked = false;\r\n    for (let i = elements.length - 1; i >= 0; i--) {\r\n      const el = elements[i];\r\n      const handleIdx = getHandleAt(el, mouseX, mouseY);\r\n      if (i === selectedIdx && handleIdx !== null) {\r\n        setResizingHandle(handleIdx);\r\n        clicked = true;\r\n        break;\r\n      }\r\n      if (\r\n        mouseX >= el.x &&\r\n        mouseX <= el.x + el.w &&\r\n        mouseY >= el.y &&\r\n        mouseY <= el.y + el.h\r\n      ) {\r\n        setSelectedIdx(i);\r\n        setDragOffset({ x: mouseX - el.x, y: mouseY - el.y });\r\n        setIsDragging(true);\r\n        clicked = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!clicked) setSelectedIdx(null);\r\n\r\n    if (drawMode || eraserMode) {\r\n      setIsDrawing(true);\r\n      drawingPointsRef.current = [[mouseX, mouseY]];\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    if (!canvasRef.current) return;\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n\r\n    if (resizingHandle !== null && selectedIdx !== null) {\r\n      const el = elements[selectedIdx];\r\n      const newEl = { ...el };\r\n      // resizing logic (bounds checking not shown for brevity)\r\n      // ...\r\n      const newElements = elements.map((s, idx) => (idx === selectedIdx ? newEl : s));\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { elements: newElements, lines };\r\n        return newHistory;\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (isDragging && selectedIdx !== null) {\r\n      const newElements = elements.map((s, idx) =>\r\n        idx === selectedIdx\r\n          ? { ...s, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y }\r\n          : s\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { elements: newElements, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n\r\n    if (isDrawing && (drawMode || eraserMode)) {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      const points = drawingPointsRef.current;\r\n      points.push([mouseX, mouseY]);\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\r\n      ctx.lineTo(mouseX, mouseY);\r\n      ctx.lineWidth = eraserMode ? eraserSize : brushSize;\r\n      ctx.strokeStyle = eraserMode ? \"rgba(0,0,0,1)\" : pencilColor;\r\n      ctx.globalCompositeOperation = eraserMode ? \"destination-out\" : \"source-over\";\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = \"source-over\";\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseUp = () => {\r\n    if (isDrawing) {\r\n      if (!canvasRef.current) return;\r\n      const newLine = {\r\n        id: nextId++,\r\n        points: drawingPointsRef.current,\r\n        color: pencilColor,\r\n        size: brushSize,\r\n        mode: eraserMode ? \"eraser\" : \"draw\",\r\n      };\r\n      saveState(elements, [...lines, newLine], designName);\r\n    }\r\n    if (resizingHandle !== null) setResizingHandle(null);\r\n    if (isDragging) setIsDragging(false);\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  // Save to cloud with safe toDataURL call\r\n  const handleSaveToCloud = async () => {\r\n    if (!canvasRef.current) {\r\n      alert(\"Canvas is not ready yet!\");\r\n      return;\r\n    }\r\n    try {\r\n      const imageDataURL = canvasRef.current.toDataURL(\"image/png\");\r\n      const response = await fetch(\"http://localhost:5000/api/designs\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        },\r\n        body: JSON.stringify({\r\n          image: imageDataURL,\r\n          title: designName.trim() || \"Untitled Design\",\r\n          jsonData: { elements, lines }\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(\"Design saved and uploaded successfully!\");\r\n      } else {\r\n        alert(\"Failed to upload design: \" + (data.message || \"Unknown error\"));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      alert(\"Upload failed, please try again.\");\r\n    }\r\n  };\r\n\r\n  // Other event handlers (handleAddShape, handleAddText, handleShapeColorChange, etc.)\r\n  // should be copied from your existing code.\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* your header and controls components */}\r\n      <main className=\"flex-1 flex items-center justify-center\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1000}\r\n          height={700}\r\n          style={{ background: \"#fff\", border: \"1px solid #eee\", marginTop: \"-250px\" }}\r\n          onMouseDown={handleCanvasMouseDown}\r\n          onMouseMove={handleCanvasMouseMove}\r\n          onMouseUp={handleCanvasMouseUp}\r\n          onMouseLeave={handleCanvasMouseUp}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}