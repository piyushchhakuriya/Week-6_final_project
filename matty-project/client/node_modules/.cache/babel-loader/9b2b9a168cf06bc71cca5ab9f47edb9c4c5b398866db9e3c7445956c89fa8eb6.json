{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/<your-cloud-name>/upload';\nconst UPLOAD_PRESET = '<your-upload-preset>';\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst HANDLE_SIZE = 16;\nlet nextId = 1;\nconst getDefaultSize = (type, text, ctx) => {\n  if (type === 'rectangle') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'square' || type === 'circle') return {\n    w: 100,\n    h: 100\n  };\n  if (type === 'oval') return {\n    w: 120,\n    h: 80\n  };\n  if (type === 'image') return {\n    w: 200,\n    h: 200\n  };\n  if (type === 'text') {\n    ctx.font = '24px Arial';\n    return {\n      w: ctx.measureText(text).width,\n      h: 32,\n      fontSize: 24\n    };\n  }\n  return {\n    w: 120,\n    h: 80\n  };\n};\nconst CanvasEditor = ({\n  initialData\n}) => {\n  _s();\n  var _initialData$jsonData, _initialData$jsonData2;\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [eraserMode, setEraserMode] = useState(false);\n  const [eraserSize, setEraserSize] = useState(20);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333');\n  const [brushSize, setBrushSize] = useState(2);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedIdx, setSelectedIdx] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [resizingHandle, setResizingHandle] = useState(null);\n  const drawingPointsRef = useRef([]);\n  const [history, setHistory] = useState([{\n    elements: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData = initialData.jsonData) === null || _initialData$jsonData === void 0 ? void 0 : _initialData$jsonData.elements) || [],\n    lines: (initialData === null || initialData === void 0 ? void 0 : (_initialData$jsonData2 = initialData.jsonData) === null || _initialData$jsonData2 === void 0 ? void 0 : _initialData$jsonData2.lines) || []\n  }]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const {\n    elements,\n    lines\n  } = history[historyIndex];\n  const [imageCache, setImageCache] = useState({});\n  const [file, setFile] = useState(null);\n  const [thumbnailUrl, setThumbnailUrl] = useState('');\n  const [uploading, setUploading] = useState(false);\n  useEffect(() => {\n    elements.forEach(el => {\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\n        const img = new window.Image();\n        img.src = el.src;\n        img.onload = () => setImageCache(c => ({\n          ...c,\n          [el.id]: img\n        }));\n      }\n    });\n  }, [elements, imageCache]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 2;\n    elements.forEach((el, idx) => {\n      ctx.save();\n      const w = el.w,\n        h = el.h;\n      const cx = el.x + w / 2;\n      const cy = el.y + h / 2;\n      ctx.translate(cx, cy);\n      const rotationRad = (el.rotation || 0) * Math.PI / 180;\n      ctx.rotate(rotationRad);\n      ctx.translate(-cx, -cy);\n\n      // Image rendering\n      if (el.type === 'image') {\n        const img = imageCache[el.id];\n        if (img) {\n          ctx.drawImage(img, el.x, el.y, w, h);\n          if (idx === selectedIdx) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n            drawHandles(ctx, el.x, el.y, w, h);\n          }\n        }\n        // Text rendering\n      } else if (el.type === 'text') {\n        ctx.font = `${el.fontSize || 24}px Arial`;\n        ctx.fillStyle = el.color;\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\n        const boxW = el.w;\n        const boxH = el.h || (el.fontSize || 24) + 8;\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\n        }\n        // Shapes rendering\n      } else {\n        ctx.fillStyle = el.color;\n        ctx.strokeStyle = el.color;\n        switch (el.type) {\n          case 'rectangle':\n          case 'square':\n            ctx.fillRect(el.x, el.y, w, h);\n            break;\n          case 'circle':\n            ctx.beginPath();\n            ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, 2 * Math.PI);\n            ctx.fill();\n            break;\n          case 'oval':\n            ctx.save();\n            ctx.translate(el.x + w / 2, el.y + h / 2);\n            ctx.scale(1.5, 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\n            ctx.restore();\n            ctx.fill();\n            break;\n          case 'triangle':\n            ctx.beginPath();\n            ctx.moveTo(el.x, el.y + h);\n            ctx.lineTo(el.x + w, el.y + h);\n            ctx.lineTo(el.x + w / 2, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'parallelogram':\n            ctx.beginPath();\n            ctx.moveTo(el.x + 20, el.y + h);\n            ctx.lineTo(el.x + w + 20, el.y + h);\n            ctx.lineTo(el.x + w, el.y);\n            ctx.lineTo(el.x, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'rhombus':\n            ctx.beginPath();\n            ctx.moveTo(el.x + w / 2, el.y);\n            ctx.lineTo(el.x + w, el.y + h / 2);\n            ctx.lineTo(el.x + w / 2, el.y + h);\n            ctx.lineTo(el.x, el.y + h / 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'trapezoid':\n            ctx.beginPath();\n            ctx.moveTo(el.x + 20, el.y + h);\n            ctx.lineTo(el.x + w - 20, el.y + h);\n            ctx.lineTo(el.x + w, el.y);\n            ctx.lineTo(el.x, el.y);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'kite':\n            ctx.beginPath();\n            ctx.moveTo(el.x + w / 2, el.y);\n            ctx.lineTo(el.x + w, el.y + h / 2);\n            ctx.lineTo(el.x + w / 2, el.y + h);\n            ctx.lineTo(el.x, el.y + h / 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case 'pentagon':\n          case 'hexagon':\n          case 'heptagon':\n          case 'octagon':\n          case 'nonagon':\n          case 'decagon':\n            const sides = {\n              pentagon: 5,\n              hexagon: 6,\n              heptagon: 7,\n              octagon: 8,\n              nonagon: 9,\n              decagon: 10\n            }[el.type];\n            drawPolygon(ctx, el.x + w / 2, el.y + h / 2, Math.min(w, h) / 2, sides, el.color);\n            break;\n          default:\n            break;\n        }\n        if (idx === selectedIdx) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.lineWidth = 2;\n          ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\n          drawHandles(ctx, el.x, el.y, w, h);\n        }\n      }\n      ctx.restore();\n    });\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || \"#333\";\n      ctx.lineWidth = line.size || 2;\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : \"source-over\";\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'source-over';\n    });\n  }, [elements, lines, imageCache, selectedIdx]);\n  function drawHandles(ctx, x, y, w, h) {\n    const handles = [[x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2], [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2], [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2]];\n    handles.forEach(([hx, hy]) => {\n      ctx.fillStyle = '#fff';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\n    });\n  }\n\n  // --- Add upload UI and logic ---\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const uploadImageToCloudinary = async () => {\n    if (!file) {\n      alert(\"Please select an image file first\");\n      return;\n    }\n    setUploading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', '<your-upload-preset>'); // Replace with your preset\n\n    try {\n      const res = await fetch('https://api.cloudinary.com/v1_1/<your-cloud-name>/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      setThumbnailUrl(data.secure_url);\n      alert('Upload successful');\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Upload failed');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  // Optional save design method sending thumbnail\n  const saveDesign = () => {\n    if (!thumbnailUrl) {\n      alert(\"Upload an image first\");\n      return;\n    }\n    const designData = {\n      title: 'My Design Title',\n      jsonData: {/* Your canvas shapes and lines data */},\n      thumbnail: thumbnailUrl\n    };\n    console.log('Ready to send design:', designData);\n    // Call backend API here with designData to save\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 font-semibold\",\n          children: \"Thumbnail Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileChange,\n          className: \"mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadImageToCloudinary,\n          disabled: uploading,\n          className: \"mb-2 px-4 py-1.5 bg-blue-600 text-white rounded\",\n          children: uploading ? 'Uploading...' : 'Upload Thumbnail'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), thumbnailUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: thumbnailUrl,\n          alt: \"Thumbnail Preview\",\n          width: 150,\n          className: \"rounded border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveDesign,\n          disabled: !thumbnailUrl,\n          className: \"mt-4 px-4 py-1.5 bg-green-600 text-white rounded\",\n          children: \"Save Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full mt-4 py-2 rounded bg-gray-100 hover:bg-blue-50\",\n        onClick: () => fileInputRef.current.click(),\n        children: \"Upload Image (to canvas)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => {\n          const file = e.target.files[0];\n          if (!file) return;\n          const reader = new FileReader();\n          reader.onload = event => {\n            const newElement = {\n              id: nextId++,\n              type: 'image',\n              x: 50,\n              y: 50,\n              w: 200,\n              h: 200,\n              src: event.target.result,\n              rotation: 0\n            };\n            saveState([...elements, newElement], lines);\n          };\n          reader.readAsDataURL(file);\n          e.target.value = '';\n        },\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1000,\n        height: 700,\n        style: {\n          background: '#fff',\n          border: '1px solid #eee',\n          marginTop: '-250px'\n        },\n        onMouseDown: handleCanvasMouseDown,\n        onMouseMove: handleCanvasMouseMove,\n        onMouseUp: handleCanvasMouseUp,\n        onMouseLeave: handleCanvasMouseUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"rGutwdrMWNuWuJGjsv1c+Z3LO+k=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","CLOUDINARY_URL","UPLOAD_PRESET","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","HANDLE_SIZE","nextId","getDefaultSize","type","text","w","h","font","measureText","width","fontSize","CanvasEditor","initialData","_s","_initialData$jsonData","_initialData$jsonData2","canvasRef","fileInputRef","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","eraserMode","setEraserMode","eraserSize","setEraserSize","textColor","setTextColor","pencilColor","setPencilColor","brushSize","setBrushSize","dragOffset","setDragOffset","selectedIdx","setSelectedIdx","isDragging","setIsDragging","isDrawing","setIsDrawing","resizingHandle","setResizingHandle","drawingPointsRef","history","setHistory","elements","jsonData","lines","historyIndex","setHistoryIndex","imageCache","setImageCache","file","setFile","thumbnailUrl","setThumbnailUrl","uploading","setUploading","forEach","el","src","id","img","window","Image","onload","c","canvas","current","getContext","clearRect","height","lineCap","lineWidth","idx","save","cx","cy","translate","rotationRad","rotation","rotate","drawImage","strokeStyle","strokeRect","drawHandles","fillText","boxW","boxH","fillRect","arc","scale","restore","pentagon","hexagon","heptagon","octagon","nonagon","decagon","min","line","mode","size","globalCompositeOperation","points","stroke","handles","hx","hy","handleFileChange","e","target","files","uploadImageToCloudinary","alert","formData","FormData","append","res","fetch","method","body","data","json","secure_url","error","console","saveDesign","designData","title","thumbnail","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","disabled","alt","click","ref","reader","FileReader","event","newElement","result","saveState","readAsDataURL","value","style","display","background","border","marginTop","onMouseDown","handleCanvasMouseDown","onMouseMove","handleCanvasMouseMove","onMouseUp","handleCanvasMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/<your-cloud-name>/upload';\r\nconst UPLOAD_PRESET = '<your-upload-preset>';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst HANDLE_SIZE = 16;\r\nlet nextId = 1;\r\n\r\nconst getDefaultSize = (type, text, ctx) => {\r\n  if (type === 'rectangle') return { w: 120, h: 80 };\r\n  if (type === 'square' || type === 'circle') return { w: 100, h: 100 };\r\n  if (type === 'oval') return { w: 120, h: 80 };\r\n  if (type === 'image') return { w: 200, h: 200 };\r\n  if (type === 'text') {\r\n    ctx.font = '24px Arial';\r\n    return { w: ctx.measureText(text).width, h: 32, fontSize: 24 };\r\n  }\r\n  return { w: 120, h: 80 };\r\n};\r\n\r\nconst CanvasEditor = ({ initialData }) => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [eraserMode, setEraserMode] = useState(false);\r\n  const [eraserSize, setEraserSize] = useState(20);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333');\r\n  const [brushSize, setBrushSize] = useState(2);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedIdx, setSelectedIdx] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [resizingHandle, setResizingHandle] = useState(null);\r\n  const drawingPointsRef = useRef([]);\r\n\r\n  const [history, setHistory] = useState([\r\n    {\r\n      elements: initialData?.jsonData?.elements || [],\r\n      lines: initialData?.jsonData?.lines || [],\r\n    },\r\n  ]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n\r\n  const { elements, lines } = history[historyIndex];\r\n  const [imageCache, setImageCache] = useState({});\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [thumbnailUrl, setThumbnailUrl] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    elements.forEach(el => {\r\n      if (el.type === 'image' && el.src && !imageCache[el.id]) {\r\n        const img = new window.Image();\r\n        img.src = el.src;\r\n        img.onload = () => setImageCache(c => ({ ...c, [el.id]: img }));\r\n      }\r\n    });\r\n  }, [elements, imageCache]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    elements.forEach((el, idx) => {\r\n      ctx.save();\r\n      const w = el.w, h = el.h;\r\n      const cx = el.x + w / 2;\r\n      const cy = el.y + h / 2;\r\n      ctx.translate(cx, cy);\r\n      const rotationRad = (el.rotation || 0) * Math.PI / 180;\r\n      ctx.rotate(rotationRad);\r\n      ctx.translate(-cx, -cy);\r\n\r\n      // Image rendering\r\n      if (el.type === 'image') {\r\n        const img = imageCache[el.id];\r\n        if (img) {\r\n          ctx.drawImage(img, el.x, el.y, w, h);\r\n          if (idx === selectedIdx) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n            drawHandles(ctx, el.x, el.y, w, h);\r\n          }\r\n        }\r\n      // Text rendering\r\n      } else if (el.type === 'text') {\r\n        ctx.font = `${el.fontSize || 24}px Arial`;\r\n        ctx.fillStyle = el.color;\r\n        ctx.fillText(el.text, el.x, el.y + (el.fontSize || 24));\r\n        const boxW = el.w;\r\n        const boxH = el.h || (el.fontSize || 24) + 8;\r\n        if (idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.strokeRect(el.x - 2, el.y - 2, boxW + 4, boxH + 4);\r\n          drawHandles(ctx, el.x, el.y, boxW, boxH);\r\n        }\r\n      // Shapes rendering\r\n      } else {\r\n        ctx.fillStyle = el.color;\r\n        ctx.strokeStyle = el.color;\r\n\r\n        switch(el.type) {\r\n          case 'rectangle':\r\n          case 'square':\r\n            ctx.fillRect(el.x, el.y, w, h);\r\n            break;\r\n          case 'circle':\r\n            ctx.beginPath();\r\n            ctx.arc(el.x + w / 2, el.y + h / 2, w / 2, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n            break;\r\n          case 'oval':\r\n            ctx.save();\r\n            ctx.translate(el.x + w / 2, el.y + h / 2);\r\n            ctx.scale(1.5, 1);\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, h / 2, 0, 2 * Math.PI);\r\n            ctx.restore();\r\n            ctx.fill();\r\n            break;\r\n          case 'triangle':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y + h);\r\n            ctx.lineTo(el.x + w / 2, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'parallelogram':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + 20, el.y + h);\r\n            ctx.lineTo(el.x + w + 20, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y);\r\n            ctx.lineTo(el.x, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'rhombus':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + w / 2, el.y);\r\n            ctx.lineTo(el.x + w, el.y + h / 2);\r\n            ctx.lineTo(el.x + w / 2, el.y + h);\r\n            ctx.lineTo(el.x, el.y + h / 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'trapezoid':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + 20, el.y + h);\r\n            ctx.lineTo(el.x + w - 20, el.y + h);\r\n            ctx.lineTo(el.x + w, el.y);\r\n            ctx.lineTo(el.x, el.y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'kite':\r\n            ctx.beginPath();\r\n            ctx.moveTo(el.x + w / 2, el.y);\r\n            ctx.lineTo(el.x + w, el.y + h / 2);\r\n            ctx.lineTo(el.x + w / 2, el.y + h);\r\n            ctx.lineTo(el.x, el.y + h / 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            break;\r\n          case 'pentagon':\r\n          case 'hexagon':\r\n          case 'heptagon':\r\n          case 'octagon':\r\n          case 'nonagon':\r\n          case 'decagon':\r\n            const sides = {\r\n              pentagon: 5,\r\n              hexagon: 6,\r\n              heptagon: 7,\r\n              octagon: 8,\r\n              nonagon: 9,\r\n              decagon: 10,\r\n            }[el.type];\r\n            drawPolygon(ctx, el.x + w / 2, el.y + h / 2, Math.min(w, h) / 2, sides, el.color);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        if(idx === selectedIdx) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(el.x - 2, el.y - 2, w + 4, h + 4);\r\n          drawHandles(ctx, el.x, el.y, w, h);\r\n        }\r\n      }\r\n      ctx.restore();\r\n    });\r\n\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.mode === 'eraser' ? 'rgba(0,0,0,1)' : line.color || \"#333\";\r\n      ctx.lineWidth = line.size || 2;\r\n      ctx.globalCompositeOperation = line.mode === 'eraser' ? 'destination-out' : \"source-over\";\r\n      line.points.forEach(([x,y], i) => {\r\n        if(i===0) ctx.moveTo(x,y);\r\n        else ctx.lineTo(x,y);\r\n      });\r\n      ctx.stroke();\r\n      ctx.globalCompositeOperation = 'source-over';\r\n    });\r\n  }, [elements, lines, imageCache, selectedIdx]);\r\n\r\n  function drawHandles(ctx, x, y, w, h) {\r\n    const handles = [\r\n      [x - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2],\r\n      [x + w - HANDLE_SIZE / 2, y - HANDLE_SIZE / 2],\r\n      [x - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2],\r\n      [x + w - HANDLE_SIZE / 2, y + h - HANDLE_SIZE / 2],\r\n    ];\r\n    handles.forEach(([hx, hy]) => {\r\n      ctx.fillStyle = '#fff';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth = 1;\r\n      ctx.fillRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n      ctx.strokeRect(hx, hy, HANDLE_SIZE, HANDLE_SIZE);\r\n    });\r\n  }\r\n\r\n  // --- Add upload UI and logic ---\r\n\r\n  \r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const uploadImageToCloudinary = async () => {\r\n    if (!file) {\r\n      alert(\"Please select an image file first\");\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', '<your-upload-preset>'); // Replace with your preset\r\n\r\n    try {\r\n      const res = await fetch('https://api.cloudinary.com/v1_1/<your-cloud-name>/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      setThumbnailUrl(data.secure_url);\r\n      alert('Upload successful');\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      alert('Upload failed');\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  // Optional save design method sending thumbnail\r\n  const saveDesign = () => {\r\n    if (!thumbnailUrl) {\r\n      alert(\"Upload an image first\");\r\n      return;\r\n    }\r\n    const designData = {\r\n      title: 'My Design Title',\r\n      jsonData: {/* Your canvas shapes and lines data */},\r\n      thumbnail: thumbnailUrl,\r\n    };\r\n    console.log('Ready to send design:', designData);\r\n    // Call backend API here with designData to save\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Your existing header and toolbar UI */}\r\n\r\n      <aside className=\"flex flex-col gap-6 p-4 bg-gray-50 border-r min-w-[240px]\">\r\n        {/* Existing shape and text UI */}\r\n\r\n        {/* Upload UI */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n          <label className=\"block mb-2 font-semibold\">Thumbnail Upload</label>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} className=\"mb-2\" />\r\n          <button onClick={uploadImageToCloudinary} disabled={uploading} className=\"mb-2 px-4 py-1.5 bg-blue-600 text-white rounded\">\r\n            {uploading ? 'Uploading...' : 'Upload Thumbnail'}\r\n          </button>\r\n          {thumbnailUrl && <img src={thumbnailUrl} alt=\"Thumbnail Preview\" width={150} className=\"rounded border\" />}\r\n          <button onClick={saveDesign} disabled={!thumbnailUrl} className=\"mt-4 px-4 py-1.5 bg-green-600 text-white rounded\">\r\n            Save Design\r\n          </button>\r\n        </div>\r\n\r\n        {/* Existing upload image button */}\r\n        <button className=\"w-full mt-4 py-2 rounded bg-gray-100 hover:bg-blue-50\" onClick={() => fileInputRef.current.click()}>\r\n          Upload Image (to canvas)\r\n        </button>\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            if (!file) return;\r\n            const reader = new FileReader();\r\n            reader.onload = (event) => {\r\n              const newElement = {\r\n                id: nextId++,\r\n                type: 'image',\r\n                x: 50,\r\n                y: 50,\r\n                w: 200,\r\n                h: 200,\r\n                src: event.target.result,\r\n                rotation: 0,\r\n              };\r\n              saveState([...elements, newElement], lines);\r\n            };\r\n            reader.readAsDataURL(file);\r\n            e.target.value = '';\r\n          }}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </aside>\r\n\r\n      <main className=\"flex-1 flex items-center justify-center\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1000}\r\n          height={700}\r\n          style={{ background: '#fff', border: '1px solid #eee', marginTop: '-250px' }}\r\n          onMouseDown={handleCanvasMouseDown}\r\n          onMouseMove={handleCanvasMouseMove}\r\n          onMouseUp={handleCanvasMouseUp}\r\n          onMouseLeave={handleCanvasMouseUp}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAG,0DAA0D;AACjF,MAAMC,aAAa,GAAG,sBAAsB;AAE5C,SAASC,WAAWA,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACpDL,GAAG,CAACM,SAAS,CAAC,CAAC;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;IAC9B,MAAMC,KAAK,GAAI,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,CAAC,GAAIH,KAAK,GAAGK,IAAI,CAACC,EAAE,GAAG,CAAC;IACrD,MAAMC,EAAE,GAAGV,CAAC,GAAGE,MAAM,GAAGM,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC;IACvC,MAAMK,EAAE,GAAGX,CAAC,GAAGC,MAAM,GAAGM,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC;IACvC,IAAID,CAAC,KAAK,CAAC,EAAEP,GAAG,CAACe,MAAM,CAACJ,EAAE,EAAEE,EAAE,CAAC,CAAC,KAC3Bb,GAAG,CAACgB,MAAM,CAACL,EAAE,EAAEE,EAAE,CAAC;EACzB;EACAb,GAAG,CAACiB,SAAS,CAAC,CAAC;EACfjB,GAAG,CAACkB,SAAS,GAAGb,KAAK;EACrBL,GAAG,CAACmB,IAAI,CAAC,CAAC;AACZ;AAEA,MAAMC,WAAW,GAAG,EAAE;AACtB,IAAIC,MAAM,GAAG,CAAC;AAEd,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAExB,GAAG,KAAK;EAC1C,IAAIuB,IAAI,KAAK,WAAW,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;EAClD,IAAIH,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,QAAQ,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EACrE,IAAIH,IAAI,KAAK,MAAM,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;EAC7C,IAAIH,IAAI,KAAK,OAAO,EAAE,OAAO;IAAEE,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAC/C,IAAIH,IAAI,KAAK,MAAM,EAAE;IACnBvB,GAAG,CAAC2B,IAAI,GAAG,YAAY;IACvB,OAAO;MAAEF,CAAC,EAAEzB,GAAG,CAAC4B,WAAW,CAACJ,IAAI,CAAC,CAACK,KAAK;MAAEH,CAAC,EAAE,EAAE;MAAEI,QAAQ,EAAE;IAAG,CAAC;EAChE;EACA,OAAO;IAAEL,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;AAC1B,CAAC;AAED,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACxC,MAAMC,SAAS,GAAG5C,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM6C,YAAY,GAAG7C,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAM,CAAC8C,aAAa,EAAEC,gBAAgB,CAAC,GAAG7C,QAAQ,CAAC,WAAW,CAAC;EAC/D,MAAM,CAAC8C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACgD,QAAQ,EAAEC,WAAW,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsD,SAAS,EAAEC,YAAY,CAAC,GAAGvD,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACwD,WAAW,EAAEC,cAAc,CAAC,GAAGzD,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAAC0D,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgE,UAAU,EAAEC,aAAa,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkE,SAAS,EAAEC,YAAY,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoE,cAAc,EAAEC,iBAAiB,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMsE,gBAAgB,GAAGxE,MAAM,CAAC,EAAE,CAAC;EAEnC,MAAM,CAACyE,OAAO,EAAEC,UAAU,CAAC,GAAGxE,QAAQ,CAAC,CACrC;IACEyE,QAAQ,EAAE,CAAAnC,WAAW,aAAXA,WAAW,wBAAAE,qBAAA,GAAXF,WAAW,CAAEoC,QAAQ,cAAAlC,qBAAA,uBAArBA,qBAAA,CAAuBiC,QAAQ,KAAI,EAAE;IAC/CE,KAAK,EAAE,CAAArC,WAAW,aAAXA,WAAW,wBAAAG,sBAAA,GAAXH,WAAW,CAAEoC,QAAQ,cAAAjC,sBAAA,uBAArBA,sBAAA,CAAuBkC,KAAK,KAAI;EACzC,CAAC,CACF,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG7E,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAM;IAAEyE,QAAQ;IAAEE;EAAM,CAAC,GAAGJ,OAAO,CAACK,YAAY,CAAC;EACjD,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAG/E,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAM,CAACgF,IAAI,EAAEC,OAAO,CAAC,GAAGjF,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkF,YAAY,EAAEC,eAAe,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoF,SAAS,EAAEC,YAAY,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd0E,QAAQ,CAACa,OAAO,CAACC,EAAE,IAAI;MACrB,IAAIA,EAAE,CAAC1D,IAAI,KAAK,OAAO,IAAI0D,EAAE,CAACC,GAAG,IAAI,CAACV,UAAU,CAACS,EAAE,CAACE,EAAE,CAAC,EAAE;QACvD,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAK,CAAC,CAAC;QAC9BF,GAAG,CAACF,GAAG,GAAGD,EAAE,CAACC,GAAG;QAChBE,GAAG,CAACG,MAAM,GAAG,MAAMd,aAAa,CAACe,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAE,CAACP,EAAE,CAACE,EAAE,GAAGC;QAAI,CAAC,CAAC,CAAC;MACjE;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjB,QAAQ,EAAEK,UAAU,CAAC,CAAC;EAE1B/E,SAAS,CAAC,MAAM;IACd,MAAMgG,MAAM,GAAGrD,SAAS,CAACsD,OAAO;IAChC,MAAM1F,GAAG,GAAGyF,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IAEnC3F,GAAG,CAAC4F,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,MAAM,CAAC5D,KAAK,EAAE4D,MAAM,CAACI,MAAM,CAAC;IAChD7F,GAAG,CAAC8F,OAAO,GAAG,OAAO;IACrB9F,GAAG,CAAC+F,SAAS,GAAG,CAAC;IAEjB5B,QAAQ,CAACa,OAAO,CAAC,CAACC,EAAE,EAAEe,GAAG,KAAK;MAC5BhG,GAAG,CAACiG,IAAI,CAAC,CAAC;MACV,MAAMxE,CAAC,GAAGwD,EAAE,CAACxD,CAAC;QAAEC,CAAC,GAAGuD,EAAE,CAACvD,CAAC;MACxB,MAAMwE,EAAE,GAAGjB,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC;MACvB,MAAM0E,EAAE,GAAGlB,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC;MACvB1B,GAAG,CAACoG,SAAS,CAACF,EAAE,EAAEC,EAAE,CAAC;MACrB,MAAME,WAAW,GAAG,CAACpB,EAAE,CAACqB,QAAQ,IAAI,CAAC,IAAI7F,IAAI,CAACC,EAAE,GAAG,GAAG;MACtDV,GAAG,CAACuG,MAAM,CAACF,WAAW,CAAC;MACvBrG,GAAG,CAACoG,SAAS,CAAC,CAACF,EAAE,EAAE,CAACC,EAAE,CAAC;;MAEvB;MACA,IAAIlB,EAAE,CAAC1D,IAAI,KAAK,OAAO,EAAE;QACvB,MAAM6D,GAAG,GAAGZ,UAAU,CAACS,EAAE,CAACE,EAAE,CAAC;QAC7B,IAAIC,GAAG,EAAE;UACPpF,GAAG,CAACwG,SAAS,CAACpB,GAAG,EAAEH,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;UACpC,IAAIsE,GAAG,KAAKxC,WAAW,EAAE;YACvBxD,GAAG,CAACyG,WAAW,GAAG,SAAS;YAC3BzG,GAAG,CAAC+F,SAAS,GAAG,CAAC;YACjB/F,GAAG,CAAC0G,UAAU,CAACzB,EAAE,CAAChF,CAAC,GAAG,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,GAAG,CAAC,EAAEuB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC;YAChDiF,WAAW,CAAC3G,GAAG,EAAEiF,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;UACpC;QACF;QACF;MACA,CAAC,MAAM,IAAIuD,EAAE,CAAC1D,IAAI,KAAK,MAAM,EAAE;QAC7BvB,GAAG,CAAC2B,IAAI,GAAG,GAAGsD,EAAE,CAACnD,QAAQ,IAAI,EAAE,UAAU;QACzC9B,GAAG,CAACkB,SAAS,GAAG+D,EAAE,CAAC5E,KAAK;QACxBL,GAAG,CAAC4G,QAAQ,CAAC3B,EAAE,CAACzD,IAAI,EAAEyD,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,IAAI+E,EAAE,CAACnD,QAAQ,IAAI,EAAE,CAAC,CAAC;QACvD,MAAM+E,IAAI,GAAG5B,EAAE,CAACxD,CAAC;QACjB,MAAMqF,IAAI,GAAG7B,EAAE,CAACvD,CAAC,IAAI,CAACuD,EAAE,CAACnD,QAAQ,IAAI,EAAE,IAAI,CAAC;QAC5C,IAAIkE,GAAG,KAAKxC,WAAW,EAAE;UACvBxD,GAAG,CAACyG,WAAW,GAAG,SAAS;UAC3BzG,GAAG,CAAC0G,UAAU,CAACzB,EAAE,CAAChF,CAAC,GAAG,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,GAAG,CAAC,EAAE2G,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,CAAC;UACtDH,WAAW,CAAC3G,GAAG,EAAEiF,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,EAAE2G,IAAI,EAAEC,IAAI,CAAC;QAC1C;QACF;MACA,CAAC,MAAM;QACL9G,GAAG,CAACkB,SAAS,GAAG+D,EAAE,CAAC5E,KAAK;QACxBL,GAAG,CAACyG,WAAW,GAAGxB,EAAE,CAAC5E,KAAK;QAE1B,QAAO4E,EAAE,CAAC1D,IAAI;UACZ,KAAK,WAAW;UAChB,KAAK,QAAQ;YACXvB,GAAG,CAAC+G,QAAQ,CAAC9B,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;YAC9B;UACF,KAAK,QAAQ;YACX1B,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACgH,GAAG,CAAC/B,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGhB,IAAI,CAACC,EAAE,CAAC;YAC1DV,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,MAAM;YACTnB,GAAG,CAACiG,IAAI,CAAC,CAAC;YACVjG,GAAG,CAACoG,SAAS,CAACnB,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YACzC1B,GAAG,CAACiH,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;YACjBjH,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACgH,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEtF,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGjB,IAAI,CAACC,EAAE,CAAC;YACpCV,GAAG,CAACkH,OAAO,CAAC,CAAC;YACblH,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,UAAU;YACbnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAACkE,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YAC1B1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YAC9B1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,CAAC;YAC9BF,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,eAAe;YAClBnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAACkE,EAAE,CAAChF,CAAC,GAAG,EAAE,EAAEgF,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YAC/B1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,EAAE,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YACnC1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,CAAC;YAC1BF,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,CAAC;YACtBF,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,SAAS;YACZnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAACkE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,CAAC;YAC9BF,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAC9B1B,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,WAAW;YACdnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAACkE,EAAE,CAAChF,CAAC,GAAG,EAAE,EAAEgF,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YAC/B1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,EAAE,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YACnC1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,CAAC;YAC1BF,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,CAAC;YACtBF,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,MAAM;YACTnB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACe,MAAM,CAACkE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,CAAC;YAC9BF,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,CAAC;YAClC1B,GAAG,CAACgB,MAAM,CAACiE,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC,CAAC;YAC9B1B,GAAG,CAACiB,SAAS,CAAC,CAAC;YACfjB,GAAG,CAACmB,IAAI,CAAC,CAAC;YACV;UACF,KAAK,UAAU;UACf,KAAK,SAAS;UACd,KAAK,UAAU;UACf,KAAK,SAAS;UACd,KAAK,SAAS;UACd,KAAK,SAAS;YACZ,MAAMf,KAAK,GAAG;cACZ+G,QAAQ,EAAE,CAAC;cACXC,OAAO,EAAE,CAAC;cACVC,QAAQ,EAAE,CAAC;cACXC,OAAO,EAAE,CAAC;cACVC,OAAO,EAAE,CAAC;cACVC,OAAO,EAAE;YACX,CAAC,CAACvC,EAAE,CAAC1D,IAAI,CAAC;YACVxB,WAAW,CAACC,GAAG,EAAEiF,EAAE,CAAChF,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEwD,EAAE,CAAC/E,CAAC,GAAGwB,CAAC,GAAG,CAAC,EAAEjB,IAAI,CAACgH,GAAG,CAAChG,CAAC,EAAEC,CAAC,CAAC,GAAG,CAAC,EAAEtB,KAAK,EAAE6E,EAAE,CAAC5E,KAAK,CAAC;YACjF;UACF;YACE;QACJ;QAEA,IAAG2F,GAAG,KAAKxC,WAAW,EAAE;UACtBxD,GAAG,CAACyG,WAAW,GAAG,SAAS;UAC3BzG,GAAG,CAAC+F,SAAS,GAAG,CAAC;UACjB/F,GAAG,CAAC0G,UAAU,CAACzB,EAAE,CAAChF,CAAC,GAAG,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,GAAG,CAAC,EAAEuB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC;UAChDiF,WAAW,CAAC3G,GAAG,EAAEiF,EAAE,CAAChF,CAAC,EAAEgF,EAAE,CAAC/E,CAAC,EAAEuB,CAAC,EAAEC,CAAC,CAAC;QACpC;MACF;MACA1B,GAAG,CAACkH,OAAO,CAAC,CAAC;IACf,CAAC,CAAC;IAEF7C,KAAK,CAACW,OAAO,CAAC0C,IAAI,IAAI;MACpB1H,GAAG,CAACM,SAAS,CAAC,CAAC;MACfN,GAAG,CAACyG,WAAW,GAAGiB,IAAI,CAACC,IAAI,KAAK,QAAQ,GAAG,eAAe,GAAGD,IAAI,CAACrH,KAAK,IAAI,MAAM;MACjFL,GAAG,CAAC+F,SAAS,GAAG2B,IAAI,CAACE,IAAI,IAAI,CAAC;MAC9B5H,GAAG,CAAC6H,wBAAwB,GAAGH,IAAI,CAACC,IAAI,KAAK,QAAQ,GAAG,iBAAiB,GAAG,aAAa;MACzFD,IAAI,CAACI,MAAM,CAAC9C,OAAO,CAAC,CAAC,CAAC/E,CAAC,EAACC,CAAC,CAAC,EAAEK,CAAC,KAAK;QAChC,IAAGA,CAAC,KAAG,CAAC,EAAEP,GAAG,CAACe,MAAM,CAACd,CAAC,EAACC,CAAC,CAAC,CAAC,KACrBF,GAAG,CAACgB,MAAM,CAACf,CAAC,EAACC,CAAC,CAAC;MACtB,CAAC,CAAC;MACFF,GAAG,CAAC+H,MAAM,CAAC,CAAC;MACZ/H,GAAG,CAAC6H,wBAAwB,GAAG,aAAa;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1D,QAAQ,EAAEE,KAAK,EAAEG,UAAU,EAAEhB,WAAW,CAAC,CAAC;EAE9C,SAASmD,WAAWA,CAAC3G,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEuB,CAAC,EAAEC,CAAC,EAAE;IACpC,MAAMsG,OAAO,GAAG,CACd,CAAC/H,CAAC,GAAGmB,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGkB,WAAW,GAAG,CAAC,CAAC,EAC1C,CAACnB,CAAC,GAAGwB,CAAC,GAAGL,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGkB,WAAW,GAAG,CAAC,CAAC,EAC9C,CAACnB,CAAC,GAAGmB,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGwB,CAAC,GAAGN,WAAW,GAAG,CAAC,CAAC,EAC9C,CAACnB,CAAC,GAAGwB,CAAC,GAAGL,WAAW,GAAG,CAAC,EAAElB,CAAC,GAAGwB,CAAC,GAAGN,WAAW,GAAG,CAAC,CAAC,CACnD;IACD4G,OAAO,CAAChD,OAAO,CAAC,CAAC,CAACiD,EAAE,EAAEC,EAAE,CAAC,KAAK;MAC5BlI,GAAG,CAACkB,SAAS,GAAG,MAAM;MACtBlB,GAAG,CAACyG,WAAW,GAAG,MAAM;MACxBzG,GAAG,CAAC+F,SAAS,GAAG,CAAC;MACjB/F,GAAG,CAAC+G,QAAQ,CAACkB,EAAE,EAAEC,EAAE,EAAE9G,WAAW,EAAEA,WAAW,CAAC;MAC9CpB,GAAG,CAAC0G,UAAU,CAACuB,EAAE,EAAEC,EAAE,EAAE9G,WAAW,EAAEA,WAAW,CAAC;IAClD,CAAC,CAAC;EACJ;;EAEA;;EAGA,MAAM+G,gBAAgB,GAAIC,CAAC,IAAK;IAC9BzD,OAAO,CAACyD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAAC7D,IAAI,EAAE;MACT8D,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IACAzD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAM0D,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEjE,IAAI,CAAC;IAC7B+D,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,sBAAsB,CAAC,CAAC,CAAC;;IAE1D,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0DAA0D,EAAE;QAClFC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7BpE,eAAe,CAACmE,IAAI,CAACE,UAAU,CAAC;MAChCV,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCX,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,SAAS;MACRzD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMsE,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACzE,YAAY,EAAE;MACjB4D,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IACA,MAAMc,UAAU,GAAG;MACjBC,KAAK,EAAE,iBAAiB;MACxBnF,QAAQ,EAAE,CAAC,wCAAwC;MACnDoF,SAAS,EAAE5E;IACb,CAAC;IACDwE,OAAO,CAACK,GAAG,CAAC,uBAAuB,EAAEH,UAAU,CAAC;IAChD;EACF,CAAC;EAED,oBACE1J,OAAA;IAAK8J,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAGrC/J,OAAA;MAAO8J,SAAS,EAAC,2DAA2D;MAAAC,QAAA,gBAI1E/J,OAAA;QAAK8J,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChD/J,OAAA;UAAO8J,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpEnK,OAAA;UAAO2B,IAAI,EAAC,MAAM;UAACyI,MAAM,EAAC,SAAS;UAACC,QAAQ,EAAE9B,gBAAiB;UAACuB,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnFnK,OAAA;UAAQsK,OAAO,EAAE3B,uBAAwB;UAAC4B,QAAQ,EAAErF,SAAU;UAAC4E,SAAS,EAAC,iDAAiD;UAAAC,QAAA,EACvH7E,SAAS,GAAG,cAAc,GAAG;QAAkB;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,EACRnF,YAAY,iBAAIhF,OAAA;UAAKsF,GAAG,EAAEN,YAAa;UAACwF,GAAG,EAAC,mBAAmB;UAACvI,KAAK,EAAE,GAAI;UAAC6H,SAAS,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1GnK,OAAA;UAAQsK,OAAO,EAAEb,UAAW;UAACc,QAAQ,EAAE,CAACvF,YAAa;UAAC8E,SAAS,EAAC,kDAAkD;UAAAC,QAAA,EAAC;QAEnH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNnK,OAAA;QAAQ8J,SAAS,EAAC,uDAAuD;QAACQ,OAAO,EAAEA,CAAA,KAAM7H,YAAY,CAACqD,OAAO,CAAC2E,KAAK,CAAC,CAAE;QAAAV,QAAA,EAAC;MAEvH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnK,OAAA;QACE0K,GAAG,EAAEjI,YAAa;QAClBd,IAAI,EAAC,MAAM;QACXyI,MAAM,EAAC,SAAS;QAChBC,QAAQ,EAAG7B,CAAC,IAAK;UACf,MAAM1D,IAAI,GAAG0D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;UAC9B,IAAI,CAAC5D,IAAI,EAAE;UACX,MAAM6F,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;UAC/BD,MAAM,CAAChF,MAAM,GAAIkF,KAAK,IAAK;YACzB,MAAMC,UAAU,GAAG;cACjBvF,EAAE,EAAE9D,MAAM,EAAE;cACZE,IAAI,EAAE,OAAO;cACbtB,CAAC,EAAE,EAAE;cACLC,CAAC,EAAE,EAAE;cACLuB,CAAC,EAAE,GAAG;cACNC,CAAC,EAAE,GAAG;cACNwD,GAAG,EAAEuF,KAAK,CAACpC,MAAM,CAACsC,MAAM;cACxBrE,QAAQ,EAAE;YACZ,CAAC;YACDsE,SAAS,CAAC,CAAC,GAAGzG,QAAQ,EAAEuG,UAAU,CAAC,EAAErG,KAAK,CAAC;UAC7C,CAAC;UACDkG,MAAM,CAACM,aAAa,CAACnG,IAAI,CAAC;UAC1B0D,CAAC,CAACC,MAAM,CAACyC,KAAK,GAAG,EAAE;QACrB,CAAE;QACFC,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAERnK,OAAA;MAAM8J,SAAS,EAAC,yCAAyC;MAAAC,QAAA,eACvD/J,OAAA;QACE0K,GAAG,EAAElI,SAAU;QACfP,KAAK,EAAE,IAAK;QACZgE,MAAM,EAAE,GAAI;QACZkF,KAAK,EAAE;UAAEE,UAAU,EAAE,MAAM;UAAEC,MAAM,EAAE,gBAAgB;UAAEC,SAAS,EAAE;QAAS,CAAE;QAC7EC,WAAW,EAAEC,qBAAsB;QACnCC,WAAW,EAAEC,qBAAsB;QACnCC,SAAS,EAAEC,mBAAoB;QAC/BC,YAAY,EAAED;MAAoB;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9H,EAAA,CAxUIF,YAAY;AAAA4J,EAAA,GAAZ5J,YAAY;AA0UlB,eAAeA,YAAY;AAAC,IAAA4J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}