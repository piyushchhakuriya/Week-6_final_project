{"ast":null,"code":"import { Util } from \"../Util.js\";\nimport { Factory } from \"../Factory.js\";\nimport { Shape } from \"../Shape.js\";\nimport { _registerNode } from \"../Global.js\";\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator } from \"../Validators.js\";\nexport class Image extends Shape {\n  constructor(attrs) {\n    super(attrs);\n    this._loadListener = () => {\n      this._requestDraw();\n    };\n    this.on('imageChange.konva', props => {\n      this._removeImageLoad(props.oldVal);\n      this._setImageLoad();\n    });\n    this._setImageLoad();\n  }\n  _setImageLoad() {\n    const image = this.image();\n    if (image && image.complete) {\n      return;\n    }\n    if (image && image.readyState === 4) {\n      return;\n    }\n    if (image && image['addEventListener']) {\n      image['addEventListener']('load', this._loadListener);\n    }\n  }\n  _removeImageLoad(image) {\n    if (image && image['removeEventListener']) {\n      image['removeEventListener']('load', this._loadListener);\n    }\n  }\n  destroy() {\n    this._removeImageLoad(this.image());\n    super.destroy();\n    return this;\n  }\n  _useBufferCanvas() {\n    const hasCornerRadius = !!this.cornerRadius();\n    const hasShadow = this.hasShadow();\n    if (hasCornerRadius && hasShadow) {\n      return true;\n    }\n    return super._useBufferCanvas(true);\n  }\n  _sceneFunc(context) {\n    const width = this.getWidth();\n    const height = this.getHeight();\n    const cornerRadius = this.cornerRadius();\n    const image = this.attrs.image;\n    let params;\n    if (image) {\n      const cropWidth = this.attrs.cropWidth;\n      const cropHeight = this.attrs.cropHeight;\n      if (cropWidth && cropHeight) {\n        params = [image, this.cropX(), this.cropY(), cropWidth, cropHeight, 0, 0, width, height];\n      } else {\n        params = [image, 0, 0, width, height];\n      }\n    }\n    if (this.hasFill() || this.hasStroke() || cornerRadius) {\n      context.beginPath();\n      cornerRadius ? Util.drawRoundedRectPath(context, width, height, cornerRadius) : context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n    if (image) {\n      if (cornerRadius) {\n        context.clip();\n      }\n      context.drawImage.apply(context, params);\n    }\n  }\n  _hitFunc(context) {\n    const width = this.width(),\n      height = this.height(),\n      cornerRadius = this.cornerRadius();\n    context.beginPath();\n    if (!cornerRadius) {\n      context.rect(0, 0, width, height);\n    } else {\n      Util.drawRoundedRectPath(context, width, height, cornerRadius);\n    }\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    var _a, _b;\n    return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n  }\n  getHeight() {\n    var _a, _b;\n    return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n  }\n  static fromURL(url, callback, onError = null) {\n    const img = Util.createImageElement();\n    img.onload = function () {\n      const image = new Image({\n        image: img\n      });\n      callback(image);\n    };\n    img.onerror = onError;\n    img.crossOrigin = 'Anonymous';\n    img.src = url;\n  }\n}\nImage.prototype.className = 'Image';\n_registerNode(Image);\nFactory.addGetterSetter(Image, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\nFactory.addGetterSetter(Image, 'image');\nFactory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Image, 'cropX', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropY', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropHeight', 0, getNumberValidator());","map":{"version":3,"names":["Util","Factory","Shape","_registerNode","getNumberOrArrayOfNumbersValidator","getNumberValidator","Image","constructor","attrs","_loadListener","_requestDraw","on","props","_removeImageLoad","oldVal","_setImageLoad","image","complete","readyState","destroy","_useBufferCanvas","hasCornerRadius","cornerRadius","hasShadow","_sceneFunc","context","width","getWidth","height","getHeight","params","cropWidth","cropHeight","cropX","cropY","hasFill","hasStroke","beginPath","drawRoundedRectPath","rect","closePath","fillStrokeShape","clip","drawImage","apply","_hitFunc","_a","_b","fromURL","url","callback","onError","img","createImageElement","onload","onerror","crossOrigin","src","prototype","className","addGetterSetter","addComponentsGetterSetter"],"sources":["C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/konva/lib/shapes/Image.js"],"sourcesContent":["import { Util } from \"../Util.js\";\r\nimport { Factory } from \"../Factory.js\";\r\nimport { Shape } from \"../Shape.js\";\r\nimport { _registerNode } from \"../Global.js\";\r\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from \"../Validators.js\";\r\nexport class Image extends Shape {\r\n    constructor(attrs) {\r\n        super(attrs);\r\n        this._loadListener = () => {\r\n            this._requestDraw();\r\n        };\r\n        this.on('imageChange.konva', (props) => {\r\n            this._removeImageLoad(props.oldVal);\r\n            this._setImageLoad();\r\n        });\r\n        this._setImageLoad();\r\n    }\r\n    _setImageLoad() {\r\n        const image = this.image();\r\n        if (image && image.complete) {\r\n            return;\r\n        }\r\n        if (image && image.readyState === 4) {\r\n            return;\r\n        }\r\n        if (image && image['addEventListener']) {\r\n            image['addEventListener']('load', this._loadListener);\r\n        }\r\n    }\r\n    _removeImageLoad(image) {\r\n        if (image && image['removeEventListener']) {\r\n            image['removeEventListener']('load', this._loadListener);\r\n        }\r\n    }\r\n    destroy() {\r\n        this._removeImageLoad(this.image());\r\n        super.destroy();\r\n        return this;\r\n    }\r\n    _useBufferCanvas() {\r\n        const hasCornerRadius = !!this.cornerRadius();\r\n        const hasShadow = this.hasShadow();\r\n        if (hasCornerRadius && hasShadow) {\r\n            return true;\r\n        }\r\n        return super._useBufferCanvas(true);\r\n    }\r\n    _sceneFunc(context) {\r\n        const width = this.getWidth();\r\n        const height = this.getHeight();\r\n        const cornerRadius = this.cornerRadius();\r\n        const image = this.attrs.image;\r\n        let params;\r\n        if (image) {\r\n            const cropWidth = this.attrs.cropWidth;\r\n            const cropHeight = this.attrs.cropHeight;\r\n            if (cropWidth && cropHeight) {\r\n                params = [\r\n                    image,\r\n                    this.cropX(),\r\n                    this.cropY(),\r\n                    cropWidth,\r\n                    cropHeight,\r\n                    0,\r\n                    0,\r\n                    width,\r\n                    height,\r\n                ];\r\n            }\r\n            else {\r\n                params = [image, 0, 0, width, height];\r\n            }\r\n        }\r\n        if (this.hasFill() || this.hasStroke() || cornerRadius) {\r\n            context.beginPath();\r\n            cornerRadius\r\n                ? Util.drawRoundedRectPath(context, width, height, cornerRadius)\r\n                : context.rect(0, 0, width, height);\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        if (image) {\r\n            if (cornerRadius) {\r\n                context.clip();\r\n            }\r\n            context.drawImage.apply(context, params);\r\n        }\r\n    }\r\n    _hitFunc(context) {\r\n        const width = this.width(), height = this.height(), cornerRadius = this.cornerRadius();\r\n        context.beginPath();\r\n        if (!cornerRadius) {\r\n            context.rect(0, 0, width, height);\r\n        }\r\n        else {\r\n            Util.drawRoundedRectPath(context, width, height, cornerRadius);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        var _a, _b;\r\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\r\n    }\r\n    getHeight() {\r\n        var _a, _b;\r\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\r\n    }\r\n    static fromURL(url, callback, onError = null) {\r\n        const img = Util.createImageElement();\r\n        img.onload = function () {\r\n            const image = new Image({\r\n                image: img,\r\n            });\r\n            callback(image);\r\n        };\r\n        img.onerror = onError;\r\n        img.crossOrigin = 'Anonymous';\r\n        img.src = url;\r\n    }\r\n}\r\nImage.prototype.className = 'Image';\r\n_registerNode(Image);\r\nFactory.addGetterSetter(Image, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\r\nFactory.addGetterSetter(Image, 'image');\r\nFactory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\r\nFactory.addGetterSetter(Image, 'cropX', 0, getNumberValidator());\r\nFactory.addGetterSetter(Image, 'cropY', 0, getNumberValidator());\r\nFactory.addGetterSetter(Image, 'cropWidth', 0, getNumberValidator());\r\nFactory.addGetterSetter(Image, 'cropHeight', 0, getNumberValidator());\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}