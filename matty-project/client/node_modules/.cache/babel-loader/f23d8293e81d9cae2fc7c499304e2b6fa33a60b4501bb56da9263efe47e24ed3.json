{"ast":null,"code":"import { Konva } from \"./Global.js\";\nconst NODE_ERROR = \"Konva.js unsupported environment.\\n\\nLooks like you are trying to use Konva.js in Node.js environment. because \\\"document\\\" object is undefined.\\n\\nTo use Konva.js in Node.js environment, you need to use the \\\"canvas-backend\\\" or \\\"skia-backend\\\" module.\\n\\nbash: npm install canvas\\njs: import \\\"konva/canvas-backend\\\";\\n\\nor\\n\\nbash: npm install skia-canvas\\njs: import \\\"konva/skia-backend\\\";\\n\";\nconst ensureBrowser = () => {\n  if (typeof document === 'undefined') {\n    throw new Error(NODE_ERROR);\n  }\n};\nexport class Transform {\n  constructor() {\n    let m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [1, 0, 0, 1, 0, 0];\n    this.dirty = false;\n    this.m = m && m.slice() || [1, 0, 0, 1, 0, 0];\n  }\n  reset() {\n    this.m[0] = 1;\n    this.m[1] = 0;\n    this.m[2] = 0;\n    this.m[3] = 1;\n    this.m[4] = 0;\n    this.m[5] = 0;\n  }\n  copy() {\n    return new Transform(this.m);\n  }\n  copyInto(tr) {\n    tr.m[0] = this.m[0];\n    tr.m[1] = this.m[1];\n    tr.m[2] = this.m[2];\n    tr.m[3] = this.m[3];\n    tr.m[4] = this.m[4];\n    tr.m[5] = this.m[5];\n  }\n  point(point) {\n    const m = this.m;\n    return {\n      x: m[0] * point.x + m[2] * point.y + m[4],\n      y: m[1] * point.x + m[3] * point.y + m[5]\n    };\n  }\n  translate(x, y) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  }\n  scale(sx, sy) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  }\n  rotate(rad) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n  getTranslation() {\n    return {\n      x: this.m[4],\n      y: this.m[5]\n    };\n  }\n  skew(sx, sy) {\n    const m11 = this.m[0] + this.m[2] * sy;\n    const m12 = this.m[1] + this.m[3] * sy;\n    const m21 = this.m[2] + this.m[0] * sx;\n    const m22 = this.m[3] + this.m[1] * sx;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n  multiply(matrix) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  }\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  }\n  getMatrix() {\n    return this.m;\n  }\n  decompose() {\n    const a = this.m[0];\n    const b = this.m[1];\n    const c = this.m[2];\n    const d = this.m[3];\n    const e = this.m[4];\n    const f = this.m[5];\n    const delta = a * d - b * c;\n    const result = {\n      x: e,\n      y: f,\n      rotation: 0,\n      scaleX: 0,\n      scaleY: 0,\n      skewX: 0,\n      skewY: 0\n    };\n    if (a != 0 || b != 0) {\n      const r = Math.sqrt(a * a + b * b);\n      result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n      result.scaleX = r;\n      result.scaleY = delta / r;\n      result.skewX = (a * c + b * d) / delta;\n      result.skewY = 0;\n    } else if (c != 0 || d != 0) {\n      const s = Math.sqrt(c * c + d * d);\n      result.rotation = Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n      result.scaleX = delta / s;\n      result.scaleY = s;\n      result.skewX = 0;\n      result.skewY = (a * c + b * d) / delta;\n    } else {}\n    result.rotation = Util._getRotation(result.rotation);\n    return result;\n  }\n}\nconst OBJECT_ARRAY = '[object Array]',\n  OBJECT_NUMBER = '[object Number]',\n  OBJECT_STRING = '[object String]',\n  OBJECT_BOOLEAN = '[object Boolean]',\n  PI_OVER_DEG180 = Math.PI / 180,\n  DEG180_OVER_PI = 180 / Math.PI,\n  HASH = '#',\n  EMPTY_STRING = '',\n  ZERO = '0',\n  KONVA_WARNING = 'Konva warning: ',\n  KONVA_ERROR = 'Konva error: ',\n  RGB_PAREN = 'rgb(',\n  COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5]\n  },\n  RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\nlet animQueue = [];\nconst req = typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || function (f) {\n  setTimeout(f, 60);\n};\nexport const Util = {\n  _isElement(obj) {\n    return !!(obj && obj.nodeType == 1);\n  },\n  _isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  },\n  _isPlainObject(obj) {\n    return !!obj && obj.constructor === Object;\n  },\n  _isArray(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n  },\n  _isNumber(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_NUMBER && !isNaN(obj) && isFinite(obj);\n  },\n  _isString(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_STRING;\n  },\n  _isBoolean(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n  },\n  isObject(val) {\n    return val instanceof Object;\n  },\n  isValidSelector(selector) {\n    if (typeof selector !== 'string') {\n      return false;\n    }\n    const firstChar = selector[0];\n    return firstChar === '#' || firstChar === '.' || firstChar === firstChar.toUpperCase();\n  },\n  _sign(number) {\n    if (number === 0) {\n      return 1;\n    }\n    if (number > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  },\n  requestAnimFrame(callback) {\n    animQueue.push(callback);\n    if (animQueue.length === 1) {\n      req(function () {\n        const queue = animQueue;\n        animQueue = [];\n        queue.forEach(function (cb) {\n          cb();\n        });\n      });\n    }\n  },\n  createCanvasElement() {\n    ensureBrowser();\n    const canvas = document.createElement('canvas');\n    try {\n      canvas.style = canvas.style || {};\n    } catch (e) {}\n    return canvas;\n  },\n  createImageElement() {\n    ensureBrowser();\n    return document.createElement('img');\n  },\n  _isInDocument(el) {\n    while (el = el.parentNode) {\n      if (el == document) {\n        return true;\n      }\n    }\n    return false;\n  },\n  _urlToImage(url, callback) {\n    const imageObj = Util.createImageElement();\n    imageObj.onload = function () {\n      callback(imageObj);\n    };\n    imageObj.src = url;\n  },\n  _rgbToHex(r, g, b) {\n    return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  },\n  _hexToRgb(hex) {\n    hex = hex.replace(HASH, EMPTY_STRING);\n    const bigint = parseInt(hex, 16);\n    return {\n      r: bigint >> 16 & 255,\n      g: bigint >> 8 & 255,\n      b: bigint & 255\n    };\n  },\n  getRandomColor() {\n    let randColor = (Math.random() * 0xffffff << 0).toString(16);\n    while (randColor.length < 6) {\n      randColor = ZERO + randColor;\n    }\n    return HASH + randColor;\n  },\n  getRGB(color) {\n    let rgb;\n    if (color in COLORS) {\n      rgb = COLORS[color];\n      return {\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2]\n      };\n    } else if (color[0] === HASH) {\n      return this._hexToRgb(color.substring(1));\n    } else if (color.substr(0, 4) === RGB_PAREN) {\n      rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n      return {\n        r: parseInt(rgb[1], 10),\n        g: parseInt(rgb[2], 10),\n        b: parseInt(rgb[3], 10)\n      };\n    } else {\n      return {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n    }\n  },\n  colorToRGBA(str) {\n    str = str || 'black';\n    return Util._namedColorToRBA(str) || Util._hex3ColorToRGBA(str) || Util._hex4ColorToRGBA(str) || Util._hex6ColorToRGBA(str) || Util._hex8ColorToRGBA(str) || Util._rgbColorToRGBA(str) || Util._rgbaColorToRGBA(str) || Util._hslColorToRGBA(str);\n  },\n  _namedColorToRBA(str) {\n    const c = COLORS[str.toLowerCase()];\n    if (!c) {\n      return null;\n    }\n    return {\n      r: c[0],\n      g: c[1],\n      b: c[2],\n      a: 1\n    };\n  },\n  _rgbColorToRGBA(str) {\n    if (str.indexOf('rgb(') === 0) {\n      str = str.match(/rgb\\(([^)]+)\\)/)[1];\n      const parts = str.split(/ *, */).map(Number);\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: 1\n      };\n    }\n  },\n  _rgbaColorToRGBA(str) {\n    if (str.indexOf('rgba(') === 0) {\n      str = str.match(/rgba\\(([^)]+)\\)/)[1];\n      const parts = str.split(/ *, */).map((n, index) => {\n        if (n.slice(-1) === '%') {\n          return index === 3 ? parseInt(n) / 100 : parseInt(n) / 100 * 255;\n        }\n        return Number(n);\n      });\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: parts[3]\n      };\n    }\n  },\n  _hex8ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 9) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: parseInt(str.slice(7, 9), 16) / 0xff\n      };\n    }\n  },\n  _hex6ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 7) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: 1\n      };\n    }\n  },\n  _hex4ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 5) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: parseInt(str[4] + str[4], 16) / 0xff\n      };\n    }\n  },\n  _hex3ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 4) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: 1\n      };\n    }\n  },\n  _hslColorToRGBA(str) {\n    if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n      const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n      const h = Number(hsl[0]) / 360;\n      const s = Number(hsl[1]) / 100;\n      const l = Number(hsl[2]) / 100;\n      let t2;\n      let t3;\n      let val;\n      if (s === 0) {\n        val = l * 255;\n        return {\n          r: Math.round(val),\n          g: Math.round(val),\n          b: Math.round(val),\n          a: 1\n        };\n      }\n      if (l < 0.5) {\n        t2 = l * (1 + s);\n      } else {\n        t2 = l + s - l * s;\n      }\n      const t1 = 2 * l - t2;\n      const rgb = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        t3 = h + 1 / 3 * -(i - 1);\n        if (t3 < 0) {\n          t3++;\n        }\n        if (t3 > 1) {\n          t3--;\n        }\n        if (6 * t3 < 1) {\n          val = t1 + (t2 - t1) * 6 * t3;\n        } else if (2 * t3 < 1) {\n          val = t2;\n        } else if (3 * t3 < 2) {\n          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        } else {\n          val = t1;\n        }\n        rgb[i] = val * 255;\n      }\n      return {\n        r: Math.round(rgb[0]),\n        g: Math.round(rgb[1]),\n        b: Math.round(rgb[2]),\n        a: 1\n      };\n    }\n  },\n  haveIntersection(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n  },\n  cloneObject(obj) {\n    const retObj = {};\n    for (const key in obj) {\n      if (this._isPlainObject(obj[key])) {\n        retObj[key] = this.cloneObject(obj[key]);\n      } else if (this._isArray(obj[key])) {\n        retObj[key] = this.cloneArray(obj[key]);\n      } else {\n        retObj[key] = obj[key];\n      }\n    }\n    return retObj;\n  },\n  cloneArray(arr) {\n    return arr.slice(0);\n  },\n  degToRad(deg) {\n    return deg * PI_OVER_DEG180;\n  },\n  radToDeg(rad) {\n    return rad * DEG180_OVER_PI;\n  },\n  _degToRad(deg) {\n    Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n    return Util.degToRad(deg);\n  },\n  _radToDeg(rad) {\n    Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n    return Util.radToDeg(rad);\n  },\n  _getRotation(radians) {\n    return Konva.angleDeg ? Util.radToDeg(radians) : radians;\n  },\n  _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n  throw(str) {\n    throw new Error(KONVA_ERROR + str);\n  },\n  error(str) {\n    console.error(KONVA_ERROR + str);\n  },\n  warn(str) {\n    if (!Konva.showWarnings) {\n      return;\n    }\n    console.warn(KONVA_WARNING + str);\n  },\n  each(obj, func) {\n    for (const key in obj) {\n      func(key, obj[key]);\n    }\n  },\n  _inRange(val, left, right) {\n    return left <= val && val < right;\n  },\n  _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n    let x, y, dist;\n    const pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    if (pd2 == 0) {\n      x = x1;\n      y = y1;\n      dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n    } else {\n      const u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n      if (u < 0) {\n        x = x1;\n        y = y1;\n        dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n      } else if (u > 1.0) {\n        x = x2;\n        y = y2;\n        dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n      } else {\n        x = x1 + u * (x2 - x1);\n        y = y1 + u * (y2 - y1);\n        dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n      }\n    }\n    return [x, y, dist];\n  },\n  _getProjectionToLine(pt, line, isClosed) {\n    const pc = Util.cloneObject(pt);\n    let dist = Number.MAX_VALUE;\n    line.forEach(function (p1, i) {\n      if (!isClosed && i === line.length - 1) {\n        return;\n      }\n      const p2 = line[(i + 1) % line.length];\n      const proj = Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n      const px = proj[0],\n        py = proj[1],\n        pdist = proj[2];\n      if (pdist < dist) {\n        pc.x = px;\n        pc.y = py;\n        dist = pdist;\n      }\n    });\n    return pc;\n  },\n  _prepareArrayForTween(startArray, endArray, isClosed) {\n    const start = [],\n      end = [];\n    if (startArray.length > endArray.length) {\n      const temp = endArray;\n      endArray = startArray;\n      startArray = temp;\n    }\n    for (let n = 0; n < startArray.length; n += 2) {\n      start.push({\n        x: startArray[n],\n        y: startArray[n + 1]\n      });\n    }\n    for (let n = 0; n < endArray.length; n += 2) {\n      end.push({\n        x: endArray[n],\n        y: endArray[n + 1]\n      });\n    }\n    const newStart = [];\n    end.forEach(function (point) {\n      const pr = Util._getProjectionToLine(point, start, isClosed);\n      newStart.push(pr.x);\n      newStart.push(pr.y);\n    });\n    return newStart;\n  },\n  _prepareToStringify(obj) {\n    let desc;\n    obj.visitedByCircularReferenceRemoval = true;\n    for (const key in obj) {\n      if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n        continue;\n      }\n      desc = Object.getOwnPropertyDescriptor(obj, key);\n      if (obj[key].visitedByCircularReferenceRemoval || Util._isElement(obj[key])) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      } else if (Util._prepareToStringify(obj[key]) === null) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      }\n    }\n    delete obj.visitedByCircularReferenceRemoval;\n    return obj;\n  },\n  _assign(target, source) {\n    for (const key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  },\n  _getFirstPointerId(evt) {\n    if (!evt.touches) {\n      return evt.pointerId || 999;\n    } else {\n      return evt.changedTouches[0].identifier;\n    }\n  },\n  releaseCanvas() {\n    if (!Konva.releaseCanvasOnDestroy) return;\n    for (var _len = arguments.length, canvases = new Array(_len), _key = 0; _key < _len; _key++) {\n      canvases[_key] = arguments[_key];\n    }\n    canvases.forEach(c => {\n      c.width = 0;\n      c.height = 0;\n    });\n  },\n  drawRoundedRectPath(context, width, height, cornerRadius) {\n    let xOrigin = width < 0 ? width : 0;\n    let yOrigin = height < 0 ? height : 0;\n    width = Math.abs(width);\n    height = Math.abs(height);\n    let topLeft = 0;\n    let topRight = 0;\n    let bottomLeft = 0;\n    let bottomRight = 0;\n    if (typeof cornerRadius === 'number') {\n      topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n    } else {\n      topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n      topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n      bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n      bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n    }\n    context.moveTo(xOrigin + topLeft, yOrigin);\n    context.lineTo(xOrigin + width - topRight, yOrigin);\n    context.arc(xOrigin + width - topRight, yOrigin + topRight, topRight, Math.PI * 3 / 2, 0, false);\n    context.lineTo(xOrigin + width, yOrigin + height - bottomRight);\n    context.arc(xOrigin + width - bottomRight, yOrigin + height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n    context.lineTo(xOrigin + bottomLeft, yOrigin + height);\n    context.arc(xOrigin + bottomLeft, yOrigin + height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n    context.lineTo(xOrigin, yOrigin + topLeft);\n    context.arc(xOrigin + topLeft, yOrigin + topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n  },\n  drawRoundedPolygonPath(context, points, sides, radius, cornerRadius) {\n    radius = Math.abs(radius);\n    for (let i = 0; i < sides; i++) {\n      const prev = points[(i - 1 + sides) % sides];\n      const curr = points[i];\n      const next = points[(i + 1) % sides];\n      const vec1 = {\n        x: curr.x - prev.x,\n        y: curr.y - prev.y\n      };\n      const vec2 = {\n        x: next.x - curr.x,\n        y: next.y - curr.y\n      };\n      const len1 = Math.hypot(vec1.x, vec1.y);\n      const len2 = Math.hypot(vec2.x, vec2.y);\n      let currCornerRadius;\n      if (typeof cornerRadius === 'number') {\n        currCornerRadius = cornerRadius;\n      } else {\n        currCornerRadius = i < cornerRadius.length ? cornerRadius[i] : 0;\n      }\n      const maxCornerRadius = radius * Math.cos(Math.PI / sides);\n      currCornerRadius = maxCornerRadius * Math.min(1, currCornerRadius / radius * 2);\n      const normalVec1 = {\n        x: vec1.x / len1,\n        y: vec1.y / len1\n      };\n      const normalVec2 = {\n        x: vec2.x / len2,\n        y: vec2.y / len2\n      };\n      const p1 = {\n        x: curr.x - normalVec1.x * currCornerRadius,\n        y: curr.y - normalVec1.y * currCornerRadius\n      };\n      const p2 = {\n        x: curr.x + normalVec2.x * currCornerRadius,\n        y: curr.y + normalVec2.y * currCornerRadius\n      };\n      if (i === 0) {\n        context.moveTo(p1.x, p1.y);\n      } else {\n        context.lineTo(p1.x, p1.y);\n      }\n      context.arcTo(curr.x, curr.y, p2.x, p2.y, currCornerRadius);\n    }\n  }\n};","map":{"version":3,"names":["Konva","NODE_ERROR","ensureBrowser","document","Error","Transform","constructor","m","arguments","length","undefined","dirty","slice","reset","copy","copyInto","tr","point","x","y","translate","scale","sx","sy","rotate","rad","c","Math","cos","s","sin","m11","m12","m21","m22","getTranslation","skew","multiply","matrix","dx","dy","invert","d","m0","m1","m2","m3","m4","m5","getMatrix","decompose","a","b","e","f","delta","result","rotation","scaleX","scaleY","skewX","skewY","r","sqrt","acos","PI","Util","_getRotation","OBJECT_ARRAY","OBJECT_NUMBER","OBJECT_STRING","OBJECT_BOOLEAN","PI_OVER_DEG180","DEG180_OVER_PI","HASH","EMPTY_STRING","ZERO","KONVA_WARNING","KONVA_ERROR","RGB_PAREN","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","animQueue","req","requestAnimationFrame","setTimeout","_isElement","obj","nodeType","_isFunction","call","apply","_isPlainObject","Object","_isArray","prototype","toString","_isNumber","isNaN","isFinite","_isString","_isBoolean","isObject","val","isValidSelector","selector","firstChar","toUpperCase","_sign","number","requestAnimFrame","callback","push","queue","forEach","cb","createCanvasElement","canvas","createElement","style","createImageElement","_isInDocument","el","parentNode","_urlToImage","url","imageObj","onload","src","_rgbToHex","g","_hexToRgb","hex","replace","bigint","parseInt","getRandomColor","randColor","random","getRGB","color","rgb","substring","substr","exec","colorToRGBA","str","_namedColorToRBA","_hex3ColorToRGBA","_hex4ColorToRGBA","_hex6ColorToRGBA","_hex8ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","_hslColorToRGBA","toLowerCase","indexOf","match","parts","split","map","Number","n","index","test","_","hsl","h","l","t2","t3","round","t1","i","haveIntersection","r1","r2","width","height","cloneObject","retObj","key","cloneArray","arr","degToRad","deg","radToDeg","_degToRad","warn","_radToDeg","radians","angleDeg","_capitalize","charAt","throw","error","console","showWarnings","each","func","_inRange","left","right","_getProjectionToSegment","x1","y1","x2","y2","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","start","end","temp","newStart","pr","_prepareToStringify","desc","visitedByCircularReferenceRemoval","hasOwnProperty","getOwnPropertyDescriptor","configurable","_assign","target","source","_getFirstPointerId","evt","touches","pointerId","changedTouches","identifier","releaseCanvas","releaseCanvasOnDestroy","_len","canvases","Array","_key","drawRoundedRectPath","context","cornerRadius","xOrigin","yOrigin","abs","topLeft","topRight","bottomLeft","bottomRight","min","moveTo","lineTo","arc","drawRoundedPolygonPath","points","sides","radius","prev","curr","next","vec1","vec2","len1","hypot","len2","currCornerRadius","maxCornerRadius","normalVec1","normalVec2","arcTo"],"sources":["C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/konva/lib/Util.js"],"sourcesContent":["import { Konva } from \"./Global.js\";\r\nconst NODE_ERROR = `Konva.js unsupported environment.\r\n\r\nLooks like you are trying to use Konva.js in Node.js environment. because \"document\" object is undefined.\r\n\r\nTo use Konva.js in Node.js environment, you need to use the \"canvas-backend\" or \"skia-backend\" module.\r\n\r\nbash: npm install canvas\r\njs: import \"konva/canvas-backend\";\r\n\r\nor\r\n\r\nbash: npm install skia-canvas\r\njs: import \"konva/skia-backend\";\r\n`;\r\nconst ensureBrowser = () => {\r\n    if (typeof document === 'undefined') {\r\n        throw new Error(NODE_ERROR);\r\n    }\r\n};\r\nexport class Transform {\r\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\r\n        this.dirty = false;\r\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\r\n    }\r\n    reset() {\r\n        this.m[0] = 1;\r\n        this.m[1] = 0;\r\n        this.m[2] = 0;\r\n        this.m[3] = 1;\r\n        this.m[4] = 0;\r\n        this.m[5] = 0;\r\n    }\r\n    copy() {\r\n        return new Transform(this.m);\r\n    }\r\n    copyInto(tr) {\r\n        tr.m[0] = this.m[0];\r\n        tr.m[1] = this.m[1];\r\n        tr.m[2] = this.m[2];\r\n        tr.m[3] = this.m[3];\r\n        tr.m[4] = this.m[4];\r\n        tr.m[5] = this.m[5];\r\n    }\r\n    point(point) {\r\n        const m = this.m;\r\n        return {\r\n            x: m[0] * point.x + m[2] * point.y + m[4],\r\n            y: m[1] * point.x + m[3] * point.y + m[5],\r\n        };\r\n    }\r\n    translate(x, y) {\r\n        this.m[4] += this.m[0] * x + this.m[2] * y;\r\n        this.m[5] += this.m[1] * x + this.m[3] * y;\r\n        return this;\r\n    }\r\n    scale(sx, sy) {\r\n        this.m[0] *= sx;\r\n        this.m[1] *= sx;\r\n        this.m[2] *= sy;\r\n        this.m[3] *= sy;\r\n        return this;\r\n    }\r\n    rotate(rad) {\r\n        const c = Math.cos(rad);\r\n        const s = Math.sin(rad);\r\n        const m11 = this.m[0] * c + this.m[2] * s;\r\n        const m12 = this.m[1] * c + this.m[3] * s;\r\n        const m21 = this.m[0] * -s + this.m[2] * c;\r\n        const m22 = this.m[1] * -s + this.m[3] * c;\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        return this;\r\n    }\r\n    getTranslation() {\r\n        return {\r\n            x: this.m[4],\r\n            y: this.m[5],\r\n        };\r\n    }\r\n    skew(sx, sy) {\r\n        const m11 = this.m[0] + this.m[2] * sy;\r\n        const m12 = this.m[1] + this.m[3] * sy;\r\n        const m21 = this.m[2] + this.m[0] * sx;\r\n        const m22 = this.m[3] + this.m[1] * sx;\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\r\n        const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\r\n        const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\r\n        const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\r\n        const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\r\n        const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        this.m[4] = dx;\r\n        this.m[5] = dy;\r\n        return this;\r\n    }\r\n    invert() {\r\n        const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\r\n        const m0 = this.m[3] * d;\r\n        const m1 = -this.m[1] * d;\r\n        const m2 = -this.m[2] * d;\r\n        const m3 = this.m[0] * d;\r\n        const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\r\n        const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\r\n        this.m[0] = m0;\r\n        this.m[1] = m1;\r\n        this.m[2] = m2;\r\n        this.m[3] = m3;\r\n        this.m[4] = m4;\r\n        this.m[5] = m5;\r\n        return this;\r\n    }\r\n    getMatrix() {\r\n        return this.m;\r\n    }\r\n    decompose() {\r\n        const a = this.m[0];\r\n        const b = this.m[1];\r\n        const c = this.m[2];\r\n        const d = this.m[3];\r\n        const e = this.m[4];\r\n        const f = this.m[5];\r\n        const delta = a * d - b * c;\r\n        const result = {\r\n            x: e,\r\n            y: f,\r\n            rotation: 0,\r\n            scaleX: 0,\r\n            scaleY: 0,\r\n            skewX: 0,\r\n            skewY: 0,\r\n        };\r\n        if (a != 0 || b != 0) {\r\n            const r = Math.sqrt(a * a + b * b);\r\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\r\n            result.scaleX = r;\r\n            result.scaleY = delta / r;\r\n            result.skewX = (a * c + b * d) / delta;\r\n            result.skewY = 0;\r\n        }\r\n        else if (c != 0 || d != 0) {\r\n            const s = Math.sqrt(c * c + d * d);\r\n            result.rotation =\r\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\r\n            result.scaleX = delta / s;\r\n            result.scaleY = s;\r\n            result.skewX = 0;\r\n            result.skewY = (a * c + b * d) / delta;\r\n        }\r\n        else {\r\n        }\r\n        result.rotation = Util._getRotation(result.rotation);\r\n        return result;\r\n    }\r\n}\r\nconst OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\r\n    aliceblue: [240, 248, 255],\r\n    antiquewhite: [250, 235, 215],\r\n    aqua: [0, 255, 255],\r\n    aquamarine: [127, 255, 212],\r\n    azure: [240, 255, 255],\r\n    beige: [245, 245, 220],\r\n    bisque: [255, 228, 196],\r\n    black: [0, 0, 0],\r\n    blanchedalmond: [255, 235, 205],\r\n    blue: [0, 0, 255],\r\n    blueviolet: [138, 43, 226],\r\n    brown: [165, 42, 42],\r\n    burlywood: [222, 184, 135],\r\n    cadetblue: [95, 158, 160],\r\n    chartreuse: [127, 255, 0],\r\n    chocolate: [210, 105, 30],\r\n    coral: [255, 127, 80],\r\n    cornflowerblue: [100, 149, 237],\r\n    cornsilk: [255, 248, 220],\r\n    crimson: [220, 20, 60],\r\n    cyan: [0, 255, 255],\r\n    darkblue: [0, 0, 139],\r\n    darkcyan: [0, 139, 139],\r\n    darkgoldenrod: [184, 132, 11],\r\n    darkgray: [169, 169, 169],\r\n    darkgreen: [0, 100, 0],\r\n    darkgrey: [169, 169, 169],\r\n    darkkhaki: [189, 183, 107],\r\n    darkmagenta: [139, 0, 139],\r\n    darkolivegreen: [85, 107, 47],\r\n    darkorange: [255, 140, 0],\r\n    darkorchid: [153, 50, 204],\r\n    darkred: [139, 0, 0],\r\n    darksalmon: [233, 150, 122],\r\n    darkseagreen: [143, 188, 143],\r\n    darkslateblue: [72, 61, 139],\r\n    darkslategray: [47, 79, 79],\r\n    darkslategrey: [47, 79, 79],\r\n    darkturquoise: [0, 206, 209],\r\n    darkviolet: [148, 0, 211],\r\n    deeppink: [255, 20, 147],\r\n    deepskyblue: [0, 191, 255],\r\n    dimgray: [105, 105, 105],\r\n    dimgrey: [105, 105, 105],\r\n    dodgerblue: [30, 144, 255],\r\n    firebrick: [178, 34, 34],\r\n    floralwhite: [255, 255, 240],\r\n    forestgreen: [34, 139, 34],\r\n    fuchsia: [255, 0, 255],\r\n    gainsboro: [220, 220, 220],\r\n    ghostwhite: [248, 248, 255],\r\n    gold: [255, 215, 0],\r\n    goldenrod: [218, 165, 32],\r\n    gray: [128, 128, 128],\r\n    green: [0, 128, 0],\r\n    greenyellow: [173, 255, 47],\r\n    grey: [128, 128, 128],\r\n    honeydew: [240, 255, 240],\r\n    hotpink: [255, 105, 180],\r\n    indianred: [205, 92, 92],\r\n    indigo: [75, 0, 130],\r\n    ivory: [255, 255, 240],\r\n    khaki: [240, 230, 140],\r\n    lavender: [230, 230, 250],\r\n    lavenderblush: [255, 240, 245],\r\n    lawngreen: [124, 252, 0],\r\n    lemonchiffon: [255, 250, 205],\r\n    lightblue: [173, 216, 230],\r\n    lightcoral: [240, 128, 128],\r\n    lightcyan: [224, 255, 255],\r\n    lightgoldenrodyellow: [250, 250, 210],\r\n    lightgray: [211, 211, 211],\r\n    lightgreen: [144, 238, 144],\r\n    lightgrey: [211, 211, 211],\r\n    lightpink: [255, 182, 193],\r\n    lightsalmon: [255, 160, 122],\r\n    lightseagreen: [32, 178, 170],\r\n    lightskyblue: [135, 206, 250],\r\n    lightslategray: [119, 136, 153],\r\n    lightslategrey: [119, 136, 153],\r\n    lightsteelblue: [176, 196, 222],\r\n    lightyellow: [255, 255, 224],\r\n    lime: [0, 255, 0],\r\n    limegreen: [50, 205, 50],\r\n    linen: [250, 240, 230],\r\n    magenta: [255, 0, 255],\r\n    maroon: [128, 0, 0],\r\n    mediumaquamarine: [102, 205, 170],\r\n    mediumblue: [0, 0, 205],\r\n    mediumorchid: [186, 85, 211],\r\n    mediumpurple: [147, 112, 219],\r\n    mediumseagreen: [60, 179, 113],\r\n    mediumslateblue: [123, 104, 238],\r\n    mediumspringgreen: [0, 250, 154],\r\n    mediumturquoise: [72, 209, 204],\r\n    mediumvioletred: [199, 21, 133],\r\n    midnightblue: [25, 25, 112],\r\n    mintcream: [245, 255, 250],\r\n    mistyrose: [255, 228, 225],\r\n    moccasin: [255, 228, 181],\r\n    navajowhite: [255, 222, 173],\r\n    navy: [0, 0, 128],\r\n    oldlace: [253, 245, 230],\r\n    olive: [128, 128, 0],\r\n    olivedrab: [107, 142, 35],\r\n    orange: [255, 165, 0],\r\n    orangered: [255, 69, 0],\r\n    orchid: [218, 112, 214],\r\n    palegoldenrod: [238, 232, 170],\r\n    palegreen: [152, 251, 152],\r\n    paleturquoise: [175, 238, 238],\r\n    palevioletred: [219, 112, 147],\r\n    papayawhip: [255, 239, 213],\r\n    peachpuff: [255, 218, 185],\r\n    peru: [205, 133, 63],\r\n    pink: [255, 192, 203],\r\n    plum: [221, 160, 203],\r\n    powderblue: [176, 224, 230],\r\n    purple: [128, 0, 128],\r\n    rebeccapurple: [102, 51, 153],\r\n    red: [255, 0, 0],\r\n    rosybrown: [188, 143, 143],\r\n    royalblue: [65, 105, 225],\r\n    saddlebrown: [139, 69, 19],\r\n    salmon: [250, 128, 114],\r\n    sandybrown: [244, 164, 96],\r\n    seagreen: [46, 139, 87],\r\n    seashell: [255, 245, 238],\r\n    sienna: [160, 82, 45],\r\n    silver: [192, 192, 192],\r\n    skyblue: [135, 206, 235],\r\n    slateblue: [106, 90, 205],\r\n    slategray: [119, 128, 144],\r\n    slategrey: [119, 128, 144],\r\n    snow: [255, 255, 250],\r\n    springgreen: [0, 255, 127],\r\n    steelblue: [70, 130, 180],\r\n    tan: [210, 180, 140],\r\n    teal: [0, 128, 128],\r\n    thistle: [216, 191, 216],\r\n    transparent: [255, 255, 255, 0],\r\n    tomato: [255, 99, 71],\r\n    turquoise: [64, 224, 208],\r\n    violet: [238, 130, 238],\r\n    wheat: [245, 222, 179],\r\n    white: [255, 255, 255],\r\n    whitesmoke: [245, 245, 245],\r\n    yellow: [255, 255, 0],\r\n    yellowgreen: [154, 205, 5],\r\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\r\nlet animQueue = [];\r\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\r\n    function (f) {\r\n        setTimeout(f, 60);\r\n    };\r\nexport const Util = {\r\n    _isElement(obj) {\r\n        return !!(obj && obj.nodeType == 1);\r\n    },\r\n    _isFunction(obj) {\r\n        return !!(obj && obj.constructor && obj.call && obj.apply);\r\n    },\r\n    _isPlainObject(obj) {\r\n        return !!obj && obj.constructor === Object;\r\n    },\r\n    _isArray(obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\r\n    },\r\n    _isNumber(obj) {\r\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\r\n            !isNaN(obj) &&\r\n            isFinite(obj));\r\n    },\r\n    _isString(obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\r\n    },\r\n    _isBoolean(obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\r\n    },\r\n    isObject(val) {\r\n        return val instanceof Object;\r\n    },\r\n    isValidSelector(selector) {\r\n        if (typeof selector !== 'string') {\r\n            return false;\r\n        }\r\n        const firstChar = selector[0];\r\n        return (firstChar === '#' ||\r\n            firstChar === '.' ||\r\n            firstChar === firstChar.toUpperCase());\r\n    },\r\n    _sign(number) {\r\n        if (number === 0) {\r\n            return 1;\r\n        }\r\n        if (number > 0) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    },\r\n    requestAnimFrame(callback) {\r\n        animQueue.push(callback);\r\n        if (animQueue.length === 1) {\r\n            req(function () {\r\n                const queue = animQueue;\r\n                animQueue = [];\r\n                queue.forEach(function (cb) {\r\n                    cb();\r\n                });\r\n            });\r\n        }\r\n    },\r\n    createCanvasElement() {\r\n        ensureBrowser();\r\n        const canvas = document.createElement('canvas');\r\n        try {\r\n            canvas.style = canvas.style || {};\r\n        }\r\n        catch (e) { }\r\n        return canvas;\r\n    },\r\n    createImageElement() {\r\n        ensureBrowser();\r\n        return document.createElement('img');\r\n    },\r\n    _isInDocument(el) {\r\n        while ((el = el.parentNode)) {\r\n            if (el == document) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    _urlToImage(url, callback) {\r\n        const imageObj = Util.createImageElement();\r\n        imageObj.onload = function () {\r\n            callback(imageObj);\r\n        };\r\n        imageObj.src = url;\r\n    },\r\n    _rgbToHex(r, g, b) {\r\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n    },\r\n    _hexToRgb(hex) {\r\n        hex = hex.replace(HASH, EMPTY_STRING);\r\n        const bigint = parseInt(hex, 16);\r\n        return {\r\n            r: (bigint >> 16) & 255,\r\n            g: (bigint >> 8) & 255,\r\n            b: bigint & 255,\r\n        };\r\n    },\r\n    getRandomColor() {\r\n        let randColor = ((Math.random() * 0xffffff) << 0).toString(16);\r\n        while (randColor.length < 6) {\r\n            randColor = ZERO + randColor;\r\n        }\r\n        return HASH + randColor;\r\n    },\r\n    getRGB(color) {\r\n        let rgb;\r\n        if (color in COLORS) {\r\n            rgb = COLORS[color];\r\n            return {\r\n                r: rgb[0],\r\n                g: rgb[1],\r\n                b: rgb[2],\r\n            };\r\n        }\r\n        else if (color[0] === HASH) {\r\n            return this._hexToRgb(color.substring(1));\r\n        }\r\n        else if (color.substr(0, 4) === RGB_PAREN) {\r\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\r\n            return {\r\n                r: parseInt(rgb[1], 10),\r\n                g: parseInt(rgb[2], 10),\r\n                b: parseInt(rgb[3], 10),\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0,\r\n            };\r\n        }\r\n    },\r\n    colorToRGBA(str) {\r\n        str = str || 'black';\r\n        return (Util._namedColorToRBA(str) ||\r\n            Util._hex3ColorToRGBA(str) ||\r\n            Util._hex4ColorToRGBA(str) ||\r\n            Util._hex6ColorToRGBA(str) ||\r\n            Util._hex8ColorToRGBA(str) ||\r\n            Util._rgbColorToRGBA(str) ||\r\n            Util._rgbaColorToRGBA(str) ||\r\n            Util._hslColorToRGBA(str));\r\n    },\r\n    _namedColorToRBA(str) {\r\n        const c = COLORS[str.toLowerCase()];\r\n        if (!c) {\r\n            return null;\r\n        }\r\n        return {\r\n            r: c[0],\r\n            g: c[1],\r\n            b: c[2],\r\n            a: 1,\r\n        };\r\n    },\r\n    _rgbColorToRGBA(str) {\r\n        if (str.indexOf('rgb(') === 0) {\r\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\r\n            const parts = str.split(/ *, */).map(Number);\r\n            return {\r\n                r: parts[0],\r\n                g: parts[1],\r\n                b: parts[2],\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _rgbaColorToRGBA(str) {\r\n        if (str.indexOf('rgba(') === 0) {\r\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\r\n            const parts = str.split(/ *, */).map((n, index) => {\r\n                if (n.slice(-1) === '%') {\r\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\r\n                }\r\n                return Number(n);\r\n            });\r\n            return {\r\n                r: parts[0],\r\n                g: parts[1],\r\n                b: parts[2],\r\n                a: parts[3],\r\n            };\r\n        }\r\n    },\r\n    _hex8ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 9) {\r\n            return {\r\n                r: parseInt(str.slice(1, 3), 16),\r\n                g: parseInt(str.slice(3, 5), 16),\r\n                b: parseInt(str.slice(5, 7), 16),\r\n                a: parseInt(str.slice(7, 9), 16) / 0xff,\r\n            };\r\n        }\r\n    },\r\n    _hex6ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 7) {\r\n            return {\r\n                r: parseInt(str.slice(1, 3), 16),\r\n                g: parseInt(str.slice(3, 5), 16),\r\n                b: parseInt(str.slice(5, 7), 16),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _hex4ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 5) {\r\n            return {\r\n                r: parseInt(str[1] + str[1], 16),\r\n                g: parseInt(str[2] + str[2], 16),\r\n                b: parseInt(str[3] + str[3], 16),\r\n                a: parseInt(str[4] + str[4], 16) / 0xff,\r\n            };\r\n        }\r\n    },\r\n    _hex3ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 4) {\r\n            return {\r\n                r: parseInt(str[1] + str[1], 16),\r\n                g: parseInt(str[2] + str[2], 16),\r\n                b: parseInt(str[3] + str[3], 16),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _hslColorToRGBA(str) {\r\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\r\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\r\n            const h = Number(hsl[0]) / 360;\r\n            const s = Number(hsl[1]) / 100;\r\n            const l = Number(hsl[2]) / 100;\r\n            let t2;\r\n            let t3;\r\n            let val;\r\n            if (s === 0) {\r\n                val = l * 255;\r\n                return {\r\n                    r: Math.round(val),\r\n                    g: Math.round(val),\r\n                    b: Math.round(val),\r\n                    a: 1,\r\n                };\r\n            }\r\n            if (l < 0.5) {\r\n                t2 = l * (1 + s);\r\n            }\r\n            else {\r\n                t2 = l + s - l * s;\r\n            }\r\n            const t1 = 2 * l - t2;\r\n            const rgb = [0, 0, 0];\r\n            for (let i = 0; i < 3; i++) {\r\n                t3 = h + (1 / 3) * -(i - 1);\r\n                if (t3 < 0) {\r\n                    t3++;\r\n                }\r\n                if (t3 > 1) {\r\n                    t3--;\r\n                }\r\n                if (6 * t3 < 1) {\r\n                    val = t1 + (t2 - t1) * 6 * t3;\r\n                }\r\n                else if (2 * t3 < 1) {\r\n                    val = t2;\r\n                }\r\n                else if (3 * t3 < 2) {\r\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                }\r\n                else {\r\n                    val = t1;\r\n                }\r\n                rgb[i] = val * 255;\r\n            }\r\n            return {\r\n                r: Math.round(rgb[0]),\r\n                g: Math.round(rgb[1]),\r\n                b: Math.round(rgb[2]),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    haveIntersection(r1, r2) {\r\n        return !(r2.x > r1.x + r1.width ||\r\n            r2.x + r2.width < r1.x ||\r\n            r2.y > r1.y + r1.height ||\r\n            r2.y + r2.height < r1.y);\r\n    },\r\n    cloneObject(obj) {\r\n        const retObj = {};\r\n        for (const key in obj) {\r\n            if (this._isPlainObject(obj[key])) {\r\n                retObj[key] = this.cloneObject(obj[key]);\r\n            }\r\n            else if (this._isArray(obj[key])) {\r\n                retObj[key] = this.cloneArray(obj[key]);\r\n            }\r\n            else {\r\n                retObj[key] = obj[key];\r\n            }\r\n        }\r\n        return retObj;\r\n    },\r\n    cloneArray(arr) {\r\n        return arr.slice(0);\r\n    },\r\n    degToRad(deg) {\r\n        return deg * PI_OVER_DEG180;\r\n    },\r\n    radToDeg(rad) {\r\n        return rad * DEG180_OVER_PI;\r\n    },\r\n    _degToRad(deg) {\r\n        Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\r\n        return Util.degToRad(deg);\r\n    },\r\n    _radToDeg(rad) {\r\n        Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\r\n        return Util.radToDeg(rad);\r\n    },\r\n    _getRotation(radians) {\r\n        return Konva.angleDeg ? Util.radToDeg(radians) : radians;\r\n    },\r\n    _capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    },\r\n    throw(str) {\r\n        throw new Error(KONVA_ERROR + str);\r\n    },\r\n    error(str) {\r\n        console.error(KONVA_ERROR + str);\r\n    },\r\n    warn(str) {\r\n        if (!Konva.showWarnings) {\r\n            return;\r\n        }\r\n        console.warn(KONVA_WARNING + str);\r\n    },\r\n    each(obj, func) {\r\n        for (const key in obj) {\r\n            func(key, obj[key]);\r\n        }\r\n    },\r\n    _inRange(val, left, right) {\r\n        return left <= val && val < right;\r\n    },\r\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\r\n        let x, y, dist;\r\n        const pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\r\n        if (pd2 == 0) {\r\n            x = x1;\r\n            y = y1;\r\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\r\n        }\r\n        else {\r\n            const u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\r\n            if (u < 0) {\r\n                x = x1;\r\n                y = y1;\r\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\r\n            }\r\n            else if (u > 1.0) {\r\n                x = x2;\r\n                y = y2;\r\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\r\n            }\r\n            else {\r\n                x = x1 + u * (x2 - x1);\r\n                y = y1 + u * (y2 - y1);\r\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\r\n            }\r\n        }\r\n        return [x, y, dist];\r\n    },\r\n    _getProjectionToLine(pt, line, isClosed) {\r\n        const pc = Util.cloneObject(pt);\r\n        let dist = Number.MAX_VALUE;\r\n        line.forEach(function (p1, i) {\r\n            if (!isClosed && i === line.length - 1) {\r\n                return;\r\n            }\r\n            const p2 = line[(i + 1) % line.length];\r\n            const proj = Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\r\n            const px = proj[0], py = proj[1], pdist = proj[2];\r\n            if (pdist < dist) {\r\n                pc.x = px;\r\n                pc.y = py;\r\n                dist = pdist;\r\n            }\r\n        });\r\n        return pc;\r\n    },\r\n    _prepareArrayForTween(startArray, endArray, isClosed) {\r\n        const start = [], end = [];\r\n        if (startArray.length > endArray.length) {\r\n            const temp = endArray;\r\n            endArray = startArray;\r\n            startArray = temp;\r\n        }\r\n        for (let n = 0; n < startArray.length; n += 2) {\r\n            start.push({\r\n                x: startArray[n],\r\n                y: startArray[n + 1],\r\n            });\r\n        }\r\n        for (let n = 0; n < endArray.length; n += 2) {\r\n            end.push({\r\n                x: endArray[n],\r\n                y: endArray[n + 1],\r\n            });\r\n        }\r\n        const newStart = [];\r\n        end.forEach(function (point) {\r\n            const pr = Util._getProjectionToLine(point, start, isClosed);\r\n            newStart.push(pr.x);\r\n            newStart.push(pr.y);\r\n        });\r\n        return newStart;\r\n    },\r\n    _prepareToStringify(obj) {\r\n        let desc;\r\n        obj.visitedByCircularReferenceRemoval = true;\r\n        for (const key in obj) {\r\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\r\n                continue;\r\n            }\r\n            desc = Object.getOwnPropertyDescriptor(obj, key);\r\n            if (obj[key].visitedByCircularReferenceRemoval ||\r\n                Util._isElement(obj[key])) {\r\n                if (desc.configurable) {\r\n                    delete obj[key];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            else if (Util._prepareToStringify(obj[key]) === null) {\r\n                if (desc.configurable) {\r\n                    delete obj[key];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        delete obj.visitedByCircularReferenceRemoval;\r\n        return obj;\r\n    },\r\n    _assign(target, source) {\r\n        for (const key in source) {\r\n            target[key] = source[key];\r\n        }\r\n        return target;\r\n    },\r\n    _getFirstPointerId(evt) {\r\n        if (!evt.touches) {\r\n            return evt.pointerId || 999;\r\n        }\r\n        else {\r\n            return evt.changedTouches[0].identifier;\r\n        }\r\n    },\r\n    releaseCanvas(...canvases) {\r\n        if (!Konva.releaseCanvasOnDestroy)\r\n            return;\r\n        canvases.forEach((c) => {\r\n            c.width = 0;\r\n            c.height = 0;\r\n        });\r\n    },\r\n    drawRoundedRectPath(context, width, height, cornerRadius) {\r\n        let xOrigin = width < 0 ? width : 0;\r\n        let yOrigin = height < 0 ? height : 0;\r\n        width = Math.abs(width);\r\n        height = Math.abs(height);\r\n        let topLeft = 0;\r\n        let topRight = 0;\r\n        let bottomLeft = 0;\r\n        let bottomRight = 0;\r\n        if (typeof cornerRadius === 'number') {\r\n            topLeft =\r\n                topRight =\r\n                    bottomLeft =\r\n                        bottomRight =\r\n                            Math.min(cornerRadius, width / 2, height / 2);\r\n        }\r\n        else {\r\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\r\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\r\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\r\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\r\n        }\r\n        context.moveTo(xOrigin + topLeft, yOrigin);\r\n        context.lineTo(xOrigin + width - topRight, yOrigin);\r\n        context.arc(xOrigin + width - topRight, yOrigin + topRight, topRight, (Math.PI * 3) / 2, 0, false);\r\n        context.lineTo(xOrigin + width, yOrigin + height - bottomRight);\r\n        context.arc(xOrigin + width - bottomRight, yOrigin + height - bottomRight, bottomRight, 0, Math.PI / 2, false);\r\n        context.lineTo(xOrigin + bottomLeft, yOrigin + height);\r\n        context.arc(xOrigin + bottomLeft, yOrigin + height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\r\n        context.lineTo(xOrigin, yOrigin + topLeft);\r\n        context.arc(xOrigin + topLeft, yOrigin + topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\r\n    },\r\n    drawRoundedPolygonPath(context, points, sides, radius, cornerRadius) {\r\n        radius = Math.abs(radius);\r\n        for (let i = 0; i < sides; i++) {\r\n            const prev = points[(i - 1 + sides) % sides];\r\n            const curr = points[i];\r\n            const next = points[(i + 1) % sides];\r\n            const vec1 = { x: curr.x - prev.x, y: curr.y - prev.y };\r\n            const vec2 = { x: next.x - curr.x, y: next.y - curr.y };\r\n            const len1 = Math.hypot(vec1.x, vec1.y);\r\n            const len2 = Math.hypot(vec2.x, vec2.y);\r\n            let currCornerRadius;\r\n            if (typeof cornerRadius === 'number') {\r\n                currCornerRadius = cornerRadius;\r\n            }\r\n            else {\r\n                currCornerRadius = i < cornerRadius.length ? cornerRadius[i] : 0;\r\n            }\r\n            const maxCornerRadius = radius * Math.cos(Math.PI / sides);\r\n            currCornerRadius =\r\n                maxCornerRadius * Math.min(1, (currCornerRadius / radius) * 2);\r\n            const normalVec1 = { x: vec1.x / len1, y: vec1.y / len1 };\r\n            const normalVec2 = { x: vec2.x / len2, y: vec2.y / len2 };\r\n            const p1 = {\r\n                x: curr.x - normalVec1.x * currCornerRadius,\r\n                y: curr.y - normalVec1.y * currCornerRadius,\r\n            };\r\n            const p2 = {\r\n                x: curr.x + normalVec2.x * currCornerRadius,\r\n                y: curr.y + normalVec2.y * currCornerRadius,\r\n            };\r\n            if (i === 0) {\r\n                context.moveTo(p1.x, p1.y);\r\n            }\r\n            else {\r\n                context.lineTo(p1.x, p1.y);\r\n            }\r\n            context.arcTo(curr.x, curr.y, p2.x, p2.y, currCornerRadius);\r\n        }\r\n    },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}