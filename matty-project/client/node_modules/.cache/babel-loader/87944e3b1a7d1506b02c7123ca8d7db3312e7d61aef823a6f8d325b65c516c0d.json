{"ast":null,"code":"import { Factory } from \"../Factory.js\";\nimport { Shape } from \"../Shape.js\";\nimport { Animation } from \"../Animation.js\";\nimport { getNumberValidator } from \"../Validators.js\";\nimport { _registerNode } from \"../Global.js\";\nexport class Sprite extends Shape {\n  constructor(config) {\n    super(config);\n    this._updated = true;\n    this.anim = new Animation(() => {\n      const updated = this._updated;\n      this._updated = false;\n      return updated;\n    });\n    this.on('animationChange.konva', function () {\n      this.frameIndex(0);\n    });\n    this.on('frameIndexChange.konva', function () {\n      this._updated = true;\n    });\n    this.on('frameRateChange.konva', function () {\n      if (!this.anim.isRunning()) {\n        return;\n      }\n      clearInterval(this.interval);\n      this._setInterval();\n    });\n  }\n  _sceneFunc(context) {\n    const anim = this.animation(),\n      index = this.frameIndex(),\n      ix4 = index * 4,\n      set = this.animations()[anim],\n      offsets = this.frameOffsets(),\n      x = set[ix4 + 0],\n      y = set[ix4 + 1],\n      width = set[ix4 + 2],\n      height = set[ix4 + 3],\n      image = this.image();\n    if (this.hasFill() || this.hasStroke()) {\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n    if (image) {\n      if (offsets) {\n        const offset = offsets[anim],\n          ix2 = index * 2;\n        context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.drawImage(image, x, y, width, height, 0, 0, width, height);\n      }\n    }\n  }\n  _hitFunc(context) {\n    const anim = this.animation(),\n      index = this.frameIndex(),\n      ix4 = index * 4,\n      set = this.animations()[anim],\n      offsets = this.frameOffsets(),\n      width = set[ix4 + 2],\n      height = set[ix4 + 3];\n    context.beginPath();\n    if (offsets) {\n      const offset = offsets[anim];\n      const ix2 = index * 2;\n      context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n    } else {\n      context.rect(0, 0, width, height);\n    }\n    context.closePath();\n    context.fillShape(this);\n  }\n  _useBufferCanvas() {\n    return super._useBufferCanvas(true);\n  }\n  _setInterval() {\n    const that = this;\n    this.interval = setInterval(function () {\n      that._updateIndex();\n    }, 1000 / this.frameRate());\n  }\n  start() {\n    if (this.isRunning()) {\n      return;\n    }\n    const layer = this.getLayer();\n    this.anim.setLayers(layer);\n    this._setInterval();\n    this.anim.start();\n  }\n  stop() {\n    this.anim.stop();\n    clearInterval(this.interval);\n  }\n  isRunning() {\n    return this.anim.isRunning();\n  }\n  _updateIndex() {\n    const index = this.frameIndex(),\n      animation = this.animation(),\n      animations = this.animations(),\n      anim = animations[animation],\n      len = anim.length / 4;\n    if (index < len - 1) {\n      this.frameIndex(index + 1);\n    } else {\n      this.frameIndex(0);\n    }\n  }\n}\nSprite.prototype.className = 'Sprite';\n_registerNode(Sprite);\nFactory.addGetterSetter(Sprite, 'animation');\nFactory.addGetterSetter(Sprite, 'animations');\nFactory.addGetterSetter(Sprite, 'frameOffsets');\nFactory.addGetterSetter(Sprite, 'image');\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n  index: 'frameIndex',\n  getIndex: 'getFrameIndex',\n  setIndex: 'setFrameIndex'\n});","map":{"version":3,"names":["Factory","Shape","Animation","getNumberValidator","_registerNode","Sprite","constructor","config","_updated","anim","updated","on","frameIndex","isRunning","clearInterval","interval","_setInterval","_sceneFunc","context","animation","index","ix4","set","animations","offsets","frameOffsets","x","y","width","height","image","hasFill","hasStroke","beginPath","rect","closePath","fillStrokeShape","offset","ix2","drawImage","_hitFunc","fillShape","_useBufferCanvas","that","setInterval","_updateIndex","frameRate","start","layer","getLayer","setLayers","stop","len","length","prototype","className","addGetterSetter","backCompat","getIndex","setIndex"],"sources":["C:/Users/lenovo pro/Documents/gncipl-6-week/Week-6_final_project/matty-project/client/node_modules/konva/lib/shapes/Sprite.js"],"sourcesContent":["import { Factory } from \"../Factory.js\";\r\nimport { Shape } from \"../Shape.js\";\r\nimport { Animation } from \"../Animation.js\";\r\nimport { getNumberValidator } from \"../Validators.js\";\r\nimport { _registerNode } from \"../Global.js\";\r\nexport class Sprite extends Shape {\r\n    constructor(config) {\r\n        super(config);\r\n        this._updated = true;\r\n        this.anim = new Animation(() => {\r\n            const updated = this._updated;\r\n            this._updated = false;\r\n            return updated;\r\n        });\r\n        this.on('animationChange.konva', function () {\r\n            this.frameIndex(0);\r\n        });\r\n        this.on('frameIndexChange.konva', function () {\r\n            this._updated = true;\r\n        });\r\n        this.on('frameRateChange.konva', function () {\r\n            if (!this.anim.isRunning()) {\r\n                return;\r\n            }\r\n            clearInterval(this.interval);\r\n            this._setInterval();\r\n        });\r\n    }\r\n    _sceneFunc(context) {\r\n        const anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\r\n        if (this.hasFill() || this.hasStroke()) {\r\n            context.beginPath();\r\n            context.rect(0, 0, width, height);\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        if (image) {\r\n            if (offsets) {\r\n                const offset = offsets[anim], ix2 = index * 2;\r\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\r\n            }\r\n            else {\r\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\r\n            }\r\n        }\r\n    }\r\n    _hitFunc(context) {\r\n        const anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\r\n        context.beginPath();\r\n        if (offsets) {\r\n            const offset = offsets[anim];\r\n            const ix2 = index * 2;\r\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\r\n        }\r\n        else {\r\n            context.rect(0, 0, width, height);\r\n        }\r\n        context.closePath();\r\n        context.fillShape(this);\r\n    }\r\n    _useBufferCanvas() {\r\n        return super._useBufferCanvas(true);\r\n    }\r\n    _setInterval() {\r\n        const that = this;\r\n        this.interval = setInterval(function () {\r\n            that._updateIndex();\r\n        }, 1000 / this.frameRate());\r\n    }\r\n    start() {\r\n        if (this.isRunning()) {\r\n            return;\r\n        }\r\n        const layer = this.getLayer();\r\n        this.anim.setLayers(layer);\r\n        this._setInterval();\r\n        this.anim.start();\r\n    }\r\n    stop() {\r\n        this.anim.stop();\r\n        clearInterval(this.interval);\r\n    }\r\n    isRunning() {\r\n        return this.anim.isRunning();\r\n    }\r\n    _updateIndex() {\r\n        const index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\r\n        if (index < len - 1) {\r\n            this.frameIndex(index + 1);\r\n        }\r\n        else {\r\n            this.frameIndex(0);\r\n        }\r\n    }\r\n}\r\nSprite.prototype.className = 'Sprite';\r\n_registerNode(Sprite);\r\nFactory.addGetterSetter(Sprite, 'animation');\r\nFactory.addGetterSetter(Sprite, 'animations');\r\nFactory.addGetterSetter(Sprite, 'frameOffsets');\r\nFactory.addGetterSetter(Sprite, 'image');\r\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\r\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\r\nFactory.backCompat(Sprite, {\r\n    index: 'frameIndex',\r\n    getIndex: 'getFrameIndex',\r\n    setIndex: 'setFrameIndex',\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}