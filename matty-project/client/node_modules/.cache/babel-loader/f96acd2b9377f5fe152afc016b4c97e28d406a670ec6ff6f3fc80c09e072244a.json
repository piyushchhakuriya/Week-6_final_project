{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // or your routing lib\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [designs, setDesigns] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchDesigns() {\n      // Call your backend API to get user saved designs\n      const res = await fetch('/api/designs', {\n        credentials: 'include'\n      });\n      const data = await res.json();\n      setDesigns(data.designs || []);\n    }\n    fetchDesigns();\n  }, []);\n  const openDesign = design => {\n    // Navigate to Editor with selected design loaded, e.g. using state or url param\n    navigate('/editor', {\n      state: {\n        design\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Saved Designs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), designs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No saved designs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"design-grid\",\n      children: designs.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"design-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: d.name || 'Untitled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openDesign(d),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, d.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"cHVUiswWEqbUKDi87HBQYzrYPb0=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","designs","setDesigns","navigate","fetchDesigns","res","fetch","credentials","data","json","openDesign","design","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","d","name","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // or your routing lib\r\n\r\nconst Dashboard = () => {\r\n  const [designs, setDesigns] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchDesigns() {\r\n      // Call your backend API to get user saved designs\r\n      const res = await fetch('/api/designs', { credentials: 'include' });\r\n      const data = await res.json();\r\n      setDesigns(data.designs || []);\r\n    }\r\n    fetchDesigns();\r\n  }, []);\r\n\r\n  const openDesign = (design) => {\r\n    // Navigate to Editor with selected design loaded, e.g. using state or url param\r\n    navigate('/editor', { state: { design } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Your Saved Designs</h1>\r\n      {designs.length === 0 && <p>No saved designs found.</p>}\r\n      <div className=\"design-grid\">\r\n        {designs.map((d) => (\r\n          <div key={d.id} className=\"design-card\">\r\n            <h2>{d.name || 'Untitled'}</h2>\r\n            <button onClick={() => openDesign(d)}>Edit</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,eAAeU,YAAYA,CAAA,EAAG;MAC5B;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QAAEC,WAAW,EAAE;MAAU,CAAC,CAAC;MACnE,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7BP,UAAU,CAACM,IAAI,CAACP,OAAO,IAAI,EAAE,CAAC;IAChC;IACAG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAIC,MAAM,IAAK;IAC7B;IACAR,QAAQ,CAAC,SAAS,EAAE;MAAES,KAAK,EAAE;QAAED;MAAO;IAAE,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BjB,OAAO,CAACkB,MAAM,KAAK,CAAC,iBAAIrB,OAAA;MAAAgB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvDpB,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBb,OAAO,CAACmB,GAAG,CAAEC,CAAC,iBACbvB,OAAA;QAAgBe,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACrChB,OAAA;UAAAgB,QAAA,EAAKO,CAAC,CAACC,IAAI,IAAI;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BpB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAACW,CAAC,CAAE;UAAAP,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF3CG,CAAC,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCID,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAA6B,EAAA,GAFxB1B,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}