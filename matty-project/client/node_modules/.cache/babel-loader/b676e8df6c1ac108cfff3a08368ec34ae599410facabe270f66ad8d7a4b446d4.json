{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kritika Ekka\\\\Week-6_final_project\\\\matty-project\\\\client\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\n  ctx.beginPath();\n  for (let i = 0; i < sides; i++) {\n    const angle = 2 * Math.PI * i / sides - Math.PI / 2;\n    const dx = x + radius * Math.cos(angle);\n    const dy = y + radius * Math.sin(angle);\n    if (i === 0) ctx.moveTo(dx, dy);else ctx.lineTo(dx, dy);\n  }\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nconst initialState = {\n  shapes: [],\n  texts: [],\n  lines: []\n};\nconst CanvasEditor = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState('rectangle');\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\n  const [drawMode, setDrawMode] = useState(false);\n  const [textColor, setTextColor] = useState('#111827');\n  const [pencilColor, setPencilColor] = useState('#333'); // Pencil color state\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [history, setHistory] = useState([initialState]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const drawingPointsRef = useRef([]); // for fast pencil tool\n\n  // Get current state from history\n  const {\n    shapes,\n    texts,\n    lines\n  } = history[historyIndex];\n\n  // Redraw canvas on every state change\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 2;\n    ctx.lineCap = 'round';\n    // Draw shapes\n    shapes.forEach((shape, idx) => {\n      ctx.save();\n      if (shape.type === 'image') {\n        const img = new window.Image();\n        img.src = shape.src;\n        img.onload = () => {\n          ctx.drawImage(img, shape.x, shape.y, shape.w, shape.h);\n          if (idx === selectedShapeIndex) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(shape.x - 2, shape.y - 2, shape.w + 4, shape.h + 4);\n          }\n        };\n        if (img.complete) {\n          ctx.drawImage(img, shape.x, shape.y, shape.w, shape.h);\n          if (idx === selectedShapeIndex) {\n            ctx.strokeStyle = '#f59e42';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(shape.x - 2, shape.y - 2, shape.w + 4, shape.h + 4);\n          }\n        }\n      } else {\n        ctx.fillStyle = shape.color;\n        ctx.strokeStyle = shape.color;\n        if (shape.type === 'rectangle') {\n          ctx.fillRect(shape.x, shape.y, 120, 80);\n        } else if (shape.type === 'square') {\n          ctx.fillRect(shape.x, shape.y, 100, 100);\n        } else if (shape.type === 'circle') {\n          ctx.beginPath();\n          ctx.arc(shape.x + 50, shape.y + 50, 50, 0, 2 * Math.PI);\n          ctx.fill();\n        } else if (shape.type === 'oval') {\n          ctx.save();\n          ctx.translate(shape.x + 60, shape.y + 40);\n          ctx.scale(1.5, 1);\n          ctx.beginPath();\n          ctx.arc(0, 0, 40, 0, 2 * Math.PI);\n          ctx.restore();\n          ctx.fill();\n        } else if (shape.type === 'triangle') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + 0, shape.y + 80);\n          ctx.lineTo(shape.x + 120, shape.y + 80);\n          ctx.lineTo(shape.x + 60, shape.y + 0);\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'parallelogram') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + 20, shape.y + 80);\n          ctx.lineTo(shape.x + 140, shape.y + 80);\n          ctx.lineTo(shape.x + 120, shape.y + 0);\n          ctx.lineTo(shape.x + 0, shape.y + 0);\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'rhombus') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + 60, shape.y + 0);\n          ctx.lineTo(shape.x + 120, shape.y + 40);\n          ctx.lineTo(shape.x + 60, shape.y + 80);\n          ctx.lineTo(shape.x + 0, shape.y + 40);\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'trapezoid') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + 20, shape.y + 80);\n          ctx.lineTo(shape.x + 100, shape.y + 80);\n          ctx.lineTo(shape.x + 80, shape.y + 0);\n          ctx.lineTo(shape.x + 40, shape.y + 0);\n          ctx.closePath();\n          ctx.fill();\n        } else if (shape.type === 'kite') {\n          ctx.beginPath();\n          ctx.moveTo(shape.x + 60, shape.y + 0);\n          ctx.lineTo(shape.x + 100, shape.y + 40);\n          ctx.lineTo(shape.x + 60, shape.y + 80);\n          ctx.lineTo(shape.x + 20, shape.y + 40);\n          ctx.closePath();\n          ctx.fill();\n        } else if (['pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'].includes(shape.type)) {\n          const sides = {\n            pentagon: 5,\n            hexagon: 6,\n            heptagon: 7,\n            octagon: 8,\n            nonagon: 9,\n            decagon: 10\n          }[shape.type];\n          drawPolygon(ctx, shape.x + 60, shape.y + 60, 50, sides, shape.color);\n        }\n        if (idx === selectedShapeIndex) {\n          ctx.strokeStyle = '#f59e42';\n          ctx.lineWidth = 2;\n          ctx.strokeRect(shape.x - 2, shape.y - 2, 124, 84);\n        }\n      }\n      ctx.restore();\n    });\n    // Draw lines\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.strokeStyle = line.color || '#333';\n      ctx.lineWidth = 2;\n      line.points.forEach(([x, y], i) => {\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n    });\n    // Draw texts\n    texts.forEach(({\n      text,\n      x,\n      y,\n      color\n    }, idx) => {\n      ctx.font = '24px Arial';\n      ctx.fillStyle = color;\n      ctx.fillText(text, x, y);\n      if (idx === selectedTextIndex) {\n        const width = ctx.measureText(text).width;\n        ctx.strokeStyle = '#f59e42';\n        ctx.strokeRect(x - 2, y - 24, width + 4, 28);\n      }\n    });\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex]);\n\n  // --- Undo/Redo ---\n  const saveState = (newShapes, newTexts, newLines) => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push({\n      shapes: JSON.parse(JSON.stringify(newShapes)),\n      texts: JSON.parse(JSON.stringify(newTexts)),\n      lines: JSON.parse(JSON.stringify(newLines))\n    });\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n    }\n  };\n  const handleRedo = () => {\n    if (historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setSelectedTextIndex(null);\n      setSelectedShapeIndex(null);\n    }\n  };\n\n  // --- Drawing (fast pencil tool) ---\n  const handleCanvasMouseDown = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    // Check for text selection\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    for (let i = texts.length - 1; i >= 0; i--) {\n      const {\n        text,\n        x,\n        y\n      } = texts[i];\n      ctx.font = '24px Arial';\n      const width = ctx.measureText(text).width;\n      if (mouseX >= x - 2 && mouseX <= x + width + 2 && mouseY >= y - 24 && mouseY <= y + 4) {\n        setSelectedTextIndex(i);\n        setSelectedShapeIndex(null);\n        setDragOffset({\n          x: mouseX - x,\n          y: mouseY - y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    // Check for shape selection\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      const shape = shapes[i];\n      let w = 120,\n        h = 80;\n      if (shape.type === 'square') {\n        w = 100;\n        h = 100;\n      }\n      if (shape.type === 'circle') {\n        w = 100;\n        h = 100;\n      }\n      if (shape.type === 'oval') {\n        w = 120;\n        h = 80;\n      }\n      if (shape.type === 'image') {\n        w = shape.w;\n        h = shape.h;\n      }\n      if (mouseX >= shape.x && mouseX <= shape.x + w && mouseY >= shape.y && mouseY <= shape.y + h) {\n        setSelectedShapeIndex(i);\n        setSelectedTextIndex(null);\n        setDragOffset({\n          x: mouseX - shape.x,\n          y: mouseY - shape.y\n        });\n        setIsDragging(true);\n        return;\n      }\n    }\n    // If not on text or shape, start drawing if in draw mode\n    if (drawMode) {\n      setIsDrawing(true);\n      drawingPointsRef.current = [[mouseX, mouseY]];\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    if (isDrawing && drawMode) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const points = drawingPointsRef.current;\n      points.push([mouseX, mouseY]);\n      // Draw just the new segment\n      if (points.length > 1) {\n        ctx.beginPath();\n        ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\n        ctx.lineTo(mouseX, mouseY);\n        ctx.strokeStyle = pencilColor; // Use pencil color\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n      return;\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : t);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes,\n          texts: newTexts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        x: mouseX - dragOffset.x,\n        y: mouseY - dragOffset.y\n      } : s);\n      setHistory(h => {\n        const newHistory = h.slice(0, historyIndex + 1);\n        newHistory[historyIndex] = {\n          shapes: newShapes,\n          texts,\n          lines\n        };\n        return newHistory;\n      });\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    if (isDrawing && drawMode) {\n      setIsDrawing(false);\n      // Save the stroke to history for undo/redo\n      const newLine = {\n        points: drawingPointsRef.current,\n        color: pencilColor\n      };\n      saveState(shapes, texts, [...lines, newLine]);\n      drawingPointsRef.current = [];\n    }\n    if (isDragging && selectedTextIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    if (isDragging && selectedShapeIndex !== null) {\n      saveState(shapes, texts, lines);\n      setIsDragging(false);\n    }\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n  };\n\n  // --- Add Shape ---\n  const handleAddShape = () => {\n    let newShape = {\n      type: selectedShape,\n      x: 300,\n      y: 100,\n      color: shapeColor\n    };\n    if (selectedShape === 'image') return; // skip, handled by upload\n    saveState([...shapes, newShape], texts, lines);\n  };\n\n  // --- Add Text ---\n  const handleAddText = () => {\n    const text = prompt('Enter text to add:');\n    if (!text) return;\n    saveState(shapes, [...texts, {\n      text,\n      x: 100,\n      y: 400,\n      color: textColor\n    }], lines);\n  };\n\n  // --- Change color of selected text ---\n  const handleTextColorChange = e => {\n    setTextColor(e.target.value);\n    if (selectedTextIndex !== null) {\n      const newTexts = texts.map((t, idx) => idx === selectedTextIndex ? {\n        ...t,\n        color: e.target.value\n      } : t);\n      saveState(shapes, newTexts, lines);\n    }\n  };\n\n  // --- Change color of selected shape ---\n  const handleShapeColorChange = e => {\n    setShapeColor(e.target.value);\n    if (selectedShapeIndex !== null) {\n      const newShapes = shapes.map((s, idx) => idx === selectedShapeIndex ? {\n        ...s,\n        color: e.target.value\n      } : s);\n      saveState(newShapes, texts, lines);\n    }\n  };\n\n  // --- Upload Image ---\n  const handleUploadImage = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      // Add image as a shape to history\n      const newShape = {\n        type: 'image',\n        x: 50,\n        y: 50,\n        w: 200,\n        h: 200,\n        src: event.target.result\n      };\n      saveState([...shapes, newShape], texts, lines);\n    };\n    reader.readAsDataURL(file);\n    e.target.value = '';\n  };\n\n  // --- Download ---\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const link = document.createElement('a');\n    link.download = 'canvas.png';\n    link.href = canvas.toDataURL();\n    link.click();\n  };\n\n  // --- Clear All ---\n  const clearCanvas = () => {\n    saveState([], [], []);\n    setSelectedTextIndex(null);\n    setSelectedShapeIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center p-4 bg-gray-100 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-bold\",\n        children: \"MATTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2\",\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        disabled: historyIndex === 0,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedo,\n        disabled: historyIndex === history.length - 1,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"flex flex-col gap-4 p-4 bg-gray-50 border-r\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: drawMode ? 'font-bold underline' : '',\n          onClick: () => setDrawMode(true),\n          children: \"Pencil/Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block mb-1\",\n            children: \"Pencil Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: pencilColor,\n            onChange: e => setPencilColor(e.target.value),\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block mb-1\",\n            children: \"Shape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedShape,\n            onChange: e => {\n              setSelectedShape(e.target.value);\n              setDrawMode(false);\n            },\n            className: \"mb-2 p-1 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rectangle\",\n              children: \"Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"square\",\n              children: \"Square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"circle\",\n              children: \"Circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"oval\",\n              children: \"Oval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"triangle\",\n              children: \"Triangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"parallelogram\",\n              children: \"Parallelogram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rhombus\",\n              children: \"Rhombus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"trapezoid\",\n              children: \"Trapezoid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"kite\",\n              children: \"Kite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pentagon\",\n              children: \"Pentagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hexagon\",\n              children: \"Hexagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"heptagon\",\n              children: \"Heptagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"octagon\",\n              children: \"Octagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nonagon\",\n              children: \"Nonagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"decagon\",\n              children: \"Decagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block mb-1\",\n            children: \"Shape Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: shapeColor,\n            onChange: handleShapeColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block mb-1\",\n            children: \"Text Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: textColor,\n            onChange: handleTextColorChange,\n            className: \"w-8 h-8 p-0 border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadImage,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShape,\n          children: \"Add Shape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddText,\n          children: \"Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 800,\n          height: 500,\n          style: {\n            background: '#fff',\n            border: '1px solid #eee'\n          },\n          onMouseDown: handleCanvasMouseDown,\n          onMouseMove: handleCanvasMouseMove,\n          onMouseUp: handleCanvasMouseUp,\n          onMouseLeave: handleCanvasMouseUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"GqLEV4o3hb30XDUA0quX7STX33M=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","drawPolygon","ctx","x","y","radius","sides","color","beginPath","i","angle","Math","PI","dx","cos","dy","sin","moveTo","lineTo","closePath","fillStyle","fill","initialState","shapes","texts","lines","CanvasEditor","_s","canvasRef","fileInputRef","selectedShape","setSelectedShape","shapeColor","setShapeColor","drawMode","setDrawMode","textColor","setTextColor","pencilColor","setPencilColor","dragOffset","setDragOffset","selectedTextIndex","setSelectedTextIndex","selectedShapeIndex","setSelectedShapeIndex","isDragging","setIsDragging","isDrawing","setIsDrawing","history","setHistory","historyIndex","setHistoryIndex","drawingPointsRef","canvas","current","getContext","clearRect","width","height","lineWidth","lineCap","forEach","shape","idx","save","type","img","window","Image","src","onload","drawImage","w","h","strokeStyle","strokeRect","complete","fillRect","arc","translate","scale","restore","includes","pentagon","hexagon","heptagon","octagon","nonagon","decagon","line","points","stroke","text","font","fillText","measureText","saveState","newShapes","newTexts","newLines","newHistory","slice","push","JSON","parse","stringify","length","handleUndo","handleRedo","handleCanvasMouseDown","e","mouseX","nativeEvent","offsetX","mouseY","offsetY","handleCanvasMouseMove","map","t","s","handleCanvasMouseUp","newLine","handleAddShape","newShape","handleAddText","prompt","handleTextColorChange","target","value","handleShapeColorChange","handleUploadImage","click","handleFileChange","file","files","reader","FileReader","event","result","readAsDataURL","handleDownload","link","document","createElement","download","href","toDataURL","clearCanvas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","accept","ref","style","display","background","border","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Kritika Ekka/Week-6_final_project/matty-project/client/src/components/CanvasEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction drawPolygon(ctx, x, y, radius, sides, color) {\r\n  ctx.beginPath();\r\n  for (let i = 0; i < sides; i++) {\r\n    const angle = (2 * Math.PI * i) / sides - Math.PI / 2;\r\n    const dx = x + radius * Math.cos(angle);\r\n    const dy = y + radius * Math.sin(angle);\r\n    if (i === 0) ctx.moveTo(dx, dy);\r\n    else ctx.lineTo(dx, dy);\r\n  }\r\n  ctx.closePath();\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\nconst initialState = {\r\n  shapes: [],\r\n  texts: [],\r\n  lines: []\r\n};\r\n\r\nconst CanvasEditor = () => {\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const [selectedShape, setSelectedShape] = useState('rectangle');\r\n  const [shapeColor, setShapeColor] = useState('#4f46e5');\r\n  const [drawMode, setDrawMode] = useState(false);\r\n  const [textColor, setTextColor] = useState('#111827');\r\n  const [pencilColor, setPencilColor] = useState('#333'); // Pencil color state\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [selectedTextIndex, setSelectedTextIndex] = useState(null);\r\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [history, setHistory] = useState([initialState]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const drawingPointsRef = useRef([]); // for fast pencil tool\r\n\r\n  // Get current state from history\r\n  const { shapes, texts, lines } = history[historyIndex];\r\n\r\n  // Redraw canvas on every state change\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineWidth = 2;\r\n    ctx.lineCap = 'round';\r\n    // Draw shapes\r\n    shapes.forEach((shape, idx) => {\r\n      ctx.save();\r\n      if (shape.type === 'image') {\r\n        const img = new window.Image();\r\n        img.src = shape.src;\r\n        img.onload = () => {\r\n          ctx.drawImage(img, shape.x, shape.y, shape.w, shape.h);\r\n          if (idx === selectedShapeIndex) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(shape.x - 2, shape.y - 2, shape.w + 4, shape.h + 4);\r\n          }\r\n        };\r\n        if (img.complete) {\r\n          ctx.drawImage(img, shape.x, shape.y, shape.w, shape.h);\r\n          if (idx === selectedShapeIndex) {\r\n            ctx.strokeStyle = '#f59e42';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(shape.x - 2, shape.y - 2, shape.w + 4, shape.h + 4);\r\n          }\r\n        }\r\n      } else {\r\n        ctx.fillStyle = shape.color;\r\n        ctx.strokeStyle = shape.color;\r\n        if (shape.type === 'rectangle') {\r\n          ctx.fillRect(shape.x, shape.y, 120, 80);\r\n        } else if (shape.type === 'square') {\r\n          ctx.fillRect(shape.x, shape.y, 100, 100);\r\n        } else if (shape.type === 'circle') {\r\n          ctx.beginPath();\r\n          ctx.arc(shape.x + 50, shape.y + 50, 50, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n        } else if (shape.type === 'oval') {\r\n          ctx.save();\r\n          ctx.translate(shape.x + 60, shape.y + 40);\r\n          ctx.scale(1.5, 1);\r\n          ctx.beginPath();\r\n          ctx.arc(0, 0, 40, 0, 2 * Math.PI);\r\n          ctx.restore();\r\n          ctx.fill();\r\n        } else if (shape.type === 'triangle') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + 0, shape.y + 80);\r\n          ctx.lineTo(shape.x + 120, shape.y + 80);\r\n          ctx.lineTo(shape.x + 60, shape.y + 0);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'parallelogram') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + 20, shape.y + 80);\r\n          ctx.lineTo(shape.x + 140, shape.y + 80);\r\n          ctx.lineTo(shape.x + 120, shape.y + 0);\r\n          ctx.lineTo(shape.x + 0, shape.y + 0);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'rhombus') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + 60, shape.y + 0);\r\n          ctx.lineTo(shape.x + 120, shape.y + 40);\r\n          ctx.lineTo(shape.x + 60, shape.y + 80);\r\n          ctx.lineTo(shape.x + 0, shape.y + 40);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'trapezoid') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + 20, shape.y + 80);\r\n          ctx.lineTo(shape.x + 100, shape.y + 80);\r\n          ctx.lineTo(shape.x + 80, shape.y + 0);\r\n          ctx.lineTo(shape.x + 40, shape.y + 0);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if (shape.type === 'kite') {\r\n          ctx.beginPath();\r\n          ctx.moveTo(shape.x + 60, shape.y + 0);\r\n          ctx.lineTo(shape.x + 100, shape.y + 40);\r\n          ctx.lineTo(shape.x + 60, shape.y + 80);\r\n          ctx.lineTo(shape.x + 20, shape.y + 40);\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        } else if ([\r\n          'pentagon', 'hexagon', 'heptagon', 'octagon', 'nonagon', 'decagon'\r\n        ].includes(shape.type)) {\r\n          const sides = {\r\n            pentagon: 5, hexagon: 6, heptagon: 7, octagon: 8, nonagon: 9, decagon: 10\r\n          }[shape.type];\r\n          drawPolygon(ctx, shape.x + 60, shape.y + 60, 50, sides, shape.color);\r\n        }\r\n        if (idx === selectedShapeIndex) {\r\n          ctx.strokeStyle = '#f59e42';\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(shape.x - 2, shape.y - 2, 124, 84);\r\n        }\r\n      }\r\n      ctx.restore();\r\n    });\r\n    // Draw lines\r\n    lines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = line.color || '#333';\r\n      ctx.lineWidth = 2;\r\n      line.points.forEach(([x, y], i) => {\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      });\r\n      ctx.stroke();\r\n    });\r\n    // Draw texts\r\n    texts.forEach(({ text, x, y, color }, idx) => {\r\n      ctx.font = '24px Arial';\r\n      ctx.fillStyle = color;\r\n      ctx.fillText(text, x, y);\r\n      if (idx === selectedTextIndex) {\r\n        const width = ctx.measureText(text).width;\r\n        ctx.strokeStyle = '#f59e42';\r\n        ctx.strokeRect(x - 2, y - 24, width + 4, 28);\r\n      }\r\n    });\r\n  }, [shapes, texts, lines, selectedTextIndex, selectedShapeIndex]);\r\n\r\n  // --- Undo/Redo ---\r\n  const saveState = (newShapes, newTexts, newLines) => {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      shapes: JSON.parse(JSON.stringify(newShapes)),\r\n      texts: JSON.parse(JSON.stringify(newTexts)),\r\n      lines: JSON.parse(JSON.stringify(newLines))\r\n    });\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (historyIndex > 0) {\r\n      setHistoryIndex(historyIndex - 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n    }\r\n  };\r\n  const handleRedo = () => {\r\n    if (historyIndex < history.length - 1) {\r\n      setHistoryIndex(historyIndex + 1);\r\n      setSelectedTextIndex(null);\r\n      setSelectedShapeIndex(null);\r\n    }\r\n  };\r\n\r\n  // --- Drawing (fast pencil tool) ---\r\n  const handleCanvasMouseDown = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    // Check for text selection\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    for (let i = texts.length - 1; i >= 0; i--) {\r\n      const { text, x, y } = texts[i];\r\n      ctx.font = '24px Arial';\r\n      const width = ctx.measureText(text).width;\r\n      if (\r\n        mouseX >= x - 2 &&\r\n        mouseX <= x + width + 2 &&\r\n        mouseY >= y - 24 &&\r\n        mouseY <= y + 4\r\n      ) {\r\n        setSelectedTextIndex(i);\r\n        setSelectedShapeIndex(null);\r\n        setDragOffset({ x: mouseX - x, y: mouseY - y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    // Check for shape selection\r\n    for (let i = shapes.length - 1; i >= 0; i--) {\r\n      const shape = shapes[i];\r\n      let w = 120, h = 80;\r\n      if (shape.type === 'square') { w = 100; h = 100; }\r\n      if (shape.type === 'circle') { w = 100; h = 100; }\r\n      if (shape.type === 'oval') { w = 120; h = 80; }\r\n      if (shape.type === 'image') { w = shape.w; h = shape.h; }\r\n      if (\r\n        mouseX >= shape.x &&\r\n        mouseX <= shape.x + w &&\r\n        mouseY >= shape.y &&\r\n        mouseY <= shape.y + h\r\n      ) {\r\n        setSelectedShapeIndex(i);\r\n        setSelectedTextIndex(null);\r\n        setDragOffset({ x: mouseX - shape.x, y: mouseY - shape.y });\r\n        setIsDragging(true);\r\n        return;\r\n      }\r\n    }\r\n    // If not on text or shape, start drawing if in draw mode\r\n    if (drawMode) {\r\n      setIsDrawing(true);\r\n      drawingPointsRef.current = [[mouseX, mouseY]];\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n    if (isDrawing && drawMode) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      const points = drawingPointsRef.current;\r\n      points.push([mouseX, mouseY]);\r\n      // Draw just the new segment\r\n      if (points.length > 1) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(points[points.length - 2][0], points[points.length - 2][1]);\r\n        ctx.lineTo(mouseX, mouseY);\r\n        ctx.strokeStyle = pencilColor; // Use pencil color\r\n        ctx.lineWidth = 2;\r\n        ctx.stroke();\r\n      }\r\n      return;\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : t\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes, texts: newTexts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, x: mouseX - dragOffset.x, y: mouseY - dragOffset.y } : s\r\n      );\r\n      setHistory(h => {\r\n        const newHistory = h.slice(0, historyIndex + 1);\r\n        newHistory[historyIndex] = { shapes: newShapes, texts, lines };\r\n        return newHistory;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseUp = () => {\r\n    if (isDrawing && drawMode) {\r\n      setIsDrawing(false);\r\n      // Save the stroke to history for undo/redo\r\n      const newLine = { points: drawingPointsRef.current, color: pencilColor };\r\n      saveState(shapes, texts, [...lines, newLine]);\r\n      drawingPointsRef.current = [];\r\n    }\r\n    if (isDragging && selectedTextIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    if (isDragging && selectedShapeIndex !== null) {\r\n      saveState(shapes, texts, lines);\r\n      setIsDragging(false);\r\n    }\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n  };\r\n\r\n  // --- Add Shape ---\r\n  const handleAddShape = () => {\r\n    let newShape = { type: selectedShape, x: 300, y: 100, color: shapeColor };\r\n    if (selectedShape === 'image') return; // skip, handled by upload\r\n    saveState([...shapes, newShape], texts, lines);\r\n  };\r\n\r\n  // --- Add Text ---\r\n  const handleAddText = () => {\r\n    const text = prompt('Enter text to add:');\r\n    if (!text) return;\r\n    saveState(shapes, [...texts, { text, x: 100, y: 400, color: textColor }], lines);\r\n  };\r\n\r\n  // --- Change color of selected text ---\r\n  const handleTextColorChange = (e) => {\r\n    setTextColor(e.target.value);\r\n    if (selectedTextIndex !== null) {\r\n      const newTexts = texts.map((t, idx) =>\r\n        idx === selectedTextIndex ? { ...t, color: e.target.value } : t\r\n      );\r\n      saveState(shapes, newTexts, lines);\r\n    }\r\n  };\r\n\r\n  // --- Change color of selected shape ---\r\n  const handleShapeColorChange = (e) => {\r\n    setShapeColor(e.target.value);\r\n    if (selectedShapeIndex !== null) {\r\n      const newShapes = shapes.map((s, idx) =>\r\n        idx === selectedShapeIndex ? { ...s, color: e.target.value } : s\r\n      );\r\n      saveState(newShapes, texts, lines);\r\n    }\r\n  };\r\n\r\n  // --- Upload Image ---\r\n  const handleUploadImage = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      // Add image as a shape to history\r\n      const newShape = {\r\n        type: 'image',\r\n        x: 50,\r\n        y: 50,\r\n        w: 200,\r\n        h: 200,\r\n        src: event.target.result\r\n      };\r\n      saveState([...shapes, newShape], texts, lines);\r\n    };\r\n    reader.readAsDataURL(file);\r\n    e.target.value = '';\r\n  };\r\n\r\n  // --- Download ---\r\n  const handleDownload = () => {\r\n    const canvas = canvasRef.current;\r\n    const link = document.createElement('a');\r\n    link.download = 'canvas.png';\r\n    link.href = canvas.toDataURL();\r\n    link.click();\r\n  };\r\n\r\n  // --- Clear All ---\r\n  const clearCanvas = () => {\r\n    saveState([], [], []);\r\n    setSelectedTextIndex(null);\r\n    setSelectedShapeIndex(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Header Row */}\r\n      <header className=\"flex justify-between items-center p-4 bg-gray-100 border-b\">\r\n        <div className=\"text-xl font-bold\">MATTY</div>\r\n        <div className=\"flex gap-2\">{/* Social media icons */}</div>\r\n        <button className=\"px-4 py-2\">About Us</button>\r\n      </header>\r\n      {/* Tools Bar */}\r\n      <div className=\"flex gap-4 p-2 bg-gray-50 border-b\">\r\n        <button onClick={clearCanvas}>Clear All</button>\r\n        <button onClick={handleUndo} disabled={historyIndex === 0}>Undo</button>\r\n        <button onClick={handleRedo} disabled={historyIndex === history.length - 1}>Redo</button>\r\n      </div>\r\n      {/* Main Workspace */}\r\n      <div className=\"flex flex-1\">\r\n        {/* Sidebar */}\r\n        <aside className=\"flex flex-col gap-4 p-4 bg-gray-50 border-r\">\r\n          <button\r\n            className={drawMode ? 'font-bold underline' : ''}\r\n            onClick={() => setDrawMode(true)}\r\n          >\r\n            Pencil/Draw\r\n          </button>\r\n          <label>\r\n            <span className=\"block mb-1\">Pencil Color</span>\r\n            <input\r\n              type=\"color\"\r\n              value={pencilColor}\r\n              onChange={e => setPencilColor(e.target.value)}\r\n              className=\"w-8 h-8 p-0 border-0\"\r\n            />\r\n          </label>\r\n          <label>\r\n            <span className=\"block mb-1\">Shape</span>\r\n            <select\r\n              value={selectedShape}\r\n              onChange={e => {\r\n                setSelectedShape(e.target.value);\r\n                setDrawMode(false);\r\n              }}\r\n              className=\"mb-2 p-1 border rounded\"\r\n            >\r\n              <option value=\"rectangle\">Rectangle</option>\r\n              <option value=\"square\">Square</option>\r\n              <option value=\"circle\">Circle</option>\r\n              <option value=\"oval\">Oval</option>\r\n              <option value=\"triangle\">Triangle</option>\r\n              <option value=\"parallelogram\">Parallelogram</option>\r\n              <option value=\"rhombus\">Rhombus</option>\r\n              <option value=\"trapezoid\">Trapezoid</option>\r\n              <option value=\"kite\">Kite</option>\r\n              <option value=\"pentagon\">Pentagon</option>\r\n              <option value=\"hexagon\">Hexagon</option>\r\n              <option value=\"heptagon\">Heptagon</option>\r\n              <option value=\"octagon\">Octagon</option>\r\n              <option value=\"nonagon\">Nonagon</option>\r\n              <option value=\"decagon\">Decagon</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            <span className=\"block mb-1\">Shape Color</span>\r\n            <input\r\n              type=\"color\"\r\n              value={shapeColor}\r\n              onChange={handleShapeColorChange}\r\n              className=\"w-8 h-8 p-0 border-0\"\r\n            />\r\n          </label>\r\n          <label>\r\n            <span className=\"block mb-1\">Text Color</span>\r\n            <input\r\n              type=\"color\"\r\n              value={textColor}\r\n              onChange={handleTextColorChange}\r\n              className=\"w-8 h-8 p-0 border-0\"\r\n            />\r\n          </label>\r\n          <button onClick={handleUploadImage}>Upload Image</button>\r\n          <button onClick={handleAddShape}>Add Shape</button>\r\n          <button onClick={handleAddText}>Add Text</button>\r\n          <button onClick={handleDownload}>Download</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n            onChange={handleFileChange}\r\n          />\r\n        </aside>\r\n        <main className=\"flex-1 flex items-center justify-center\">\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={800}\r\n            height={500}\r\n            style={{ background: '#fff', border: '1px solid #eee' }}\r\n            onMouseDown={handleCanvasMouseDown}\r\n            onMouseMove={handleCanvasMouseMove}\r\n            onMouseUp={handleCanvasMouseUp}\r\n            onMouseLeave={handleCanvasMouseUp}\r\n          />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}